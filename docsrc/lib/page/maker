[%  # ARGS: xpage - an XML DOM node to a page element
    #       xcontent(xnode, name) - MACRO to fetch name element from node

    # setup data
    id   = xpage.id;
    name = xpage.name or id;
    file = name.replace('::', '/');
    ext  = book.type.search('pod') ? '.pod' : '';
    pod  = xpage.podfile 
      or ( book.prefix ? "$book.prefix/${file}${ext}"
    		       : "${file}${ext}" );

    IF xpage.module;
	PERL
-%]
my $mod = $stash->get('name');
my $ver = eval "require $mod; \$$mod\::VERSION;";
$stash->set('modver' => $ver);
[%-
	END;
    END;

    page = {
    	id      = id
    	name    = name
    	src     = xpage.src or "$book.src/${file}.tt2"
    	title   = xpage.title or name
    	author  = xpage.author or 'abw'
    	nofoot  = xpage.nofoot
    	seealso = xpage.seealso
        module  = xpage.module
	version = modver
    	podfile = pod
    	podname = pod.replace('\/', '::').replace('\.pod$', '')
	about   = xpage.about or xcontent(xpage, 'about')
	intro   = xcontent(xpage, 'intro')
    	html    = xpage.html 
    	     or ( book.html ? "$book.html/${file}.html"
    			    : "${file}.html" )
	standalone = xpage.standalone
    };

    IF debug;
#	RETURN UNLESS page.id == 'Config';
    END;

    # status info
    PROCESS page/info | stderr UNLESS quiet;

    # process source template to glue content together
    content = PROCESS $page.src;

    IF book.type == 'pod';
	# generate pod page and template for HTML 
	content = PROCESS pod/page;
	content | redirect("$dir.pod/$page.podfile");
	PROCESS html/page | redirect("$dir.html.src/$page.html");
    ELSIF book.type == 'text';
	# write text to file and create simple wrapper for HTML
	content | redirect("$dir.text/$page.podfile");
	PROCESS html/text | redirect("$dir.html.src/$page.html");
    END;
-%]
