[% TAGS star %]
[* DEFAULT 
   obj = '$template'
   pkg = 'Template'
-*]
=item DEBUG

The DEBUG option enables debugging within the Template Toolkit.  

    my [* obj *] = [* pkg *]->new({
	DEBUG => 1,
    });

Setting this to a true value has two effects.  The first is that
accessing any variable that returns an undefined variable will cause
an 'undef' error to be raised.

The second is that the output generated by the Template Toolkit will
have comments added indicating the source file, line and original text
of each directive in the template.

For example, the following template fragment:

    [% foo = 'World' %]
    Hello [% foo %]

would generate this output:

    ## input text line 1 : [% foo = 'World' %] ##
    Hello 
    ## input text line 2 : [% foo %] ##
    World

The DEBUG directive can be used to enable and disable directive
debugging at different parts of a template.  The DEBUG constructor
option must be set for the DEBUG directive to have any effect.

    [% DEBUG on %]
    [% foo = 'World' %]
    [% DEBUG off %]
    Hello [% foo %]

This template fragment would generate the following output:

    ## input text line 1 : [% foo = 'World' %] ##
    Hello World

It is anticipated that a future version of the Template Toolkit will
support allow the different debugging options to be enabled or
disabled individually.

=item DEBUG_FORMAT

The DEBUG_FORMAT option can be used to specify a format string for the
debugging messages described in the DEBUG option above.  Any
occurances of C<$file>, C<$line> or C<$text> will be replaced with the
current file name, line or directive text, respectively.  Notice how
the format is single quoted to prevent Perl from interpolating those
tokens as variables.

    my [* obj *] = [* pkg *]->new({
	DEBUG => 1,
	DEBUG_FORMAT => '<!-- $file line $line : [% $text %] -->',
    });

The following template fragment:

    [% DEBUG on %]
    [% foo = 'World' %]
    Hello [% foo %]

would then generate this output:

    <!-- input text line 2 : [% foo = 'World' %] -->
    Hello <!-- input text line 3 : [% foo %] -->World

The DEBUG directive can also be used to set a debug format within
a template.

    [% DEBUG format '<!-- $file line $line : [% $text %] -->' %]

    


