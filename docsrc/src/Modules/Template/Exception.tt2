[% TAGS [* *] -%]

=head1 SYNOPSIS

    use Template::Exception;

    my $exception = Template::Exception->new($type, $info);
    $type = $exception->type;
    $info = $exception->info;
    ($type, $info) = $exception->type_info;

    print $exception->as_string();

    $handler = $exception->select_handler(\@candidates);

=head1 DESCRIPTION

The Template::Exception module defines an object class for
representing exceptions within the template processing life cycle.
Exceptions can be raised by modules within the Template Toolkit, or
can be generated and returned by user code bound to template
variables.

[* PROCESS misc/exceptions *]

Each exception is defined by its type and a information component
(e.g. error message).  The type can be any identifying string and may
contain dotted components (e.g. 'foo', 'foo.bar', 'foo.bar.baz').
Exception types are considered to be hierarchical such that 'foo.bar'
would be a specific type of the more general 'foo' type.  

