#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT
	IF UNLESS ELSE ELSIF FOR FORNEXT WHILE SWITCH CASE META
	TRY THROW CATCH FINAL BREAK RETURN STOP CLEAR
    );

%CMPOP = qw( != ne  == eq  < <  > >  >= >=  <= <= );


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT'		# regardless of CASE sensitivity flag
};

# localise the temporary variables needed to complete lexer table
{ 
    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( + - * % );             # '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			"\"" => 45,
			'BLOCK' => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			"[" => 53,
			'DEFAULT' => 52,
			"{" => 17,
			'THROW' => 57,
			'CALL' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 29,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'loop' => 55,
			'defblock' => 54,
			'capture' => 18,
			'template' => 42,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 1
		DEFAULT => -93
	},
	{#State 2
		DEFAULT => -101
	},
	{#State 3
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 71,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 4
		DEFAULT => -23
	},
	{#State 5
		ACTIONS => {
			";" => -19
		},
		DEFAULT => -26
	},
	{#State 6
		DEFAULT => -72,
		GOTOS => {
			'@3-1' => 73
		}
	},
	{#State 7
		ACTIONS => {
			'IDENT' => 74
		}
	},
	{#State 8
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 83,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 9
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 85
		},
		DEFAULT => -97
	},
	{#State 10
		DEFAULT => -14
	},
	{#State 11
		DEFAULT => -6
	},
	{#State 12
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 51,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 87,
			'assign' => 88,
			'item' => 24,
			'ident' => 86,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 13
		DEFAULT => -20
	},
	{#State 14
		DEFAULT => -12
	},
	{#State 15
		ACTIONS => {
			";" => 89
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 91
		},
		GOTOS => {
			'meta' => 92,
			'metadata' => 90
		}
	},
	{#State 17
		ACTIONS => {
			'LITERAL' => 95,
			'IDENT' => 94
		},
		DEFAULT => -107,
		GOTOS => {
			'param' => 97,
			'params' => 93,
			'hash' => 96
		}
	},
	{#State 18
		DEFAULT => -11
	},
	{#State 19
		ACTIONS => {
			'BINOP' => 99,
			'OR' => 102,
			";" => -15,
			'AND' => 100,
			'CMPOP' => 101,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -25
	},
	{#State 20
		DEFAULT => -92
	},
	{#State 21
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 104,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 22
		ACTIONS => {
			"\${" => 49,
			'LITERAL' => 107,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 67,
			'setlist' => 106,
			'item' => 24,
			'ident' => 105,
			'node' => 58
		}
	},
	{#State 23
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 108,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 24
		ACTIONS => {
			"(" => 109
		},
		DEFAULT => -116
	},
	{#State 25
		ACTIONS => {
			'COMMA' => 110,
			"\${" => 49,
			'LITERAL' => 107,
			'IDENT' => 27,
			"\$" => 7
		},
		DEFAULT => -18,
		GOTOS => {
			'assign' => 111,
			'item' => 24,
			'ident' => 105,
			'node' => 58
		}
	},
	{#State 26
		DEFAULT => -5
	},
	{#State 27
		DEFAULT => -118
	},
	{#State 28
		ACTIONS => {
			";" => 112
		}
	},
	{#State 29
		DEFAULT => -1
	},
	{#State 30
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 113,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 31
		ACTIONS => {
			"\${" => 49,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 114,
			'node' => 58
		}
	},
	{#State 32
		ACTIONS => {
			'IDENT' => 115
		}
	},
	{#State 33
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 116,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 34
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 117,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 35
		DEFAULT => -8
	},
	{#State 36
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 122,
			"\${" => 49,
			'FILENAME' => 77,
			'LITERAL' => 123,
			'IDENT' => 120,
			"\$" => 118
		},
		GOTOS => {
			'lvalue' => 124,
			'lnameargs' => 121,
			'nameargs' => 125,
			'item' => 119,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 37
		DEFAULT => -35
	},
	{#State 38
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 126,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 39
		DEFAULT => -40
	},
	{#State 40
		DEFAULT => -38
	},
	{#State 41
		DEFAULT => -39
	},
	{#State 42
		ACTIONS => {
			'' => 127
		}
	},
	{#State 43
		ACTIONS => {
			";" => 128
		}
	},
	{#State 44
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			";" => 129,
			'IDENT' => 79
		},
		GOTOS => {
			'filename' => 130,
			'filepart' => 82
		}
	},
	{#State 45
		DEFAULT => -156,
		GOTOS => {
			'quoted' => 131
		}
	},
	{#State 46
		DEFAULT => -21
	},
	{#State 47
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 122,
			"\${" => 49,
			'FILENAME' => 77,
			'LITERAL' => 123,
			'IDENT' => 120,
			"\$" => 118
		},
		GOTOS => {
			'lvalue' => 124,
			'lnameargs' => 132,
			'nameargs' => 125,
			'item' => 119,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 48
		DEFAULT => -10
	},
	{#State 49
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 49,
			'REF' => 31,
			'LITERAL' => 72,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 133,
			'item' => 24,
			'ident' => 70,
			'node' => 58
		}
	},
	{#State 50
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -2,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 134,
			'atomdir' => 5,
			'switch' => 46,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 51
		ACTIONS => {
			'ASSIGN' => 135
		},
		DEFAULT => -100
	},
	{#State 52
		ACTIONS => {
			"\${" => 49,
			'LITERAL' => 107,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 67,
			'setlist' => 136,
			'item' => 24,
			'ident' => 105,
			'node' => 58
		}
	},
	{#State 53
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 137,
			'list' => 138,
			'range' => 139,
			'item' => 24,
			'ident' => 70,
			'term' => 140,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 54
		DEFAULT => -9
	},
	{#State 55
		DEFAULT => -22
	},
	{#State 56
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 141,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 57
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 142,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 58
		DEFAULT => -115
	},
	{#State 59
		DEFAULT => -36
	},
	{#State 60
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 143,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 145,
			'lterm' => 20,
			'loopvar' => 144,
			'node' => 58
		}
	},
	{#State 61
		DEFAULT => -24
	},
	{#State 62
		DEFAULT => -37
	},
	{#State 63
		DEFAULT => -41
	},
	{#State 64
		DEFAULT => -13
	},
	{#State 65
		ACTIONS => {
			'FOR' => 150,
			'UNLESS' => 146,
			'IF' => 151,
			'WHILE' => 148,
			'FILTER' => 149,
			'WRAPPER' => 147
		}
	},
	{#State 66
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 152,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 67
		DEFAULT => -133
	},
	{#State 68
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 153,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 69
		DEFAULT => -130
	},
	{#State 70
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -97
	},
	{#State 71
		ACTIONS => {
			'CMPOP' => 101,
			'BINOP' => 99,
			"/" => 103
		},
		DEFAULT => -126
	},
	{#State 72
		DEFAULT => -100
	},
	{#State 73
		ACTIONS => {
			";" => 154
		}
	},
	{#State 74
		DEFAULT => -120
	},
	{#State 75
		DEFAULT => -154
	},
	{#State 76
		ACTIONS => {
			"\${" => 49,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 155,
			'node' => 58
		}
	},
	{#State 77
		DEFAULT => -152
	},
	{#State 78
		ACTIONS => {
			'DOT' => 158,
			"(" => 157
		},
		DEFAULT => -139,
		GOTOS => {
			'args' => 156
		}
	},
	{#State 79
		DEFAULT => -153
	},
	{#State 80
		DEFAULT => -156,
		GOTOS => {
			'quoted' => 159
		}
	},
	{#State 81
		DEFAULT => -139,
		GOTOS => {
			'args' => 160
		}
	},
	{#State 82
		DEFAULT => -151
	},
	{#State 83
		DEFAULT => -33
	},
	{#State 84
		ACTIONS => {
			'NUMBER' => 161,
			"\${" => 49,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'node' => 162
		}
	},
	{#State 85
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 166,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			"(" => 12,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 165,
			'sterm' => 1,
			'mdir' => 163,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 46,
			'atomexpr' => 65,
			'loop' => 55,
			'expr' => 164,
			'assign' => 67,
			'perl' => 61,
			'ident' => 86,
			'term' => 69,
			'filter' => 63,
			'lterm' => 20,
			'node' => 58,
			'condition' => 13
		}
	},
	{#State 86
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 167
		},
		DEFAULT => -97
	},
	{#State 87
		ACTIONS => {
			'AND' => 100,
			")" => 168,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98
		}
	},
	{#State 88
		ACTIONS => {
			")" => 169
		}
	},
	{#State 89
		DEFAULT => -7
	},
	{#State 90
		ACTIONS => {
			'COMMA' => 170,
			'IDENT' => 91
		},
		DEFAULT => -16,
		GOTOS => {
			'meta' => 171
		}
	},
	{#State 91
		ACTIONS => {
			'ASSIGN' => 172
		}
	},
	{#State 92
		DEFAULT => -88
	},
	{#State 93
		ACTIONS => {
			'COMMA' => 173,
			'LITERAL' => 95,
			'IDENT' => 94
		},
		DEFAULT => -106,
		GOTOS => {
			'param' => 174
		}
	},
	{#State 94
		ACTIONS => {
			'ASSIGN' => 175
		}
	},
	{#State 95
		ACTIONS => {
			'ASSIGN' => 176
		}
	},
	{#State 96
		ACTIONS => {
			"}" => 177
		}
	},
	{#State 97
		DEFAULT => -110
	},
	{#State 98
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 178,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 99
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 179,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 100
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 180,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 101
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 181,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 102
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 182,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 103
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 183,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 104
		DEFAULT => -31
	},
	{#State 105
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 167
		}
	},
	{#State 106
		ACTIONS => {
			'LITERAL' => 107,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 110,
			"\${" => 49
		},
		DEFAULT => -29,
		GOTOS => {
			'assign' => 111,
			'item' => 24,
			'ident' => 105,
			'node' => 58
		}
	},
	{#State 107
		ACTIONS => {
			'ASSIGN' => 135
		}
	},
	{#State 108
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98,
			";" => 184
		}
	},
	{#State 109
		DEFAULT => -139,
		GOTOS => {
			'args' => 185
		}
	},
	{#State 110
		DEFAULT => -132
	},
	{#State 111
		DEFAULT => -131
	},
	{#State 112
		DEFAULT => -70,
		GOTOS => {
			'@2-2' => 186
		}
	},
	{#State 113
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98,
			";" => 187
		}
	},
	{#State 114
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -98
	},
	{#State 115
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 166,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			"(" => 188,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 165,
			'sterm' => 1,
			'mdir' => 189,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 46,
			'atomexpr' => 65,
			'loop' => 55,
			'expr' => 190,
			'assign' => 67,
			'perl' => 61,
			'ident' => 86,
			'term' => 69,
			'filter' => 63,
			'lterm' => 20,
			'node' => 58,
			'condition' => 13
		}
	},
	{#State 116
		DEFAULT => -32
	},
	{#State 117
		ACTIONS => {
			";" => 191
		}
	},
	{#State 118
		ACTIONS => {
			"\${" => 49,
			'IDENT' => 192,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 155,
			'node' => 58
		}
	},
	{#State 119
		DEFAULT => -142
	},
	{#State 120
		ACTIONS => {
			'ASSIGN' => -118
		},
		DEFAULT => -153
	},
	{#State 121
		DEFAULT => -69
	},
	{#State 122
		DEFAULT => -156,
		GOTOS => {
			'quoted' => 193
		}
	},
	{#State 123
		ACTIONS => {
			'ASSIGN' => -144
		},
		DEFAULT => -139,
		GOTOS => {
			'args' => 160
		}
	},
	{#State 124
		ACTIONS => {
			'ASSIGN' => 194
		}
	},
	{#State 125
		DEFAULT => -141
	},
	{#State 126
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98,
			";" => 195
		}
	},
	{#State 127
		DEFAULT => -0
	},
	{#State 128
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 196,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 129
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 197,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 130
		ACTIONS => {
			'DOT' => 158,
			";" => 198
		}
	},
	{#State 131
		ACTIONS => {
			"\"" => 202,
			"\${" => 49,
			'TEXT' => 200,
			";" => 201,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 203,
			'item' => 24,
			'ident' => 199,
			'node' => 58
		}
	},
	{#State 132
		ACTIONS => {
			";" => 204
		}
	},
	{#State 133
		ACTIONS => {
			"}" => 205
		}
	},
	{#State 134
		DEFAULT => -4
	},
	{#State 135
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 206,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 136
		ACTIONS => {
			'LITERAL' => 107,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 110,
			"\${" => 49
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 111,
			'item' => 24,
			'ident' => 105,
			'node' => 58
		}
	},
	{#State 137
		ACTIONS => {
			'TO' => 207
		},
		DEFAULT => -93
	},
	{#State 138
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 209,
			"{" => 17,
			"]" => 208,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 210,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 139
		ACTIONS => {
			"]" => 211
		}
	},
	{#State 140
		DEFAULT => -104
	},
	{#State 141
		ACTIONS => {
			'BINOP' => 99,
			'OR' => 102,
			'AND' => 100,
			'CMPOP' => 101,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -28
	},
	{#State 142
		DEFAULT => -34
	},
	{#State 143
		ACTIONS => {
			'ASSIGN' => 212
		},
		DEFAULT => -118
	},
	{#State 144
		ACTIONS => {
			";" => 213
		}
	},
	{#State 145
		DEFAULT => -139,
		GOTOS => {
			'args' => 214
		}
	},
	{#State 146
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 215,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 147
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 216,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 148
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 217,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 149
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 122,
			"\${" => 49,
			'FILENAME' => 77,
			'LITERAL' => 123,
			'IDENT' => 120,
			"\$" => 118
		},
		GOTOS => {
			'lvalue' => 124,
			'lnameargs' => 218,
			'nameargs' => 125,
			'item' => 119,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 150
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 143,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 145,
			'lterm' => 20,
			'loopvar' => 219,
			'node' => 58
		}
	},
	{#State 151
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 220,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 152
		ACTIONS => {
			'BINOP' => 99,
			'OR' => 102,
			'AND' => 100,
			'CMPOP' => 101,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -27
	},
	{#State 153
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98,
			";" => 221
		}
	},
	{#State 154
		ACTIONS => {
			'TEXT' => 222
		}
	},
	{#State 155
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -139,
		GOTOS => {
			'args' => 223
		}
	},
	{#State 156
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 224,
			"\$" => 7,
			'REF' => 31,
			"\${" => 49,
			'LITERAL' => 225,
			"[" => 53,
			"{" => 17,
			'COMMA' => 226
		},
		DEFAULT => -149,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 157
		DEFAULT => -139,
		GOTOS => {
			'args' => 229
		}
	},
	{#State 158
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			'IDENT' => 79
		},
		GOTOS => {
			'filepart' => 230
		}
	},
	{#State 159
		ACTIONS => {
			"\"" => 231,
			"\${" => 49,
			'TEXT' => 200,
			";" => 201,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 203,
			'item' => 24,
			'ident' => 199,
			'node' => 58
		}
	},
	{#State 160
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 224,
			"\$" => 7,
			'REF' => 31,
			"\${" => 49,
			'LITERAL' => 225,
			"[" => 53,
			"{" => 17,
			'COMMA' => 226
		},
		DEFAULT => -147,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 161
		DEFAULT => -114
	},
	{#State 162
		DEFAULT => -113
	},
	{#State 163
		DEFAULT => -78
	},
	{#State 164
		ACTIONS => {
			'IDENT' => -134,
			"\$" => -134,
			'AND' => 100,
			"\${" => -134,
			'CMPOP' => 101,
			'BINOP' => 99,
			'OR' => 102,
			'LITERAL' => -134,
			";" => -134,
			'COMMA' => -134,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -25
	},
	{#State 165
		DEFAULT => -81
	},
	{#State 166
		ACTIONS => {
			";" => 232
		}
	},
	{#State 167
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 233,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 168
		DEFAULT => -129
	},
	{#State 169
		DEFAULT => -128
	},
	{#State 170
		DEFAULT => -87
	},
	{#State 171
		DEFAULT => -86
	},
	{#State 172
		ACTIONS => {
			'NUMBER' => 234,
			"\"" => 235,
			'LITERAL' => 236
		}
	},
	{#State 173
		DEFAULT => -109
	},
	{#State 174
		DEFAULT => -108
	},
	{#State 175
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 176
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 238,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 177
		DEFAULT => -96
	},
	{#State 178
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			":" => 239,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98
		}
	},
	{#State 179
		ACTIONS => {
			"/" => 103
		},
		DEFAULT => -121
	},
	{#State 180
		ACTIONS => {
			'CMPOP' => 101,
			'BINOP' => 99,
			"/" => 103
		},
		DEFAULT => -124
	},
	{#State 181
		ACTIONS => {
			'BINOP' => 99,
			"/" => 103
		},
		DEFAULT => -123
	},
	{#State 182
		ACTIONS => {
			'CMPOP' => 101,
			'BINOP' => 99,
			"/" => 103
		},
		DEFAULT => -125
	},
	{#State 183
		DEFAULT => -122
	},
	{#State 184
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 240,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 185
		ACTIONS => {
			")" => 241,
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 225,
			"[" => 53,
			'IDENT' => 224,
			"\$" => 7,
			'COMMA' => 226,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 186
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 242,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 187
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 243,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 188
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 51,
			"[" => 53,
			'IDENT' => 244,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 87,
			'assign' => 88,
			'margs' => 245,
			'item' => 24,
			'ident' => 86,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 189
		DEFAULT => -80
	},
	{#State 190
		ACTIONS => {
			'BINOP' => 99,
			'OR' => 102,
			'AND' => 100,
			'CMPOP' => 101,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -25
	},
	{#State 191
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 246,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 192
		ACTIONS => {
			'ASSIGN' => -120
		},
		DEFAULT => -118
	},
	{#State 193
		ACTIONS => {
			"\"" => 247,
			"\${" => 49,
			'TEXT' => 200,
			";" => 201,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 203,
			'item' => 24,
			'ident' => 199,
			'node' => 58
		}
	},
	{#State 194
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 248,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 195
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 249,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 196
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 252
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 251
		}
	},
	{#State 197
		ACTIONS => {
			'END' => 253
		}
	},
	{#State 198
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 29,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'template' => 254,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 199
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -157
	},
	{#State 200
		DEFAULT => -158
	},
	{#State 201
		DEFAULT => -159
	},
	{#State 202
		DEFAULT => -99
	},
	{#State 203
		DEFAULT => -155
	},
	{#State 204
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 255,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 205
		DEFAULT => -119
	},
	{#State 206
		ACTIONS => {
			'AND' => 100,
			'CMPOP' => 101,
			'BINOP' => 99,
			'OR' => 102,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -135
	},
	{#State 207
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 49,
			'REF' => 31,
			'LITERAL' => 72,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 256,
			'item' => 24,
			'ident' => 70,
			'node' => 58
		}
	},
	{#State 208
		DEFAULT => -94
	},
	{#State 209
		DEFAULT => -103
	},
	{#State 210
		DEFAULT => -102
	},
	{#State 211
		DEFAULT => -95
	},
	{#State 212
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 257,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 213
		DEFAULT => -54,
		GOTOS => {
			'@1-3' => 258
		}
	},
	{#State 214
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 225,
			"[" => 53,
			'IDENT' => 224,
			"\$" => 7,
			'COMMA' => 226,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		DEFAULT => -60,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 215
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98
		},
		DEFAULT => -45
	},
	{#State 216
		DEFAULT => -62
	},
	{#State 217
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98
		},
		DEFAULT => -58
	},
	{#State 218
		DEFAULT => -75
	},
	{#State 219
		DEFAULT => -56
	},
	{#State 220
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98
		},
		DEFAULT => -43
	},
	{#State 221
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 259,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 222
		ACTIONS => {
			'END' => 260
		}
	},
	{#State 223
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 224,
			"\$" => 7,
			'REF' => 31,
			"\${" => 49,
			'LITERAL' => 225,
			"[" => 53,
			"{" => 17,
			'COMMA' => 226
		},
		DEFAULT => -145,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 224
		ACTIONS => {
			'ASSIGN' => 175
		},
		DEFAULT => -118
	},
	{#State 225
		ACTIONS => {
			'ASSIGN' => 176
		},
		DEFAULT => -100
	},
	{#State 226
		DEFAULT => -138
	},
	{#State 227
		DEFAULT => -137
	},
	{#State 228
		DEFAULT => -136
	},
	{#State 229
		ACTIONS => {
			")" => 261,
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 225,
			"[" => 53,
			'IDENT' => 224,
			"\$" => 7,
			'COMMA' => 226,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 230
		DEFAULT => -150
	},
	{#State 231
		DEFAULT => -139,
		GOTOS => {
			'args' => 262
		}
	},
	{#State 232
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 263,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 233
		ACTIONS => {
			'AND' => 100,
			'CMPOP' => 101,
			'BINOP' => 99,
			'OR' => 102,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -134
	},
	{#State 234
		DEFAULT => -91
	},
	{#State 235
		ACTIONS => {
			'TEXT' => 264
		}
	},
	{#State 236
		DEFAULT => -89
	},
	{#State 237
		DEFAULT => -112
	},
	{#State 238
		DEFAULT => -111
	},
	{#State 239
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 265,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 240
		ACTIONS => {
			'CASE' => 267
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 266
		}
	},
	{#State 241
		DEFAULT => -117
	},
	{#State 242
		ACTIONS => {
			'END' => 268
		}
	},
	{#State 243
		ACTIONS => {
			'ELSE' => 269,
			'ELSIF' => 271
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 270
		}
	},
	{#State 244
		ACTIONS => {
			")" => -85,
			'IDENT' => -85,
			'COMMA' => -85
		},
		DEFAULT => -118
	},
	{#State 245
		ACTIONS => {
			'COMMA' => 274,
			")" => 273,
			'IDENT' => 272
		}
	},
	{#State 246
		ACTIONS => {
			'END' => 275
		}
	},
	{#State 247
		ACTIONS => {
			'ASSIGN' => -143
		},
		DEFAULT => -139,
		GOTOS => {
			'args' => 262
		}
	},
	{#State 248
		DEFAULT => -140
	},
	{#State 249
		ACTIONS => {
			'END' => 276
		}
	},
	{#State 250
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			";" => 277,
			'DEFAULT' => 279,
			'IDENT' => 79
		},
		GOTOS => {
			'filename' => 278,
			'filepart' => 82
		}
	},
	{#State 251
		ACTIONS => {
			'END' => 280
		}
	},
	{#State 252
		ACTIONS => {
			";" => 281
		}
	},
	{#State 253
		DEFAULT => -77
	},
	{#State 254
		ACTIONS => {
			'END' => 282
		}
	},
	{#State 255
		ACTIONS => {
			'END' => 283
		}
	},
	{#State 256
		DEFAULT => -105
	},
	{#State 257
		DEFAULT => -139,
		GOTOS => {
			'args' => 284
		}
	},
	{#State 258
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 285,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 259
		ACTIONS => {
			'ELSE' => 269,
			'ELSIF' => 271
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 286
		}
	},
	{#State 260
		DEFAULT => -73
	},
	{#State 261
		DEFAULT => -148
	},
	{#State 262
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 224,
			"\$" => 7,
			'REF' => 31,
			"\${" => 49,
			'LITERAL' => 225,
			"[" => 53,
			"{" => 17,
			'COMMA' => 226
		},
		DEFAULT => -146,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 263
		ACTIONS => {
			'END' => 287
		}
	},
	{#State 264
		ACTIONS => {
			"\"" => 288
		}
	},
	{#State 265
		ACTIONS => {
			'AND' => 100,
			'CMPOP' => 101,
			'BINOP' => 99,
			'OR' => 102,
			"/" => 103,
			"?" => 98
		},
		DEFAULT => -127
	},
	{#State 266
		ACTIONS => {
			'END' => 289
		}
	},
	{#State 267
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 49,
			'REF' => 31,
			'LITERAL' => 72,
			";" => 290,
			'DEFAULT' => 291,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 292,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 268
		DEFAULT => -71
	},
	{#State 269
		ACTIONS => {
			";" => 293
		}
	},
	{#State 270
		ACTIONS => {
			'END' => 294
		}
	},
	{#State 271
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 53,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 49,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 295,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 272
		DEFAULT => -83
	},
	{#State 273
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 166,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			"(" => 12,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 165,
			'sterm' => 1,
			'mdir' => 296,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 46,
			'atomexpr' => 65,
			'loop' => 55,
			'expr' => 190,
			'assign' => 67,
			'perl' => 61,
			'ident' => 86,
			'term' => 69,
			'filter' => 63,
			'lterm' => 20,
			'node' => 58,
			'condition' => 13
		}
	},
	{#State 274
		DEFAULT => -84
	},
	{#State 275
		DEFAULT => -61
	},
	{#State 276
		DEFAULT => -57
	},
	{#State 277
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 297,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 278
		ACTIONS => {
			'DOT' => 158,
			";" => 298
		}
	},
	{#State 279
		ACTIONS => {
			";" => 299
		}
	},
	{#State 280
		DEFAULT => -63
	},
	{#State 281
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 300,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 282
		DEFAULT => -76
	},
	{#State 283
		DEFAULT => -74
	},
	{#State 284
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 225,
			"[" => 53,
			'IDENT' => 224,
			"\$" => 7,
			'COMMA' => 226,
			"{" => 17,
			'REF' => 31,
			"\${" => 49
		},
		DEFAULT => -59,
		GOTOS => {
			'sterm' => 1,
			'param' => 227,
			'item' => 24,
			'ident' => 70,
			'term' => 228,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 285
		ACTIONS => {
			'END' => 301
		}
	},
	{#State 286
		ACTIONS => {
			'END' => 302
		}
	},
	{#State 287
		DEFAULT => -82
	},
	{#State 288
		DEFAULT => -90
	},
	{#State 289
		DEFAULT => -49
	},
	{#State 290
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 303,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 291
		ACTIONS => {
			";" => 304
		}
	},
	{#State 292
		ACTIONS => {
			";" => 305
		}
	},
	{#State 293
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 306,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 294
		DEFAULT => -44
	},
	{#State 295
		ACTIONS => {
			'AND' => 100,
			'BINOP' => 99,
			'CMPOP' => 101,
			"/" => 103,
			'OR' => 102,
			"?" => 98,
			";" => 307
		}
	},
	{#State 296
		DEFAULT => -79
	},
	{#State 297
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 252
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 308
		}
	},
	{#State 298
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 309,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 299
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 310,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 300
		DEFAULT => -67
	},
	{#State 301
		DEFAULT => -55
	},
	{#State 302
		DEFAULT => -42
	},
	{#State 303
		DEFAULT => -52
	},
	{#State 304
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 311,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 305
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 312,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 306
		DEFAULT => -47
	},
	{#State 307
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 49,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 51,
			'DEFAULT' => 52,
			"[" => 53,
			"{" => 17,
			'CALL' => 56,
			'THROW' => 57,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 59,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 60,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 62,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'RETURN' => 37,
			'WHILE' => 38,
			'BREAK' => 40,
			'GET' => 66,
			'FORNEXT' => 41,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 313,
			'anonblock' => 48,
			'perl' => 61,
			'ident' => 9,
			'filter' => 63,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 64,
			'statement' => 15,
			'chunks' => 50,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 54,
			'loop' => 55,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 58
		}
	},
	{#State 308
		DEFAULT => -66
	},
	{#State 309
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 252
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 314
		}
	},
	{#State 310
		ACTIONS => {
			'CATCH' => 250,
			'FINAL' => 252
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 315
		}
	},
	{#State 311
		DEFAULT => -51
	},
	{#State 312
		ACTIONS => {
			'CASE' => 267
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 316
		}
	},
	{#State 313
		ACTIONS => {
			'ELSE' => 269,
			'ELSIF' => 271
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 317
		}
	},
	{#State 314
		DEFAULT => -64
	},
	{#State 315
		DEFAULT => -65
	},
	{#State 316
		DEFAULT => -50
	},
	{#State 317
		DEFAULT => -46
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 56 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 59 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 60 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 63 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 65 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 68 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1,
sub
#line 80 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 16
		 'statement', 2,
sub
#line 81 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 17
		 'statement', 0, undef
	],
	[#Rule 18
		 'directive', 1,
sub
#line 85 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 19
		 'directive', 1, undef
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'atomexpr', 1,
sub
#line 99 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 26
		 'atomexpr', 1, undef
	],
	[#Rule 27
		 'atomdir', 2,
sub
#line 103 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 104 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 105 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 106 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 107 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 108 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 109 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 111 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 35
		 'atomdir', 1,
sub
#line 112 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 113 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 114 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 115 "Parser.yp"
{ 'last;'                             }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 116 "Parser.yp"
{ $_[0]->{ INFOR }
					? $factory->next()
				        : 'next;'                         }
	],
	[#Rule 40
		 'atomdir', 1, undef
	],
	[#Rule 41
		 'atomdir', 1, undef
	],
	[#Rule 42
		 'condition', 6,
sub
#line 124 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 43
		 'condition', 3,
sub
#line 125 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 44
		 'condition', 6,
sub
#line 127 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 45
		 'condition', 3,
sub
#line 128 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 46
		 'else', 5,
sub
#line 132 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 47
		 'else', 3,
sub
#line 134 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 48
		 'else', 0,
sub
#line 135 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 49
		 'switch', 6,
sub
#line 139 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 50
		 'case', 5,
sub
#line 143 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 51
		 'case', 4,
sub
#line 145 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 52
		 'case', 3,
sub
#line 146 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 53
		 'case', 0,
sub
#line 147 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 54
		 '@1-3', 0,
sub
#line 150 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 55
		 'loop', 6,
sub
#line 151 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 56
		 'loop', 3,
sub
#line 155 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 57
		 'loop', 5,
sub
#line 157 "Parser.yp"
{ $factory->while(@_[2, 4])           }
	],
	[#Rule 58
		 'loop', 3,
sub
#line 158 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 59
		 'loopvar', 4,
sub
#line 161 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 60
		 'loopvar', 2,
sub
#line 162 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 61
		 'wrapper', 5,
sub
#line 166 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 62
		 'wrapper', 3,
sub
#line 168 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 63
		 'try', 5,
sub
#line 172 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 64
		 'final', 5,
sub
#line 176 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 65
		 'final', 5,
sub
#line 179 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[4];                              }
	],
	[#Rule 66
		 'final', 4,
sub
#line 182 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 67
		 'final', 3,
sub
#line 184 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 68
		 'final', 0,
sub
#line 185 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 69
		 'use', 2,
sub
#line 188 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 70
		 '@2-2', 0,
sub
#line 191 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 71
		 'perl', 5,
sub
#line 192 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 72
		 '@3-1', 0,
sub
#line 198 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 73
		 'rawperl', 5,
sub
#line 200 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 74
		 'filter', 5,
sub
#line 207 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 75
		 'filter', 3,
sub
#line 209 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 76
		 'defblock', 5,
sub
#line 213 "Parser.yp"
{ $_[0]->define_block(@_[2, 4]); 
				      undef                               }
	],
	[#Rule 77
		 'anonblock', 4,
sub
#line 217 "Parser.yp"
{ $factory->anon_block($_[3])         }
	],
	[#Rule 78
		 'capture', 3,
sub
#line 220 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 79
		 'macro', 6,
sub
#line 224 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 80
		 'macro', 3,
sub
#line 225 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 81
		 'mdir', 1, undef
	],
	[#Rule 82
		 'mdir', 4,
sub
#line 229 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 83
		 'margs', 2,
sub
#line 232 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 84
		 'margs', 2,
sub
#line 233 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 85
		 'margs', 1,
sub
#line 234 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 86
		 'metadata', 2,
sub
#line 237 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 87
		 'metadata', 2, undef
	],
	[#Rule 88
		 'metadata', 1, undef
	],
	[#Rule 89
		 'meta', 3,
sub
#line 242 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$// }; 
					 [ @_[1,3] ] }
	],
	[#Rule 90
		 'meta', 5,
sub
#line 244 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 91
		 'meta', 3,
sub
#line 245 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 92
		 'term', 1, undef
	],
	[#Rule 93
		 'term', 1, undef
	],
	[#Rule 94
		 'lterm', 3,
sub
#line 257 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 95
		 'lterm', 3,
sub
#line 258 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 96
		 'lterm', 3,
sub
#line 259 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 97
		 'sterm', 1,
sub
#line 262 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 98
		 'sterm', 2,
sub
#line 263 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 99
		 'sterm', 3,
sub
#line 264 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 100
		 'sterm', 1, undef
	],
	[#Rule 101
		 'sterm', 1, undef
	],
	[#Rule 102
		 'list', 2,
sub
#line 269 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 103
		 'list', 2, undef
	],
	[#Rule 104
		 'list', 1, undef
	],
	[#Rule 105
		 'range', 3,
sub
#line 274 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 106
		 'hash', 1, undef
	],
	[#Rule 107
		 'hash', 0, undef
	],
	[#Rule 108
		 'params', 2,
sub
#line 282 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 109
		 'params', 2, undef
	],
	[#Rule 110
		 'params', 1, undef
	],
	[#Rule 111
		 'param', 3,
sub
#line 287 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 112
		 'param', 3,
sub
#line 288 "Parser.yp"
{ "'$_[1]' => $_[3]"                  }
	],
	[#Rule 113
		 'ident', 3,
sub
#line 291 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 114
		 'ident', 3,
sub
#line 292 "Parser.yp"
{ push(@{$_[1]}, $_[3], 0); $_[1]     }
	],
	[#Rule 115
		 'ident', 1, undef
	],
	[#Rule 116
		 'node', 1,
sub
#line 296 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 117
		 'node', 4,
sub
#line 297 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 118
		 'item', 1,
sub
#line 300 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 119
		 'item', 3,
sub
#line 301 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 120
		 'item', 2,
sub
#line 302 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 121
		 'expr', 3,
sub
#line 307 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 122
		 'expr', 3,
sub
#line 308 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 123
		 'expr', 3,
sub
#line 309 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 124
		 'expr', 3,
sub
#line 310 "Parser.yp"
{ "($_[1]) && ($_[3])"                }
	],
	[#Rule 125
		 'expr', 3,
sub
#line 311 "Parser.yp"
{ "($_[1]) || ($_[3])"                }
	],
	[#Rule 126
		 'expr', 2,
sub
#line 312 "Parser.yp"
{ "!($_[2])"                          }
	],
	[#Rule 127
		 'expr', 5,
sub
#line 313 "Parser.yp"
{ "(($_[1]) ? ($_[3]) : ($_[5]))"     }
	],
	[#Rule 128
		 'expr', 3,
sub
#line 314 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 129
		 'expr', 3,
sub
#line 315 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 130
		 'expr', 1, undef
	],
	[#Rule 131
		 'setlist', 2,
sub
#line 319 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 132
		 'setlist', 2, undef
	],
	[#Rule 133
		 'setlist', 1, undef
	],
	[#Rule 134
		 'assign', 3,
sub
#line 325 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 135
		 'assign', 3,
sub
#line 326 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 136
		 'args', 2,
sub
#line 333 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 137
		 'args', 2,
sub
#line 334 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 138
		 'args', 2,
sub
#line 335 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 139
		 'args', 0,
sub
#line 336 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 140
		 'lnameargs', 3,
sub
#line 346 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 141
		 'lnameargs', 1, undef
	],
	[#Rule 142
		 'lvalue', 1, undef
	],
	[#Rule 143
		 'lvalue', 3,
sub
#line 351 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 144
		 'lvalue', 1, undef
	],
	[#Rule 145
		 'nameargs', 3,
sub
#line 355 "Parser.yp"
{ [ $factory->ident($_[2]), $_[3] ]   }
	],
	[#Rule 146
		 'nameargs', 4,
sub
#line 356 "Parser.yp"
{ [ $factory->quoted($_[2]), $_[4] ]  }
	],
	[#Rule 147
		 'nameargs', 2,
sub
#line 357 "Parser.yp"
{ [   $_[1],   $_[2] ]                }
	],
	[#Rule 148
		 'nameargs', 4,
sub
#line 358 "Parser.yp"
{ [ "'$_[1]'", $_[3] ]                }
	],
	[#Rule 149
		 'nameargs', 2,
sub
#line 359 "Parser.yp"
{ [ "'$_[1]'", $_[2] ]                }
	],
	[#Rule 150
		 'filename', 3,
sub
#line 362 "Parser.yp"
{ "$_[1].$_[3]"                       }
	],
	[#Rule 151
		 'filename', 1, undef
	],
	[#Rule 152
		 'filepart', 1, undef
	],
	[#Rule 153
		 'filepart', 1, undef
	],
	[#Rule 154
		 'filepart', 1, undef
	],
	[#Rule 155
		 'quoted', 2,
sub
#line 376 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 156
		 'quoted', 0,
sub
#line 378 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 157
		 'quotable', 1,
sub
#line 381 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 158
		 'quotable', 1,
sub
#line 382 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 159
		 'quotable', 1,
sub
#line 383 "Parser.yp"
{ undef                               }
	]
];



1;












