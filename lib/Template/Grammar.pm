#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR
    );

%CMPOP = qw( != ne  == eq  < <  > >  >= >=  <= <= );


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{ 
    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( + - * % );              # '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			"\"" => 44,
			'BLOCK' => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			"[" => 52,
			'DEFAULT' => 51,
			"{" => 17,
			'THROW' => 56,
			'CALL' => 55,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 29,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'loop' => 54,
			'defblock' => 53,
			'capture' => 18,
			'template' => 41,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 1
		DEFAULT => -97
	},
	{#State 2
		DEFAULT => -106
	},
	{#State 3
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 71,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 4
		DEFAULT => -23
	},
	{#State 5
		ACTIONS => {
			";" => -19
		},
		DEFAULT => -26
	},
	{#State 6
		DEFAULT => -72,
		GOTOS => {
			'@3-1' => 73
		}
	},
	{#State 7
		ACTIONS => {
			'IDENT' => 74
		}
	},
	{#State 8
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 83,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 9
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 85
		},
		DEFAULT => -102
	},
	{#State 10
		DEFAULT => -14
	},
	{#State 11
		DEFAULT => -6
	},
	{#State 12
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 50,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 87,
			'assign' => 88,
			'item' => 24,
			'ident' => 86,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 13
		DEFAULT => -20
	},
	{#State 14
		DEFAULT => -12
	},
	{#State 15
		ACTIONS => {
			";" => 89
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 91
		},
		GOTOS => {
			'meta' => 92,
			'metadata' => 90
		}
	},
	{#State 17
		ACTIONS => {
			'LITERAL' => 95,
			'IDENT' => 94
		},
		DEFAULT => -112,
		GOTOS => {
			'param' => 97,
			'params' => 93,
			'hash' => 96
		}
	},
	{#State 18
		DEFAULT => -11
	},
	{#State 19
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => -15,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -25
	},
	{#State 20
		DEFAULT => -96
	},
	{#State 21
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 106,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 22
		ACTIONS => {
			"\${" => 48,
			'LITERAL' => 109,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 67,
			'setlist' => 108,
			'item' => 24,
			'ident' => 107,
			'node' => 57
		}
	},
	{#State 23
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 110,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 24
		ACTIONS => {
			"(" => 111
		},
		DEFAULT => -121
	},
	{#State 25
		ACTIONS => {
			'COMMA' => 112,
			"\${" => 48,
			'LITERAL' => 109,
			'IDENT' => 27,
			"\$" => 7
		},
		DEFAULT => -18,
		GOTOS => {
			'assign' => 113,
			'item' => 24,
			'ident' => 107,
			'node' => 57
		}
	},
	{#State 26
		DEFAULT => -5
	},
	{#State 27
		DEFAULT => -123
	},
	{#State 28
		ACTIONS => {
			";" => 114
		}
	},
	{#State 29
		DEFAULT => -1
	},
	{#State 30
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 115,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 31
		ACTIONS => {
			"\${" => 48,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 116,
			'node' => 57
		}
	},
	{#State 32
		ACTIONS => {
			'IDENT' => 117
		}
	},
	{#State 33
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 118,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 34
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 119,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 35
		DEFAULT => -8
	},
	{#State 36
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 124,
			"\${" => 48,
			'FILENAME' => 77,
			'LITERAL' => 125,
			'IDENT' => 122,
			"\$" => 120
		},
		GOTOS => {
			'lvalue' => 126,
			'lnameargs' => 123,
			'nameargs' => 127,
			'item' => 121,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 37
		DEFAULT => -35
	},
	{#State 38
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 128,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 39
		DEFAULT => -40
	},
	{#State 40
		DEFAULT => -38
	},
	{#State 41
		ACTIONS => {
			'' => 129
		}
	},
	{#State 42
		ACTIONS => {
			";" => 130
		}
	},
	{#State 43
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			'LITERAL' => 136,
			'IDENT' => 134
		},
		DEFAULT => -80,
		GOTOS => {
			'meta' => 92,
			'blockname' => 135,
			'filename' => 133,
			'blockargs' => 131,
			'filepart' => 82,
			'metadata' => 132
		}
	},
	{#State 44
		DEFAULT => -163,
		GOTOS => {
			'quoted' => 137
		}
	},
	{#State 45
		DEFAULT => -21
	},
	{#State 46
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 124,
			"\${" => 48,
			'FILENAME' => 77,
			'LITERAL' => 125,
			'IDENT' => 122,
			"\$" => 120
		},
		GOTOS => {
			'lvalue' => 126,
			'lnameargs' => 138,
			'nameargs' => 127,
			'item' => 121,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 47
		DEFAULT => -10
	},
	{#State 48
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'REF' => 31,
			'LITERAL' => 72,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 139,
			'item' => 24,
			'ident' => 70,
			'node' => 57
		}
	},
	{#State 49
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -2,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 140,
			'atomdir' => 5,
			'switch' => 45,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 50
		ACTIONS => {
			'ASSIGN' => 141
		},
		DEFAULT => -105
	},
	{#State 51
		ACTIONS => {
			"\${" => 48,
			'LITERAL' => 109,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 67,
			'setlist' => 142,
			'item' => 24,
			'ident' => 107,
			'node' => 57
		}
	},
	{#State 52
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"]" => 145,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 143,
			'list' => 144,
			'range' => 146,
			'item' => 24,
			'ident' => 70,
			'term' => 147,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 53
		DEFAULT => -9
	},
	{#State 54
		DEFAULT => -22
	},
	{#State 55
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 148,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 56
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 149,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 57
		DEFAULT => -120
	},
	{#State 58
		DEFAULT => -36
	},
	{#State 59
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 150,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 152,
			'lterm' => 20,
			'loopvar' => 151,
			'node' => 57
		}
	},
	{#State 60
		DEFAULT => -24
	},
	{#State 61
		DEFAULT => -37
	},
	{#State 62
		DEFAULT => -41
	},
	{#State 63
		DEFAULT => -13
	},
	{#State 64
		DEFAULT => -39
	},
	{#State 65
		ACTIONS => {
			'FOR' => 157,
			'UNLESS' => 153,
			'IF' => 158,
			'WHILE' => 155,
			'FILTER' => 156,
			'WRAPPER' => 154
		}
	},
	{#State 66
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 159,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 67
		DEFAULT => -140
	},
	{#State 68
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 160,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 69
		DEFAULT => -137
	},
	{#State 70
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -102
	},
	{#State 71
		ACTIONS => {
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'DIV' => 104,
			"/" => 105
		},
		DEFAULT => -133
	},
	{#State 72
		DEFAULT => -105
	},
	{#State 73
		ACTIONS => {
			";" => 161
		}
	},
	{#State 74
		DEFAULT => -125
	},
	{#State 75
		DEFAULT => -161
	},
	{#State 76
		ACTIONS => {
			"\${" => 48,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 162,
			'node' => 57
		}
	},
	{#State 77
		DEFAULT => -159
	},
	{#State 78
		ACTIONS => {
			'DOT' => 165,
			"(" => 164
		},
		DEFAULT => -146,
		GOTOS => {
			'args' => 163
		}
	},
	{#State 79
		DEFAULT => -160
	},
	{#State 80
		DEFAULT => -163,
		GOTOS => {
			'quoted' => 166
		}
	},
	{#State 81
		DEFAULT => -146,
		GOTOS => {
			'args' => 167
		}
	},
	{#State 82
		DEFAULT => -158
	},
	{#State 83
		DEFAULT => -33
	},
	{#State 84
		ACTIONS => {
			'NUMBER' => 168,
			"\${" => 48,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'node' => 169
		}
	},
	{#State 85
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 173,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 12,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 172,
			'sterm' => 1,
			'mdir' => 170,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 45,
			'atomexpr' => 65,
			'loop' => 54,
			'expr' => 171,
			'assign' => 67,
			'perl' => 60,
			'ident' => 86,
			'term' => 69,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 86
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 174
		},
		DEFAULT => -102
	},
	{#State 87
		ACTIONS => {
			'MOD' => 98,
			")" => 175,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 88
		ACTIONS => {
			")" => 176
		}
	},
	{#State 89
		DEFAULT => -7
	},
	{#State 90
		ACTIONS => {
			'COMMA' => 177,
			'IDENT' => 91
		},
		DEFAULT => -16,
		GOTOS => {
			'meta' => 178
		}
	},
	{#State 91
		ACTIONS => {
			'ASSIGN' => 179
		}
	},
	{#State 92
		DEFAULT => -92
	},
	{#State 93
		ACTIONS => {
			'COMMA' => 180,
			'LITERAL' => 95,
			'IDENT' => 94
		},
		DEFAULT => -111,
		GOTOS => {
			'param' => 181
		}
	},
	{#State 94
		ACTIONS => {
			'ASSIGN' => 182
		}
	},
	{#State 95
		ACTIONS => {
			'ASSIGN' => 183
		}
	},
	{#State 96
		ACTIONS => {
			"}" => 184
		}
	},
	{#State 97
		DEFAULT => -115
	},
	{#State 98
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 185,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 99
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 186,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 100
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 187,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 101
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 188,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 102
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 189,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 103
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 190,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 104
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 191,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 105
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 192,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 106
		DEFAULT => -31
	},
	{#State 107
		ACTIONS => {
			'DOT' => 84,
			'ASSIGN' => 174
		}
	},
	{#State 108
		ACTIONS => {
			'LITERAL' => 109,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 112,
			"\${" => 48
		},
		DEFAULT => -29,
		GOTOS => {
			'assign' => 113,
			'item' => 24,
			'ident' => 107,
			'node' => 57
		}
	},
	{#State 109
		ACTIONS => {
			'ASSIGN' => 141
		}
	},
	{#State 110
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => 193,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 111
		DEFAULT => -146,
		GOTOS => {
			'args' => 194
		}
	},
	{#State 112
		DEFAULT => -139
	},
	{#State 113
		DEFAULT => -138
	},
	{#State 114
		DEFAULT => -70,
		GOTOS => {
			'@2-2' => 195
		}
	},
	{#State 115
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => 196,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 116
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -103
	},
	{#State 117
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 173,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 197,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 172,
			'sterm' => 1,
			'mdir' => 198,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 45,
			'atomexpr' => 65,
			'loop' => 54,
			'expr' => 199,
			'assign' => 67,
			'perl' => 60,
			'ident' => 86,
			'term' => 69,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 118
		DEFAULT => -32
	},
	{#State 119
		ACTIONS => {
			";" => 200
		}
	},
	{#State 120
		ACTIONS => {
			"\${" => 48,
			'IDENT' => 201,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 162,
			'node' => 57
		}
	},
	{#State 121
		DEFAULT => -149
	},
	{#State 122
		ACTIONS => {
			'ASSIGN' => -123
		},
		DEFAULT => -160
	},
	{#State 123
		DEFAULT => -69
	},
	{#State 124
		DEFAULT => -163,
		GOTOS => {
			'quoted' => 202
		}
	},
	{#State 125
		ACTIONS => {
			'ASSIGN' => -151
		},
		DEFAULT => -146,
		GOTOS => {
			'args' => 167
		}
	},
	{#State 126
		ACTIONS => {
			'ASSIGN' => 203
		}
	},
	{#State 127
		DEFAULT => -148
	},
	{#State 128
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => 204,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 129
		DEFAULT => -0
	},
	{#State 130
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 205,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 131
		ACTIONS => {
			";" => 206
		}
	},
	{#State 132
		ACTIONS => {
			'COMMA' => 177,
			'IDENT' => 91
		},
		DEFAULT => -79,
		GOTOS => {
			'meta' => 178
		}
	},
	{#State 133
		ACTIONS => {
			'DOT' => 165
		},
		DEFAULT => -77
	},
	{#State 134
		ACTIONS => {
			'ASSIGN' => 179
		},
		DEFAULT => -160
	},
	{#State 135
		ACTIONS => {
			'IDENT' => 91
		},
		DEFAULT => -80,
		GOTOS => {
			'meta' => 92,
			'blockargs' => 207,
			'metadata' => 132
		}
	},
	{#State 136
		DEFAULT => -78
	},
	{#State 137
		ACTIONS => {
			"\"" => 211,
			"\${" => 48,
			'TEXT' => 209,
			";" => 210,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 212,
			'item' => 24,
			'ident' => 208,
			'node' => 57
		}
	},
	{#State 138
		ACTIONS => {
			";" => 213
		}
	},
	{#State 139
		ACTIONS => {
			"}" => 214
		}
	},
	{#State 140
		DEFAULT => -4
	},
	{#State 141
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 215,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 142
		ACTIONS => {
			'LITERAL' => 109,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 112,
			"\${" => 48
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 113,
			'item' => 24,
			'ident' => 107,
			'node' => 57
		}
	},
	{#State 143
		ACTIONS => {
			'TO' => 216
		},
		DEFAULT => -97
	},
	{#State 144
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 218,
			"{" => 17,
			"]" => 217,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 219,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 145
		DEFAULT => -100
	},
	{#State 146
		ACTIONS => {
			"]" => 220
		}
	},
	{#State 147
		DEFAULT => -109
	},
	{#State 148
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -28
	},
	{#State 149
		DEFAULT => -34
	},
	{#State 150
		ACTIONS => {
			'ASSIGN' => 221
		},
		DEFAULT => -123
	},
	{#State 151
		ACTIONS => {
			";" => 222
		}
	},
	{#State 152
		DEFAULT => -146,
		GOTOS => {
			'args' => 223
		}
	},
	{#State 153
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 224,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 154
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 225,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 155
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 226,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 156
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 124,
			"\${" => 48,
			'FILENAME' => 77,
			'LITERAL' => 125,
			'IDENT' => 122,
			"\$" => 120
		},
		GOTOS => {
			'lvalue' => 126,
			'lnameargs' => 227,
			'nameargs' => 127,
			'item' => 121,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 157
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 150,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 152,
			'lterm' => 20,
			'loopvar' => 228,
			'node' => 57
		}
	},
	{#State 158
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 229,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 159
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -27
	},
	{#State 160
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => 230,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 161
		ACTIONS => {
			'TEXT' => 231
		}
	},
	{#State 162
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -146,
		GOTOS => {
			'args' => 232
		}
	},
	{#State 163
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'IDENT' => 233,
			"\$" => 7,
			'REF' => 31,
			"\${" => 48,
			'LITERAL' => 234,
			"[" => 52,
			"{" => 17,
			'COMMA' => 235
		},
		DEFAULT => -156,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 164
		DEFAULT => -146,
		GOTOS => {
			'args' => 238
		}
	},
	{#State 165
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			'IDENT' => 79
		},
		GOTOS => {
			'filepart' => 239
		}
	},
	{#State 166
		ACTIONS => {
			"\"" => 240,
			"\${" => 48,
			'TEXT' => 209,
			";" => 210,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 212,
			'item' => 24,
			'ident' => 208,
			'node' => 57
		}
	},
	{#State 167
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'IDENT' => 233,
			"\$" => 7,
			'REF' => 31,
			"\${" => 48,
			'LITERAL' => 234,
			"[" => 52,
			"{" => 17,
			'COMMA' => 235
		},
		DEFAULT => -154,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 168
		DEFAULT => -119
	},
	{#State 169
		DEFAULT => -118
	},
	{#State 170
		DEFAULT => -82
	},
	{#State 171
		ACTIONS => {
			'IDENT' => -141,
			"\$" => -141,
			'AND' => 101,
			"\${" => -141,
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => -141,
			'LITERAL' => -141,
			'COMMA' => -141,
			'DIV' => 104,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -25
	},
	{#State 172
		DEFAULT => -85
	},
	{#State 173
		ACTIONS => {
			";" => 241
		}
	},
	{#State 174
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 242,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 175
		DEFAULT => -136
	},
	{#State 176
		DEFAULT => -135
	},
	{#State 177
		DEFAULT => -91
	},
	{#State 178
		DEFAULT => -90
	},
	{#State 179
		ACTIONS => {
			'NUMBER' => 243,
			"\"" => 244,
			'LITERAL' => 245
		}
	},
	{#State 180
		DEFAULT => -114
	},
	{#State 181
		DEFAULT => -113
	},
	{#State 182
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 246,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 183
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 247,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 184
		DEFAULT => -101
	},
	{#State 185
		DEFAULT => -129
	},
	{#State 186
		ACTIONS => {
			'MOD' => 98,
			'AND' => 101,
			'BINOP' => 100,
			'DIV' => 104,
			":" => 248,
			'CMPOP' => 102,
			"/" => 105,
			'OR' => 103,
			"?" => 99
		}
	},
	{#State 187
		ACTIONS => {
			'MOD' => 98,
			'DIV' => 104,
			"/" => 105
		},
		DEFAULT => -126
	},
	{#State 188
		ACTIONS => {
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'DIV' => 104,
			"/" => 105
		},
		DEFAULT => -131
	},
	{#State 189
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'DIV' => 104,
			"/" => 105
		},
		DEFAULT => -130
	},
	{#State 190
		ACTIONS => {
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'DIV' => 104,
			"/" => 105
		},
		DEFAULT => -132
	},
	{#State 191
		ACTIONS => {
			'MOD' => 98
		},
		DEFAULT => -128
	},
	{#State 192
		ACTIONS => {
			'MOD' => 98,
			'DIV' => 104
		},
		DEFAULT => -127
	},
	{#State 193
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 249,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 194
		ACTIONS => {
			")" => 250,
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 234,
			"[" => 52,
			'IDENT' => 233,
			"\$" => 7,
			'COMMA' => 235,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 195
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 251,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 196
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 252,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 197
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 50,
			"[" => 52,
			'IDENT' => 253,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 87,
			'assign' => 88,
			'margs' => 254,
			'item' => 24,
			'ident' => 86,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 198
		DEFAULT => -84
	},
	{#State 199
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -25
	},
	{#State 200
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 255,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 201
		ACTIONS => {
			'ASSIGN' => -125
		},
		DEFAULT => -123
	},
	{#State 202
		ACTIONS => {
			"\"" => 256,
			"\${" => 48,
			'TEXT' => 209,
			";" => 210,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 212,
			'item' => 24,
			'ident' => 208,
			'node' => 57
		}
	},
	{#State 203
		ACTIONS => {
			'NUMBER' => 75,
			"\"" => 80,
			'FILENAME' => 77,
			'LITERAL' => 81,
			'IDENT' => 79,
			"\$" => 76
		},
		GOTOS => {
			'nameargs' => 257,
			'filename' => 78,
			'filepart' => 82
		}
	},
	{#State 204
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 258,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 205
		ACTIONS => {
			'CATCH' => 259,
			'FINAL' => 261
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 260
		}
	},
	{#State 206
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 262,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 207
		ACTIONS => {
			";" => 263
		}
	},
	{#State 208
		ACTIONS => {
			'DOT' => 84
		},
		DEFAULT => -164
	},
	{#State 209
		DEFAULT => -165
	},
	{#State 210
		DEFAULT => -166
	},
	{#State 211
		DEFAULT => -104
	},
	{#State 212
		DEFAULT => -162
	},
	{#State 213
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 264,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 214
		DEFAULT => -124
	},
	{#State 215
		ACTIONS => {
			'AND' => 101,
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'DIV' => 104,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -142
	},
	{#State 216
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'REF' => 31,
			'LITERAL' => 72,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 265,
			'item' => 24,
			'ident' => 70,
			'node' => 57
		}
	},
	{#State 217
		DEFAULT => -98
	},
	{#State 218
		DEFAULT => -108
	},
	{#State 219
		DEFAULT => -107
	},
	{#State 220
		DEFAULT => -99
	},
	{#State 221
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 266,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 222
		DEFAULT => -54,
		GOTOS => {
			'@1-3' => 267
		}
	},
	{#State 223
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 234,
			"[" => 52,
			'IDENT' => 233,
			"\$" => 7,
			'COMMA' => 235,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		DEFAULT => -60,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 224
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -45
	},
	{#State 225
		DEFAULT => -62
	},
	{#State 226
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -58
	},
	{#State 227
		DEFAULT => -75
	},
	{#State 228
		DEFAULT => -56
	},
	{#State 229
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -43
	},
	{#State 230
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 268,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 231
		ACTIONS => {
			'END' => 269
		}
	},
	{#State 232
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'IDENT' => 233,
			"\$" => 7,
			'REF' => 31,
			"\${" => 48,
			'LITERAL' => 234,
			"[" => 52,
			"{" => 17,
			'COMMA' => 235
		},
		DEFAULT => -152,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 233
		ACTIONS => {
			'ASSIGN' => 182
		},
		DEFAULT => -123
	},
	{#State 234
		ACTIONS => {
			'ASSIGN' => 183
		},
		DEFAULT => -105
	},
	{#State 235
		DEFAULT => -145
	},
	{#State 236
		DEFAULT => -144
	},
	{#State 237
		DEFAULT => -143
	},
	{#State 238
		ACTIONS => {
			")" => 270,
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 234,
			"[" => 52,
			'IDENT' => 233,
			"\$" => 7,
			'COMMA' => 235,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 239
		DEFAULT => -157
	},
	{#State 240
		DEFAULT => -146,
		GOTOS => {
			'args' => 271
		}
	},
	{#State 241
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 272,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 242
		ACTIONS => {
			'AND' => 101,
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'DIV' => 104,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -141
	},
	{#State 243
		DEFAULT => -95
	},
	{#State 244
		ACTIONS => {
			'TEXT' => 273
		}
	},
	{#State 245
		DEFAULT => -93
	},
	{#State 246
		DEFAULT => -117
	},
	{#State 247
		DEFAULT => -116
	},
	{#State 248
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 274,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 249
		ACTIONS => {
			'CASE' => 276
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 275
		}
	},
	{#State 250
		DEFAULT => -122
	},
	{#State 251
		ACTIONS => {
			'END' => 277
		}
	},
	{#State 252
		ACTIONS => {
			'ELSE' => 278,
			'ELSIF' => 280
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 279
		}
	},
	{#State 253
		ACTIONS => {
			")" => -89,
			'IDENT' => -89,
			'COMMA' => -89
		},
		DEFAULT => -123
	},
	{#State 254
		ACTIONS => {
			'COMMA' => 283,
			")" => 282,
			'IDENT' => 281
		}
	},
	{#State 255
		ACTIONS => {
			'END' => 284
		}
	},
	{#State 256
		ACTIONS => {
			'ASSIGN' => -150
		},
		DEFAULT => -146,
		GOTOS => {
			'args' => 271
		}
	},
	{#State 257
		DEFAULT => -147
	},
	{#State 258
		ACTIONS => {
			'END' => 285
		}
	},
	{#State 259
		ACTIONS => {
			'NUMBER' => 75,
			'FILENAME' => 77,
			";" => 286,
			'DEFAULT' => 288,
			'IDENT' => 79
		},
		GOTOS => {
			'filename' => 287,
			'filepart' => 82
		}
	},
	{#State 260
		ACTIONS => {
			'END' => 289
		}
	},
	{#State 261
		ACTIONS => {
			";" => 290
		}
	},
	{#State 262
		ACTIONS => {
			'END' => 291
		}
	},
	{#State 263
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 29,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'template' => 292,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 264
		ACTIONS => {
			'END' => 293
		}
	},
	{#State 265
		DEFAULT => -110
	},
	{#State 266
		DEFAULT => -146,
		GOTOS => {
			'args' => 294
		}
	},
	{#State 267
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 295,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 268
		ACTIONS => {
			'ELSE' => 278,
			'ELSIF' => 280
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 296
		}
	},
	{#State 269
		DEFAULT => -73
	},
	{#State 270
		DEFAULT => -155
	},
	{#State 271
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'IDENT' => 233,
			"\$" => 7,
			'REF' => 31,
			"\${" => 48,
			'LITERAL' => 234,
			"[" => 52,
			"{" => 17,
			'COMMA' => 235
		},
		DEFAULT => -153,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 272
		ACTIONS => {
			'END' => 297
		}
	},
	{#State 273
		ACTIONS => {
			"\"" => 298
		}
	},
	{#State 274
		ACTIONS => {
			'AND' => 101,
			'CMPOP' => 102,
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			'DIV' => 104,
			"/" => 105,
			"?" => 99
		},
		DEFAULT => -134
	},
	{#State 275
		ACTIONS => {
			'END' => 299
		}
	},
	{#State 276
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'REF' => 31,
			'LITERAL' => 72,
			";" => 300,
			'DEFAULT' => 301,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 70,
			'term' => 302,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 277
		DEFAULT => -71
	},
	{#State 278
		ACTIONS => {
			";" => 303
		}
	},
	{#State 279
		ACTIONS => {
			'END' => 304
		}
	},
	{#State 280
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 72,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			'REF' => 31,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 305,
			'item' => 24,
			'ident' => 70,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 281
		DEFAULT => -87
	},
	{#State 282
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 173,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 12,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		GOTOS => {
			'directive' => 172,
			'sterm' => 1,
			'mdir' => 306,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 39,
			'switch' => 45,
			'atomexpr' => 65,
			'loop' => 54,
			'expr' => 199,
			'assign' => 67,
			'perl' => 60,
			'ident' => 86,
			'term' => 69,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 283
		DEFAULT => -88
	},
	{#State 284
		DEFAULT => -61
	},
	{#State 285
		DEFAULT => -57
	},
	{#State 286
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 307,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 287
		ACTIONS => {
			'DOT' => 165,
			";" => 308
		}
	},
	{#State 288
		ACTIONS => {
			";" => 309
		}
	},
	{#State 289
		DEFAULT => -63
	},
	{#State 290
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 310,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 291
		DEFAULT => -81
	},
	{#State 292
		ACTIONS => {
			'END' => 311
		}
	},
	{#State 293
		DEFAULT => -74
	},
	{#State 294
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 234,
			"[" => 52,
			'IDENT' => 233,
			"\$" => 7,
			'COMMA' => 235,
			"{" => 17,
			'REF' => 31,
			"\${" => 48
		},
		DEFAULT => -59,
		GOTOS => {
			'sterm' => 1,
			'param' => 236,
			'item' => 24,
			'ident' => 70,
			'term' => 237,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 295
		ACTIONS => {
			'END' => 312
		}
	},
	{#State 296
		ACTIONS => {
			'END' => 313
		}
	},
	{#State 297
		DEFAULT => -86
	},
	{#State 298
		DEFAULT => -94
	},
	{#State 299
		DEFAULT => -49
	},
	{#State 300
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 314,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 301
		ACTIONS => {
			";" => 315
		}
	},
	{#State 302
		ACTIONS => {
			";" => 316
		}
	},
	{#State 303
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 317,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 304
		DEFAULT => -44
	},
	{#State 305
		ACTIONS => {
			'MOD' => 98,
			'BINOP' => 100,
			'OR' => 103,
			";" => 318,
			'AND' => 101,
			'DIV' => 104,
			'CMPOP' => 102,
			"/" => 105,
			"?" => 99
		}
	},
	{#State 306
		DEFAULT => -83
	},
	{#State 307
		ACTIONS => {
			'CATCH' => 259,
			'FINAL' => 261
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 319
		}
	},
	{#State 308
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 320,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 309
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 321,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 310
		DEFAULT => -67
	},
	{#State 311
		DEFAULT => -76
	},
	{#State 312
		DEFAULT => -55
	},
	{#State 313
		DEFAULT => -42
	},
	{#State 314
		DEFAULT => -52
	},
	{#State 315
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 322,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 316
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 323,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 317
		DEFAULT => -47
	},
	{#State 318
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'REF' => 31,
			'MACRO' => 32,
			'CLEAR' => 61,
			'INCLUDE' => 33,
			'WRAPPER' => 34,
			'USE' => 36,
			'NEXT' => 64,
			'RETURN' => 37,
			'WHILE' => 38,
			'LAST' => 40,
			'GET' => 66,
			'IF' => 68
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 324,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 35,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 39,
			'atomexpr' => 65,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 67,
			'term' => 69,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 319
		DEFAULT => -66
	},
	{#State 320
		ACTIONS => {
			'CATCH' => 259,
			'FINAL' => 261
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 325
		}
	},
	{#State 321
		ACTIONS => {
			'CATCH' => 259,
			'FINAL' => 261
		},
		DEFAULT => -68,
		GOTOS => {
			'final' => 326
		}
	},
	{#State 322
		DEFAULT => -51
	},
	{#State 323
		ACTIONS => {
			'CASE' => 276
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 327
		}
	},
	{#State 324
		ACTIONS => {
			'ELSE' => 278,
			'ELSIF' => 280
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 328
		}
	},
	{#State 325
		DEFAULT => -64
	},
	{#State 326
		DEFAULT => -65
	},
	{#State 327
		DEFAULT => -50
	},
	{#State 328
		DEFAULT => -46
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 58 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 61 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 62 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 65 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 67 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 70 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1,
sub
#line 82 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 16
		 'statement', 2,
sub
#line 83 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 17
		 'statement', 0, undef
	],
	[#Rule 18
		 'directive', 1,
sub
#line 87 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 19
		 'directive', 1, undef
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'atomexpr', 1,
sub
#line 101 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 26
		 'atomexpr', 1, undef
	],
	[#Rule 27
		 'atomdir', 2,
sub
#line 105 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 106 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 107 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 108 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 109 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 110 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 111 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 112 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 35
		 'atomdir', 1,
sub
#line 113 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 114 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 115 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 116 "Parser.yp"
{ 'last;'                             }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 117 "Parser.yp"
{ $_[0]->{ INFOR }
					? $factory->next()
				        : 'next;'                         }
	],
	[#Rule 40
		 'atomdir', 1, undef
	],
	[#Rule 41
		 'atomdir', 1, undef
	],
	[#Rule 42
		 'condition', 6,
sub
#line 125 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 43
		 'condition', 3,
sub
#line 126 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 44
		 'condition', 6,
sub
#line 128 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 45
		 'condition', 3,
sub
#line 129 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 46
		 'else', 5,
sub
#line 133 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 47
		 'else', 3,
sub
#line 135 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 48
		 'else', 0,
sub
#line 136 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 49
		 'switch', 6,
sub
#line 140 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 50
		 'case', 5,
sub
#line 144 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 51
		 'case', 4,
sub
#line 146 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 52
		 'case', 3,
sub
#line 147 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 53
		 'case', 0,
sub
#line 148 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 54
		 '@1-3', 0,
sub
#line 151 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 55
		 'loop', 6,
sub
#line 152 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 56
		 'loop', 3,
sub
#line 156 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 57
		 'loop', 5,
sub
#line 158 "Parser.yp"
{ $factory->while(@_[2, 4])           }
	],
	[#Rule 58
		 'loop', 3,
sub
#line 159 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 59
		 'loopvar', 4,
sub
#line 162 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 60
		 'loopvar', 2,
sub
#line 163 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 61
		 'wrapper', 5,
sub
#line 167 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 62
		 'wrapper', 3,
sub
#line 169 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 63
		 'try', 5,
sub
#line 173 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 64
		 'final', 5,
sub
#line 177 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 65
		 'final', 5,
sub
#line 180 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[4];                              }
	],
	[#Rule 66
		 'final', 4,
sub
#line 183 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 67
		 'final', 3,
sub
#line 185 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 68
		 'final', 0,
sub
#line 186 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 69
		 'use', 2,
sub
#line 189 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 70
		 '@2-2', 0,
sub
#line 192 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 71
		 'perl', 5,
sub
#line 193 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 72
		 '@3-1', 0,
sub
#line 199 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 73
		 'rawperl', 5,
sub
#line 201 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 74
		 'filter', 5,
sub
#line 208 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 75
		 'filter', 3,
sub
#line 210 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 76
		 'defblock', 6,
sub
#line 218 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[3] }]\n"
					  if $_[3];
				      $_[0]->define_block(@_[2, 5]); 
				      undef                               }
	],
	[#Rule 77
		 'blockname', 1, undef
	],
	[#Rule 78
		 'blockname', 1,
sub
#line 226 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 79
		 'blockargs', 1, undef
	],
	[#Rule 80
		 'blockargs', 0, undef
	],
	[#Rule 81
		 'anonblock', 5,
sub
#line 234 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[2] }]\n"
					  if $_[2];
				      $factory->anon_block($_[4])         }
	],
	[#Rule 82
		 'capture', 3,
sub
#line 240 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 83
		 'macro', 6,
sub
#line 244 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 84
		 'macro', 3,
sub
#line 245 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 85
		 'mdir', 1, undef
	],
	[#Rule 86
		 'mdir', 4,
sub
#line 249 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 87
		 'margs', 2,
sub
#line 252 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 88
		 'margs', 2,
sub
#line 253 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 89
		 'margs', 1,
sub
#line 254 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 90
		 'metadata', 2,
sub
#line 257 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 91
		 'metadata', 2, undef
	],
	[#Rule 92
		 'metadata', 1, undef
	],
	[#Rule 93
		 'meta', 3,
sub
#line 262 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$// }; 
					 [ @_[1,3] ] }
	],
	[#Rule 94
		 'meta', 5,
sub
#line 264 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 95
		 'meta', 3,
sub
#line 265 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 96
		 'term', 1, undef
	],
	[#Rule 97
		 'term', 1, undef
	],
	[#Rule 98
		 'lterm', 3,
sub
#line 277 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 99
		 'lterm', 3,
sub
#line 278 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 100
		 'lterm', 2,
sub
#line 279 "Parser.yp"
{ "[ ]"                               }
	],
	[#Rule 101
		 'lterm', 3,
sub
#line 280 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 102
		 'sterm', 1,
sub
#line 283 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 103
		 'sterm', 2,
sub
#line 284 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 104
		 'sterm', 3,
sub
#line 285 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 105
		 'sterm', 1, undef
	],
	[#Rule 106
		 'sterm', 1, undef
	],
	[#Rule 107
		 'list', 2,
sub
#line 290 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 108
		 'list', 2, undef
	],
	[#Rule 109
		 'list', 1, undef
	],
	[#Rule 110
		 'range', 3,
sub
#line 295 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 111
		 'hash', 1, undef
	],
	[#Rule 112
		 'hash', 0,
sub
#line 300 "Parser.yp"
{ "" }
	],
	[#Rule 113
		 'params', 2,
sub
#line 303 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 114
		 'params', 2, undef
	],
	[#Rule 115
		 'params', 1, undef
	],
	[#Rule 116
		 'param', 3,
sub
#line 308 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 117
		 'param', 3,
sub
#line 309 "Parser.yp"
{ "'$_[1]' => $_[3]"                  }
	],
	[#Rule 118
		 'ident', 3,
sub
#line 312 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 119
		 'ident', 3,
sub
#line 313 "Parser.yp"
{ push(@{$_[1]}, 
					   map {($_, 0)} split(/\./, $_[3]));
				      $_[1];			          }
	],
	[#Rule 120
		 'ident', 1, undef
	],
	[#Rule 121
		 'node', 1,
sub
#line 319 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 122
		 'node', 4,
sub
#line 320 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 123
		 'item', 1,
sub
#line 323 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 124
		 'item', 3,
sub
#line 324 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 125
		 'item', 2,
sub
#line 325 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 126
		 'expr', 3,
sub
#line 330 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 127
		 'expr', 3,
sub
#line 331 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 128
		 'expr', 3,
sub
#line 332 "Parser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 129
		 'expr', 3,
sub
#line 333 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 130
		 'expr', 3,
sub
#line 334 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 131
		 'expr', 3,
sub
#line 335 "Parser.yp"
{ "($_[1]) && ($_[3])"                }
	],
	[#Rule 132
		 'expr', 3,
sub
#line 336 "Parser.yp"
{ "($_[1]) || ($_[3])"                }
	],
	[#Rule 133
		 'expr', 2,
sub
#line 337 "Parser.yp"
{ "!($_[2])"                          }
	],
	[#Rule 134
		 'expr', 5,
sub
#line 338 "Parser.yp"
{ "(($_[1]) ? ($_[3]) : ($_[5]))"     }
	],
	[#Rule 135
		 'expr', 3,
sub
#line 339 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 136
		 'expr', 3,
sub
#line 340 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 137
		 'expr', 1, undef
	],
	[#Rule 138
		 'setlist', 2,
sub
#line 344 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 139
		 'setlist', 2, undef
	],
	[#Rule 140
		 'setlist', 1, undef
	],
	[#Rule 141
		 'assign', 3,
sub
#line 350 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 142
		 'assign', 3,
sub
#line 351 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 143
		 'args', 2,
sub
#line 358 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 144
		 'args', 2,
sub
#line 359 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 145
		 'args', 2,
sub
#line 360 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 146
		 'args', 0,
sub
#line 361 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 147
		 'lnameargs', 3,
sub
#line 371 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 148
		 'lnameargs', 1, undef
	],
	[#Rule 149
		 'lvalue', 1, undef
	],
	[#Rule 150
		 'lvalue', 3,
sub
#line 376 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 151
		 'lvalue', 1, undef
	],
	[#Rule 152
		 'nameargs', 3,
sub
#line 380 "Parser.yp"
{ [ $factory->ident($_[2]), $_[3] ]   }
	],
	[#Rule 153
		 'nameargs', 4,
sub
#line 381 "Parser.yp"
{ [ $factory->quoted($_[2]), $_[4] ]  }
	],
	[#Rule 154
		 'nameargs', 2,
sub
#line 382 "Parser.yp"
{ [   $_[1],   $_[2] ]                }
	],
	[#Rule 155
		 'nameargs', 4,
sub
#line 383 "Parser.yp"
{ [ "'$_[1]'", $_[3] ]                }
	],
	[#Rule 156
		 'nameargs', 2,
sub
#line 384 "Parser.yp"
{ [ "'$_[1]'", $_[2] ]                }
	],
	[#Rule 157
		 'filename', 3,
sub
#line 387 "Parser.yp"
{ "$_[1].$_[3]"                       }
	],
	[#Rule 158
		 'filename', 1, undef
	],
	[#Rule 159
		 'filepart', 1, undef
	],
	[#Rule 160
		 'filepart', 1, undef
	],
	[#Rule 161
		 'filepart', 1, undef
	],
	[#Rule 162
		 'quoted', 2,
sub
#line 401 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 163
		 'quoted', 0,
sub
#line 403 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 164
		 'quotable', 1,
sub
#line 406 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 165
		 'quotable', 1,
sub
#line 407 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 166
		 'quotable', 1,
sub
#line 408 "Parser.yp"
{ undef                               }
	]
];



1;












