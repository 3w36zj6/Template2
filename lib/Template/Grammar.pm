#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT
	IF UNLESS ELSE ELSIF FOR FORNEXT WHILE SWITCH CASE META
	TRY THROW CATCH FINAL BREAK RETURN STOP CLEAR
    );

%CMPOP = qw( != ne  == eq  < <  > >  >= >=  <= <= );


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT'		# regardless of CASE sensitivity flag
};

# localise the temporary variables needed to complete lexer table
{ 
    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( + - * % );             # '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			"\"" => 43,
			'BLOCK' => 42,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			"[" => 51,
			'DEFAULT' => 50,
			"{" => 17,
			'THROW' => 55,
			'CALL' => 54,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 28,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'loop' => 53,
			'defblock' => 52,
			'capture' => 18,
			'template' => 40,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 1
		DEFAULT => -91
	},
	{#State 2
		DEFAULT => -98
	},
	{#State 3
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 69,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 4
		DEFAULT => -24
	},
	{#State 5
		ACTIONS => {
			";" => -19
		},
		DEFAULT => -27
	},
	{#State 6
		DEFAULT => -70,
		GOTOS => {
			'@3-1' => 71
		}
	},
	{#State 7
		ACTIONS => {
			'IDENT' => 72
		}
	},
	{#State 8
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 78,
			'FILENAME' => 75,
			'LITERAL' => 79,
			'IDENT' => 77,
			"\$" => 74
		},
		GOTOS => {
			'nameargs' => 81,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 9
		ACTIONS => {
			'DOT' => 82,
			'ASSIGN' => 83
		},
		DEFAULT => -95
	},
	{#State 10
		DEFAULT => -14
	},
	{#State 11
		DEFAULT => -6
	},
	{#State 12
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 49,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 85,
			'assign' => 86,
			'item' => 23,
			'ident' => 84,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 13
		DEFAULT => -20
	},
	{#State 14
		DEFAULT => -12
	},
	{#State 15
		ACTIONS => {
			";" => 87
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 89
		},
		GOTOS => {
			'meta' => 90,
			'metadata' => 88
		}
	},
	{#State 17
		ACTIONS => {
			'LITERAL' => 93,
			'IDENT' => 92
		},
		DEFAULT => -104,
		GOTOS => {
			'param' => 95,
			'params' => 91,
			'hash' => 94
		}
	},
	{#State 18
		DEFAULT => -11
	},
	{#State 19
		ACTIONS => {
			'BINOP' => 97,
			'OR' => 100,
			";" => -15,
			'AND' => 98,
			'CMPOP' => 99,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -26
	},
	{#State 20
		DEFAULT => -90
	},
	{#State 21
		ACTIONS => {
			"\${" => 47,
			'LITERAL' => 104,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 65,
			'setlist' => 103,
			'item' => 23,
			'ident' => 102,
			'node' => 56
		}
	},
	{#State 22
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 105,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 23
		ACTIONS => {
			"(" => 106
		},
		DEFAULT => -113
	},
	{#State 24
		ACTIONS => {
			'COMMA' => 107,
			"\${" => 47,
			'LITERAL' => 104,
			'IDENT' => 26,
			"\$" => 7
		},
		DEFAULT => -18,
		GOTOS => {
			'assign' => 108,
			'item' => 23,
			'ident' => 102,
			'node' => 56
		}
	},
	{#State 25
		DEFAULT => -5
	},
	{#State 26
		DEFAULT => -115
	},
	{#State 27
		ACTIONS => {
			";" => 109
		}
	},
	{#State 28
		DEFAULT => -1
	},
	{#State 29
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 110,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 30
		ACTIONS => {
			'IDENT' => 111
		}
	},
	{#State 31
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 78,
			'FILENAME' => 75,
			'LITERAL' => 79,
			'IDENT' => 77,
			"\$" => 74
		},
		GOTOS => {
			'nameargs' => 112,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 32
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 78,
			'FILENAME' => 75,
			'LITERAL' => 79,
			'IDENT' => 77,
			"\$" => 74
		},
		GOTOS => {
			'nameargs' => 113,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 33
		DEFAULT => -8
	},
	{#State 34
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 118,
			"\${" => 47,
			'FILENAME' => 75,
			'LITERAL' => 119,
			'IDENT' => 116,
			"\$" => 114
		},
		GOTOS => {
			'lvalue' => 120,
			'lnameargs' => 117,
			'nameargs' => 121,
			'item' => 115,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 35
		DEFAULT => -35
	},
	{#State 36
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 122,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 37
		DEFAULT => -23
	},
	{#State 38
		DEFAULT => -38
	},
	{#State 39
		DEFAULT => -39
	},
	{#State 40
		ACTIONS => {
			'' => 123
		}
	},
	{#State 41
		ACTIONS => {
			";" => 124
		}
	},
	{#State 42
		ACTIONS => {
			'NUMBER' => 73,
			'FILENAME' => 75,
			";" => 125,
			'IDENT' => 77
		},
		GOTOS => {
			'filename' => 126,
			'filepart' => 80
		}
	},
	{#State 43
		DEFAULT => -153,
		GOTOS => {
			'quoted' => 127
		}
	},
	{#State 44
		DEFAULT => -21
	},
	{#State 45
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 118,
			"\${" => 47,
			'FILENAME' => 75,
			'LITERAL' => 119,
			'IDENT' => 116,
			"\$" => 114
		},
		GOTOS => {
			'lvalue' => 120,
			'lnameargs' => 128,
			'nameargs' => 121,
			'item' => 115,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 46
		DEFAULT => -10
	},
	{#State 47
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 129,
			'item' => 23,
			'ident' => 68,
			'node' => 56
		}
	},
	{#State 48
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -2,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 130,
			'atomdir' => 5,
			'switch' => 44,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 49
		ACTIONS => {
			'ASSIGN' => 131
		},
		DEFAULT => -97
	},
	{#State 50
		ACTIONS => {
			"\${" => 47,
			'LITERAL' => 104,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 65,
			'setlist' => 132,
			'item' => 23,
			'ident' => 102,
			'node' => 56
		}
	},
	{#State 51
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 133,
			'list' => 134,
			'range' => 135,
			'item' => 23,
			'ident' => 68,
			'term' => 136,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 52
		DEFAULT => -9
	},
	{#State 53
		DEFAULT => -22
	},
	{#State 54
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 137,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 55
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 78,
			'FILENAME' => 75,
			'LITERAL' => 79,
			'IDENT' => 77,
			"\$" => 74
		},
		GOTOS => {
			'nameargs' => 138,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 56
		DEFAULT => -112
	},
	{#State 57
		DEFAULT => -36
	},
	{#State 58
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 139,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 141,
			'lterm' => 20,
			'loopvar' => 140,
			'node' => 56
		}
	},
	{#State 59
		DEFAULT => -25
	},
	{#State 60
		DEFAULT => -37
	},
	{#State 61
		DEFAULT => -40
	},
	{#State 62
		DEFAULT => -13
	},
	{#State 63
		ACTIONS => {
			'FOR' => 145,
			'UNLESS' => 142,
			'IF' => 146,
			'WHILE' => 143,
			'FILTER' => 144
		}
	},
	{#State 64
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 147,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 65
		DEFAULT => -130
	},
	{#State 66
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 148,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 67
		DEFAULT => -127
	},
	{#State 68
		ACTIONS => {
			'DOT' => 82
		},
		DEFAULT => -95
	},
	{#State 69
		ACTIONS => {
			'CMPOP' => 99,
			'BINOP' => 97,
			"/" => 101
		},
		DEFAULT => -123
	},
	{#State 70
		DEFAULT => -97
	},
	{#State 71
		ACTIONS => {
			";" => 149
		}
	},
	{#State 72
		DEFAULT => -117
	},
	{#State 73
		DEFAULT => -151
	},
	{#State 74
		ACTIONS => {
			"\${" => 47,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'item' => 23,
			'ident' => 150,
			'node' => 56
		}
	},
	{#State 75
		DEFAULT => -149
	},
	{#State 76
		ACTIONS => {
			'DOT' => 153,
			"(" => 152
		},
		DEFAULT => -136,
		GOTOS => {
			'args' => 151
		}
	},
	{#State 77
		DEFAULT => -150
	},
	{#State 78
		DEFAULT => -153,
		GOTOS => {
			'quoted' => 154
		}
	},
	{#State 79
		DEFAULT => -136,
		GOTOS => {
			'args' => 155
		}
	},
	{#State 80
		DEFAULT => -148
	},
	{#State 81
		DEFAULT => -33
	},
	{#State 82
		ACTIONS => {
			'NUMBER' => 156,
			"\${" => 47,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'item' => 23,
			'node' => 157
		}
	},
	{#State 83
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 161,
			"\"" => 43,
			'NOT' => 3,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			"(" => 12,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'FORNEXT' => 39,
			'GET' => 64,
			'IF' => 66
		},
		GOTOS => {
			'directive' => 160,
			'sterm' => 1,
			'mdir' => 158,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'atomdir' => 5,
			'wrapper' => 37,
			'switch' => 44,
			'atomexpr' => 63,
			'loop' => 53,
			'expr' => 159,
			'assign' => 65,
			'perl' => 59,
			'ident' => 84,
			'term' => 67,
			'filter' => 61,
			'lterm' => 20,
			'node' => 56,
			'condition' => 13
		}
	},
	{#State 84
		ACTIONS => {
			'DOT' => 82,
			'ASSIGN' => 162
		},
		DEFAULT => -95
	},
	{#State 85
		ACTIONS => {
			'AND' => 98,
			")" => 163,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96
		}
	},
	{#State 86
		ACTIONS => {
			")" => 164
		}
	},
	{#State 87
		DEFAULT => -7
	},
	{#State 88
		ACTIONS => {
			'COMMA' => 165,
			'IDENT' => 89
		},
		DEFAULT => -16,
		GOTOS => {
			'meta' => 166
		}
	},
	{#State 89
		ACTIONS => {
			'ASSIGN' => 167
		}
	},
	{#State 90
		DEFAULT => -86
	},
	{#State 91
		ACTIONS => {
			'COMMA' => 168,
			'LITERAL' => 93,
			'IDENT' => 92
		},
		DEFAULT => -103,
		GOTOS => {
			'param' => 169
		}
	},
	{#State 92
		ACTIONS => {
			'ASSIGN' => 170
		}
	},
	{#State 93
		ACTIONS => {
			'ASSIGN' => 171
		}
	},
	{#State 94
		ACTIONS => {
			"}" => 172
		}
	},
	{#State 95
		DEFAULT => -107
	},
	{#State 96
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 173,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 97
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 174,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 98
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 175,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 99
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 176,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 100
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 177,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 101
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 178,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 102
		ACTIONS => {
			'DOT' => 82,
			'ASSIGN' => 162
		}
	},
	{#State 103
		ACTIONS => {
			'LITERAL' => 104,
			'IDENT' => 26,
			"\$" => 7,
			'COMMA' => 107,
			"\${" => 47
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 108,
			'item' => 23,
			'ident' => 102,
			'node' => 56
		}
	},
	{#State 104
		ACTIONS => {
			'ASSIGN' => 131
		}
	},
	{#State 105
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96,
			";" => 179
		}
	},
	{#State 106
		DEFAULT => -136,
		GOTOS => {
			'args' => 180
		}
	},
	{#State 107
		DEFAULT => -129
	},
	{#State 108
		DEFAULT => -128
	},
	{#State 109
		DEFAULT => -68,
		GOTOS => {
			'@2-2' => 181
		}
	},
	{#State 110
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96,
			";" => 182
		}
	},
	{#State 111
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 161,
			"\"" => 43,
			'NOT' => 3,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			"(" => 183,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'FORNEXT' => 39,
			'GET' => 64,
			'IF' => 66
		},
		GOTOS => {
			'directive' => 160,
			'sterm' => 1,
			'mdir' => 184,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'atomdir' => 5,
			'wrapper' => 37,
			'switch' => 44,
			'atomexpr' => 63,
			'loop' => 53,
			'expr' => 185,
			'assign' => 65,
			'perl' => 59,
			'ident' => 84,
			'term' => 67,
			'filter' => 61,
			'lterm' => 20,
			'node' => 56,
			'condition' => 13
		}
	},
	{#State 112
		DEFAULT => -32
	},
	{#State 113
		ACTIONS => {
			";" => 186
		}
	},
	{#State 114
		ACTIONS => {
			"\${" => 47,
			'IDENT' => 187,
			"\$" => 7
		},
		GOTOS => {
			'item' => 23,
			'ident' => 150,
			'node' => 56
		}
	},
	{#State 115
		DEFAULT => -139
	},
	{#State 116
		ACTIONS => {
			'ASSIGN' => -115
		},
		DEFAULT => -150
	},
	{#State 117
		DEFAULT => -67
	},
	{#State 118
		DEFAULT => -153,
		GOTOS => {
			'quoted' => 188
		}
	},
	{#State 119
		ACTIONS => {
			'ASSIGN' => -141
		},
		DEFAULT => -136,
		GOTOS => {
			'args' => 155
		}
	},
	{#State 120
		ACTIONS => {
			'ASSIGN' => 189
		}
	},
	{#State 121
		DEFAULT => -138
	},
	{#State 122
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96,
			";" => 190
		}
	},
	{#State 123
		DEFAULT => -0
	},
	{#State 124
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 191,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 125
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 192,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 126
		ACTIONS => {
			'DOT' => 153,
			";" => 193
		}
	},
	{#State 127
		ACTIONS => {
			"\"" => 197,
			"\${" => 47,
			'TEXT' => 195,
			";" => 196,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 198,
			'item' => 23,
			'ident' => 194,
			'node' => 56
		}
	},
	{#State 128
		ACTIONS => {
			";" => 199
		}
	},
	{#State 129
		ACTIONS => {
			"}" => 200
		}
	},
	{#State 130
		DEFAULT => -4
	},
	{#State 131
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 201,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 132
		ACTIONS => {
			'LITERAL' => 104,
			'IDENT' => 26,
			"\$" => 7,
			'COMMA' => 107,
			"\${" => 47
		},
		DEFAULT => -31,
		GOTOS => {
			'assign' => 108,
			'item' => 23,
			'ident' => 102,
			'node' => 56
		}
	},
	{#State 133
		ACTIONS => {
			'TO' => 202
		},
		DEFAULT => -91
	},
	{#State 134
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			'COMMA' => 204,
			"{" => 17,
			"]" => 203,
			"\${" => 47
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 205,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 135
		ACTIONS => {
			"]" => 206
		}
	},
	{#State 136
		DEFAULT => -101
	},
	{#State 137
		ACTIONS => {
			'BINOP' => 97,
			'OR' => 100,
			'AND' => 98,
			'CMPOP' => 99,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -29
	},
	{#State 138
		DEFAULT => -34
	},
	{#State 139
		ACTIONS => {
			'ASSIGN' => 207
		},
		DEFAULT => -115
	},
	{#State 140
		ACTIONS => {
			";" => 208
		}
	},
	{#State 141
		DEFAULT => -136,
		GOTOS => {
			'args' => 209
		}
	},
	{#State 142
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 210,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 143
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 211,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 144
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 118,
			"\${" => 47,
			'FILENAME' => 75,
			'LITERAL' => 119,
			'IDENT' => 116,
			"\$" => 114
		},
		GOTOS => {
			'lvalue' => 120,
			'lnameargs' => 212,
			'nameargs' => 121,
			'item' => 115,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 145
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 139,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 141,
			'lterm' => 20,
			'loopvar' => 213,
			'node' => 56
		}
	},
	{#State 146
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 214,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 147
		ACTIONS => {
			'BINOP' => 97,
			'OR' => 100,
			'AND' => 98,
			'CMPOP' => 99,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -28
	},
	{#State 148
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96,
			";" => 215
		}
	},
	{#State 149
		ACTIONS => {
			'TEXT' => 216
		}
	},
	{#State 150
		ACTIONS => {
			'DOT' => 82
		},
		DEFAULT => -136,
		GOTOS => {
			'args' => 217
		}
	},
	{#State 151
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -146,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 152
		DEFAULT => -136,
		GOTOS => {
			'args' => 223
		}
	},
	{#State 153
		ACTIONS => {
			'NUMBER' => 73,
			'FILENAME' => 75,
			'IDENT' => 77
		},
		GOTOS => {
			'filepart' => 224
		}
	},
	{#State 154
		ACTIONS => {
			"\"" => 225,
			"\${" => 47,
			'TEXT' => 195,
			";" => 196,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 198,
			'item' => 23,
			'ident' => 194,
			'node' => 56
		}
	},
	{#State 155
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -144,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 156
		DEFAULT => -111
	},
	{#State 157
		DEFAULT => -110
	},
	{#State 158
		DEFAULT => -76
	},
	{#State 159
		ACTIONS => {
			'FILTER' => -26,
			'FOR' => -26,
			'AND' => 98,
			'UNLESS' => -26,
			'CMPOP' => 99,
			'BINOP' => 97,
			'OR' => 100,
			'WHILE' => -26,
			'IF' => -26,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -131
	},
	{#State 160
		DEFAULT => -79
	},
	{#State 161
		ACTIONS => {
			";" => 226
		}
	},
	{#State 162
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 227,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 163
		DEFAULT => -126
	},
	{#State 164
		DEFAULT => -125
	},
	{#State 165
		DEFAULT => -85
	},
	{#State 166
		DEFAULT => -84
	},
	{#State 167
		ACTIONS => {
			'NUMBER' => 228,
			"\"" => 229,
			'LITERAL' => 230
		}
	},
	{#State 168
		DEFAULT => -106
	},
	{#State 169
		DEFAULT => -105
	},
	{#State 170
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 231,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 171
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 232,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 172
		DEFAULT => -94
	},
	{#State 173
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			":" => 233,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96
		}
	},
	{#State 174
		ACTIONS => {
			"/" => 101
		},
		DEFAULT => -118
	},
	{#State 175
		ACTIONS => {
			'CMPOP' => 99,
			'BINOP' => 97,
			"/" => 101
		},
		DEFAULT => -121
	},
	{#State 176
		ACTIONS => {
			'BINOP' => 97,
			"/" => 101
		},
		DEFAULT => -120
	},
	{#State 177
		ACTIONS => {
			'CMPOP' => 99,
			'BINOP' => 97,
			"/" => 101
		},
		DEFAULT => -122
	},
	{#State 178
		DEFAULT => -119
	},
	{#State 179
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 234,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 180
		ACTIONS => {
			")" => 235,
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 181
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 236,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 182
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 237,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 183
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 49,
			"[" => 51,
			'IDENT' => 238,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 85,
			'assign' => 86,
			'margs' => 239,
			'item' => 23,
			'ident' => 84,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 184
		DEFAULT => -78
	},
	{#State 185
		ACTIONS => {
			'BINOP' => 97,
			'OR' => 100,
			'AND' => 98,
			'CMPOP' => 99,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -26
	},
	{#State 186
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 240,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 187
		ACTIONS => {
			'ASSIGN' => -117
		},
		DEFAULT => -115
	},
	{#State 188
		ACTIONS => {
			"\"" => 241,
			"\${" => 47,
			'TEXT' => 195,
			";" => 196,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 198,
			'item' => 23,
			'ident' => 194,
			'node' => 56
		}
	},
	{#State 189
		ACTIONS => {
			'NUMBER' => 73,
			"\"" => 78,
			'FILENAME' => 75,
			'LITERAL' => 79,
			'IDENT' => 77,
			"\$" => 74
		},
		GOTOS => {
			'nameargs' => 242,
			'filename' => 76,
			'filepart' => 80
		}
	},
	{#State 190
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 243,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 191
		ACTIONS => {
			'CATCH' => 244,
			'FINAL' => 246
		},
		DEFAULT => -66,
		GOTOS => {
			'final' => 245
		}
	},
	{#State 192
		ACTIONS => {
			'END' => 247
		}
	},
	{#State 193
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 28,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'template' => 248,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 194
		ACTIONS => {
			'DOT' => 82
		},
		DEFAULT => -154
	},
	{#State 195
		DEFAULT => -155
	},
	{#State 196
		DEFAULT => -156
	},
	{#State 197
		DEFAULT => -96
	},
	{#State 198
		DEFAULT => -152
	},
	{#State 199
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 249,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 200
		DEFAULT => -116
	},
	{#State 201
		ACTIONS => {
			'AND' => 98,
			'CMPOP' => 99,
			'BINOP' => 97,
			'OR' => 100,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -132
	},
	{#State 202
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 250,
			'item' => 23,
			'ident' => 68,
			'node' => 56
		}
	},
	{#State 203
		DEFAULT => -92
	},
	{#State 204
		DEFAULT => -100
	},
	{#State 205
		DEFAULT => -99
	},
	{#State 206
		DEFAULT => -93
	},
	{#State 207
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 251,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 208
		DEFAULT => -53,
		GOTOS => {
			'@1-3' => 252
		}
	},
	{#State 209
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -59,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 210
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96
		},
		DEFAULT => -44
	},
	{#State 211
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96
		},
		DEFAULT => -57
	},
	{#State 212
		DEFAULT => -73
	},
	{#State 213
		DEFAULT => -55
	},
	{#State 214
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96
		},
		DEFAULT => -42
	},
	{#State 215
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 253,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 216
		ACTIONS => {
			'END' => 254
		}
	},
	{#State 217
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -142,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 218
		ACTIONS => {
			'ASSIGN' => 170
		},
		DEFAULT => -115
	},
	{#State 219
		ACTIONS => {
			'ASSIGN' => 171
		},
		DEFAULT => -97
	},
	{#State 220
		DEFAULT => -135
	},
	{#State 221
		DEFAULT => -134
	},
	{#State 222
		DEFAULT => -133
	},
	{#State 223
		ACTIONS => {
			")" => 255,
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 224
		DEFAULT => -147
	},
	{#State 225
		DEFAULT => -136,
		GOTOS => {
			'args' => 256
		}
	},
	{#State 226
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 257,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 227
		ACTIONS => {
			'AND' => 98,
			'CMPOP' => 99,
			'BINOP' => 97,
			'OR' => 100,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -131
	},
	{#State 228
		DEFAULT => -89
	},
	{#State 229
		ACTIONS => {
			'TEXT' => 258
		}
	},
	{#State 230
		DEFAULT => -87
	},
	{#State 231
		DEFAULT => -109
	},
	{#State 232
		DEFAULT => -108
	},
	{#State 233
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 259,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 234
		ACTIONS => {
			'CASE' => 261
		},
		DEFAULT => -52,
		GOTOS => {
			'case' => 260
		}
	},
	{#State 235
		DEFAULT => -114
	},
	{#State 236
		ACTIONS => {
			'END' => 262
		}
	},
	{#State 237
		ACTIONS => {
			'ELSE' => 263,
			'ELSIF' => 265
		},
		DEFAULT => -47,
		GOTOS => {
			'else' => 264
		}
	},
	{#State 238
		ACTIONS => {
			")" => -83,
			'IDENT' => -83,
			'COMMA' => -83
		},
		DEFAULT => -115
	},
	{#State 239
		ACTIONS => {
			'COMMA' => 268,
			")" => 267,
			'IDENT' => 266
		}
	},
	{#State 240
		ACTIONS => {
			'END' => 269
		}
	},
	{#State 241
		ACTIONS => {
			'ASSIGN' => -140
		},
		DEFAULT => -136,
		GOTOS => {
			'args' => 256
		}
	},
	{#State 242
		DEFAULT => -137
	},
	{#State 243
		ACTIONS => {
			'END' => 270
		}
	},
	{#State 244
		ACTIONS => {
			'NUMBER' => 73,
			'FILENAME' => 75,
			";" => 271,
			'DEFAULT' => 273,
			'IDENT' => 77
		},
		GOTOS => {
			'filename' => 272,
			'filepart' => 80
		}
	},
	{#State 245
		ACTIONS => {
			'END' => 274
		}
	},
	{#State 246
		ACTIONS => {
			";" => 275
		}
	},
	{#State 247
		DEFAULT => -75
	},
	{#State 248
		ACTIONS => {
			'END' => 276
		}
	},
	{#State 249
		ACTIONS => {
			'END' => 277
		}
	},
	{#State 250
		DEFAULT => -102
	},
	{#State 251
		DEFAULT => -136,
		GOTOS => {
			'args' => 278
		}
	},
	{#State 252
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 279,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 253
		ACTIONS => {
			'ELSE' => 263,
			'ELSIF' => 265
		},
		DEFAULT => -47,
		GOTOS => {
			'else' => 280
		}
	},
	{#State 254
		DEFAULT => -71
	},
	{#State 255
		DEFAULT => -145
	},
	{#State 256
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -143,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 257
		ACTIONS => {
			'END' => 281
		}
	},
	{#State 258
		ACTIONS => {
			"\"" => 282
		}
	},
	{#State 259
		ACTIONS => {
			'AND' => 98,
			'CMPOP' => 99,
			'BINOP' => 97,
			'OR' => 100,
			"/" => 101,
			"?" => 96
		},
		DEFAULT => -124
	},
	{#State 260
		ACTIONS => {
			'END' => 283
		}
	},
	{#State 261
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 43,
			"\${" => 47,
			'LITERAL' => 70,
			";" => 284,
			'DEFAULT' => 285,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 23,
			'ident' => 68,
			'term' => 286,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 262
		DEFAULT => -69
	},
	{#State 263
		ACTIONS => {
			";" => 287
		}
	},
	{#State 264
		ACTIONS => {
			'END' => 288
		}
	},
	{#State 265
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'NOT' => 3,
			'LITERAL' => 70,
			"[" => 51,
			'IDENT' => 26,
			"\$" => 7,
			"{" => 17,
			"\${" => 47,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 289,
			'item' => 23,
			'ident' => 68,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 266
		DEFAULT => -81
	},
	{#State 267
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 161,
			"\"" => 43,
			'NOT' => 3,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			"(" => 12,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'FORNEXT' => 39,
			'GET' => 64,
			'IF' => 66
		},
		GOTOS => {
			'directive' => 160,
			'sterm' => 1,
			'mdir' => 290,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'atomdir' => 5,
			'wrapper' => 37,
			'switch' => 44,
			'atomexpr' => 63,
			'loop' => 53,
			'expr' => 185,
			'assign' => 65,
			'perl' => 59,
			'ident' => 84,
			'term' => 67,
			'filter' => 61,
			'lterm' => 20,
			'node' => 56,
			'condition' => 13
		}
	},
	{#State 268
		DEFAULT => -82
	},
	{#State 269
		DEFAULT => -60
	},
	{#State 270
		DEFAULT => -56
	},
	{#State 271
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 291,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 272
		ACTIONS => {
			'DOT' => 153,
			";" => 292
		}
	},
	{#State 273
		ACTIONS => {
			";" => 293
		}
	},
	{#State 274
		DEFAULT => -61
	},
	{#State 275
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 294,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 276
		DEFAULT => -74
	},
	{#State 277
		DEFAULT => -72
	},
	{#State 278
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 43,
			'LITERAL' => 219,
			"[" => 51,
			'IDENT' => 218,
			"\$" => 7,
			'COMMA' => 220,
			"{" => 17,
			"\${" => 47
		},
		DEFAULT => -58,
		GOTOS => {
			'sterm' => 1,
			'param' => 221,
			'item' => 23,
			'ident' => 68,
			'term' => 222,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 279
		ACTIONS => {
			'END' => 295
		}
	},
	{#State 280
		ACTIONS => {
			'END' => 296
		}
	},
	{#State 281
		DEFAULT => -80
	},
	{#State 282
		DEFAULT => -88
	},
	{#State 283
		DEFAULT => -48
	},
	{#State 284
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 297,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 285
		ACTIONS => {
			";" => 298
		}
	},
	{#State 286
		ACTIONS => {
			";" => 299
		}
	},
	{#State 287
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 300,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 288
		DEFAULT => -43
	},
	{#State 289
		ACTIONS => {
			'AND' => 98,
			'BINOP' => 97,
			'CMPOP' => 99,
			"/" => 101,
			'OR' => 100,
			"?" => 96,
			";" => 301
		}
	},
	{#State 290
		DEFAULT => -77
	},
	{#State 291
		ACTIONS => {
			'CATCH' => 244,
			'FINAL' => 246
		},
		DEFAULT => -66,
		GOTOS => {
			'final' => 302
		}
	},
	{#State 292
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 303,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 293
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 304,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 294
		DEFAULT => -65
	},
	{#State 295
		DEFAULT => -54
	},
	{#State 296
		DEFAULT => -41
	},
	{#State 297
		DEFAULT => -51
	},
	{#State 298
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 305,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 299
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 306,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 300
		DEFAULT => -46
	},
	{#State 301
		ACTIONS => {
			'TRY' => 41,
			'NUMBER' => 2,
			'BLOCK' => 42,
			"\"" => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 45,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 47,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 49,
			'DEFAULT' => 50,
			"[" => 51,
			"{" => 17,
			'CALL' => 54,
			'THROW' => 55,
			'SET' => 21,
			'STOP' => 57,
			'SWITCH' => 22,
			'IDENT' => 26,
			'PERL' => 27,
			'FOR' => 58,
			'UNLESS' => 29,
			'MACRO' => 30,
			'CLEAR' => 60,
			'INCLUDE' => 31,
			'WRAPPER' => 32,
			'USE' => 34,
			'RETURN' => 35,
			'WHILE' => 36,
			'BREAK' => 38,
			'GET' => 64,
			'FORNEXT' => 39,
			'IF' => 66
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 24,
			'item' => 23,
			'chunk' => 25,
			'atomdir' => 5,
			'switch' => 44,
			'block' => 307,
			'anonblock' => 46,
			'perl' => 59,
			'ident' => 9,
			'filter' => 61,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 33,
			'macro' => 14,
			'use' => 62,
			'statement' => 15,
			'chunks' => 48,
			'wrapper' => 37,
			'atomexpr' => 63,
			'defblock' => 52,
			'loop' => 53,
			'capture' => 18,
			'expr' => 19,
			'assign' => 65,
			'term' => 67,
			'lterm' => 20,
			'node' => 56
		}
	},
	{#State 302
		DEFAULT => -64
	},
	{#State 303
		ACTIONS => {
			'CATCH' => 244,
			'FINAL' => 246
		},
		DEFAULT => -66,
		GOTOS => {
			'final' => 308
		}
	},
	{#State 304
		ACTIONS => {
			'CATCH' => 244,
			'FINAL' => 246
		},
		DEFAULT => -66,
		GOTOS => {
			'final' => 309
		}
	},
	{#State 305
		DEFAULT => -50
	},
	{#State 306
		ACTIONS => {
			'CASE' => 261
		},
		DEFAULT => -52,
		GOTOS => {
			'case' => 310
		}
	},
	{#State 307
		ACTIONS => {
			'ELSE' => 263,
			'ELSIF' => 265
		},
		DEFAULT => -47,
		GOTOS => {
			'else' => 311
		}
	},
	{#State 308
		DEFAULT => -62
	},
	{#State 309
		DEFAULT => -63
	},
	{#State 310
		DEFAULT => -49
	},
	{#State 311
		DEFAULT => -45
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 56 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 59 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 60 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 63 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 65 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 68 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1,
sub
#line 80 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 16
		 'statement', 2,
sub
#line 81 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 17
		 'statement', 0, undef
	],
	[#Rule 18
		 'directive', 1,
sub
#line 85 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 19
		 'directive', 1, undef
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'atomexpr', 1,
sub
#line 100 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 27
		 'atomexpr', 1, undef
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 104 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 105 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 106 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 107 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 108 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 109 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 111 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 35
		 'atomdir', 1,
sub
#line 112 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 113 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 114 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 115 "Parser.yp"
{ 'last;'                             }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 116 "Parser.yp"
{ $_[0]->{ INFOR }
					? $factory->next()
				        : 'next;'                         }
	],
	[#Rule 40
		 'atomdir', 1, undef
	],
	[#Rule 41
		 'condition', 6,
sub
#line 123 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 42
		 'condition', 3,
sub
#line 124 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 43
		 'condition', 6,
sub
#line 126 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 44
		 'condition', 3,
sub
#line 127 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 45
		 'else', 5,
sub
#line 131 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 46
		 'else', 3,
sub
#line 133 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 47
		 'else', 0,
sub
#line 134 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 48
		 'switch', 6,
sub
#line 138 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 49
		 'case', 5,
sub
#line 142 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 50
		 'case', 4,
sub
#line 144 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 51
		 'case', 3,
sub
#line 145 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 52
		 'case', 0,
sub
#line 146 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 53
		 '@1-3', 0,
sub
#line 149 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 54
		 'loop', 6,
sub
#line 150 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 55
		 'loop', 3,
sub
#line 154 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 56
		 'loop', 5,
sub
#line 156 "Parser.yp"
{ $factory->while(@_[2, 4])           }
	],
	[#Rule 57
		 'loop', 3,
sub
#line 157 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 58
		 'loopvar', 4,
sub
#line 160 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 59
		 'loopvar', 2,
sub
#line 161 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 60
		 'wrapper', 5,
sub
#line 165 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 61
		 'try', 5,
sub
#line 169 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 62
		 'final', 5,
sub
#line 173 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 63
		 'final', 5,
sub
#line 176 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[4];                              }
	],
	[#Rule 64
		 'final', 4,
sub
#line 179 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 65
		 'final', 3,
sub
#line 181 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 66
		 'final', 0,
sub
#line 182 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 67
		 'use', 2,
sub
#line 185 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 68
		 '@2-2', 0,
sub
#line 188 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 69
		 'perl', 5,
sub
#line 189 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 70
		 '@3-1', 0,
sub
#line 195 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 71
		 'rawperl', 5,
sub
#line 197 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 72
		 'filter', 5,
sub
#line 204 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 73
		 'filter', 3,
sub
#line 206 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 74
		 'defblock', 5,
sub
#line 210 "Parser.yp"
{ $_[0]->define_block(@_[2, 4]); 
				      undef                               }
	],
	[#Rule 75
		 'anonblock', 4,
sub
#line 214 "Parser.yp"
{ $factory->anon_block($_[3])         }
	],
	[#Rule 76
		 'capture', 3,
sub
#line 217 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 77
		 'macro', 6,
sub
#line 221 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 78
		 'macro', 3,
sub
#line 222 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 79
		 'mdir', 1, undef
	],
	[#Rule 80
		 'mdir', 4,
sub
#line 226 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 81
		 'margs', 2,
sub
#line 229 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 82
		 'margs', 2,
sub
#line 230 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 83
		 'margs', 1,
sub
#line 231 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 84
		 'metadata', 2,
sub
#line 234 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 85
		 'metadata', 2, undef
	],
	[#Rule 86
		 'metadata', 1, undef
	],
	[#Rule 87
		 'meta', 3,
sub
#line 239 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$// }; 
					 [ @_[1,3] ] }
	],
	[#Rule 88
		 'meta', 5,
sub
#line 241 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 89
		 'meta', 3,
sub
#line 242 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 90
		 'term', 1, undef
	],
	[#Rule 91
		 'term', 1, undef
	],
	[#Rule 92
		 'lterm', 3,
sub
#line 254 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 93
		 'lterm', 3,
sub
#line 255 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 94
		 'lterm', 3,
sub
#line 256 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 95
		 'sterm', 1,
sub
#line 259 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 96
		 'sterm', 3,
sub
#line 260 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 97
		 'sterm', 1, undef
	],
	[#Rule 98
		 'sterm', 1, undef
	],
	[#Rule 99
		 'list', 2,
sub
#line 265 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 100
		 'list', 2, undef
	],
	[#Rule 101
		 'list', 1, undef
	],
	[#Rule 102
		 'range', 3,
sub
#line 270 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 103
		 'hash', 1, undef
	],
	[#Rule 104
		 'hash', 0, undef
	],
	[#Rule 105
		 'params', 2,
sub
#line 278 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 106
		 'params', 2, undef
	],
	[#Rule 107
		 'params', 1, undef
	],
	[#Rule 108
		 'param', 3,
sub
#line 283 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 109
		 'param', 3,
sub
#line 284 "Parser.yp"
{ "'$_[1]' => $_[3]"                  }
	],
	[#Rule 110
		 'ident', 3,
sub
#line 287 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 111
		 'ident', 3,
sub
#line 288 "Parser.yp"
{ push(@{$_[1]}, $_[3], 0); $_[1]     }
	],
	[#Rule 112
		 'ident', 1, undef
	],
	[#Rule 113
		 'node', 1,
sub
#line 292 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 114
		 'node', 4,
sub
#line 293 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 115
		 'item', 1,
sub
#line 296 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 116
		 'item', 3,
sub
#line 297 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 117
		 'item', 2,
sub
#line 298 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 118
		 'expr', 3,
sub
#line 303 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 119
		 'expr', 3,
sub
#line 304 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 120
		 'expr', 3,
sub
#line 305 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 121
		 'expr', 3,
sub
#line 306 "Parser.yp"
{ "($_[1]) && ($_[3])"                }
	],
	[#Rule 122
		 'expr', 3,
sub
#line 307 "Parser.yp"
{ "($_[1]) || ($_[3])"                }
	],
	[#Rule 123
		 'expr', 2,
sub
#line 308 "Parser.yp"
{ "!($_[2])"                          }
	],
	[#Rule 124
		 'expr', 5,
sub
#line 309 "Parser.yp"
{ "(($_[1]) ? ($_[3]) : ($_[5]))"     }
	],
	[#Rule 125
		 'expr', 3,
sub
#line 310 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 126
		 'expr', 3,
sub
#line 311 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 127
		 'expr', 1, undef
	],
	[#Rule 128
		 'setlist', 2,
sub
#line 315 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 129
		 'setlist', 2, undef
	],
	[#Rule 130
		 'setlist', 1, undef
	],
	[#Rule 131
		 'assign', 3,
sub
#line 321 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 132
		 'assign', 3,
sub
#line 322 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 133
		 'args', 2,
sub
#line 329 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 134
		 'args', 2,
sub
#line 330 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 135
		 'args', 2,
sub
#line 331 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 136
		 'args', 0,
sub
#line 332 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 137
		 'lnameargs', 3,
sub
#line 342 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 138
		 'lnameargs', 1, undef
	],
	[#Rule 139
		 'lvalue', 1, undef
	],
	[#Rule 140
		 'lvalue', 3,
sub
#line 347 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 141
		 'lvalue', 1, undef
	],
	[#Rule 142
		 'nameargs', 3,
sub
#line 351 "Parser.yp"
{ [ $factory->ident($_[2]), $_[3] ]   }
	],
	[#Rule 143
		 'nameargs', 4,
sub
#line 352 "Parser.yp"
{ [ $factory->quoted($_[2]), $_[4] ]  }
	],
	[#Rule 144
		 'nameargs', 2,
sub
#line 353 "Parser.yp"
{ [   $_[1],   $_[2] ]                }
	],
	[#Rule 145
		 'nameargs', 4,
sub
#line 354 "Parser.yp"
{ [ "'$_[1]'", $_[3] ]                }
	],
	[#Rule 146
		 'nameargs', 2,
sub
#line 355 "Parser.yp"
{ [ "'$_[1]'", $_[2] ]                }
	],
	[#Rule 147
		 'filename', 3,
sub
#line 358 "Parser.yp"
{ "$_[1].$_[3]"                       }
	],
	[#Rule 148
		 'filename', 1, undef
	],
	[#Rule 149
		 'filepart', 1, undef
	],
	[#Rule 150
		 'filepart', 1, undef
	],
	[#Rule 151
		 'filepart', 1, undef
	],
	[#Rule 152
		 'quoted', 2,
sub
#line 372 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 153
		 'quoted', 0,
sub
#line 374 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 154
		 'quotable', 1,
sub
#line 377 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 155
		 'quotable', 1,
sub
#line 378 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 156
		 'quotable', 1,
sub
#line 379 "Parser.yp"
{ undef                               }
	]
];



1;












