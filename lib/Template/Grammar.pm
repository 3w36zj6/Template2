#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================

# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT DIV MOD
	IF UNLESS ELSE ELSIF FOR NEXT WHILE SWITCH CASE META
	TRY THROW CATCH FINAL LAST RETURN STOP CLEAR VIEW DEBUG
    );

# for historical reasons, != and == are converted to ne and eq to perform 
# stringwise comparison (mainly because it doesn't generate "non-numerical 
# comparison" warnings which != and == can) but the others (e.g. < > <= >=)
# are not converted to their stringwise equivalents.  I added 'gt' et al, 
# briefly for v2.04d and then took them out again in 2.04e.

%CMPOP = qw( 
    != ne
    == eq
    <  <
    >  >
    >= >=
    <= <=
);


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    'BREAK'   => 'LAST',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '_'       => 'CAT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT',		# regardless of ANYCASE flag
    'mod'     => 'MOD',
    'div'     => 'DIV',
};

# localise the temporary variables needed to complete lexer table
{ 
#    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @tokens = qw< ( ) [ ] { } ${ $ + / ; : ? >;
    my @cmpop  = keys %CMPOP;
#    my @binop  = qw( + - * % );              # '/' above, in @tokens
    my @binop  = qw( - * % );              # '+' and '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			"\"" => 45,
			'BLOCK' => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			"[" => 54,
			'DEFAULT' => 53,
			"{" => 17,
			'THROW' => 58,
			'CALL' => 57,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 30,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'loop' => 56,
			'defblock' => 55,
			'capture' => 18,
			'template' => 42,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 1
		DEFAULT => -102
	},
	{#State 2
		DEFAULT => -111
	},
	{#State 3
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 74,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 4
		DEFAULT => -24
	},
	{#State 5
		ACTIONS => {
			";" => -20
		},
		DEFAULT => -27
	},
	{#State 6
		DEFAULT => -77,
		GOTOS => {
			'@5-1' => 76
		}
	},
	{#State 7
		ACTIONS => {
			'IDENT' => 77
		}
	},
	{#State 8
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 87,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 9
		ACTIONS => {
			'DOT' => 89,
			'ASSIGN' => 90
		},
		DEFAULT => -107
	},
	{#State 10
		DEFAULT => -15
	},
	{#State 11
		DEFAULT => -6
	},
	{#State 12
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 52,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 92,
			'assign' => 93,
			'item' => 25,
			'ident' => 91,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 13
		DEFAULT => -21
	},
	{#State 14
		DEFAULT => -12
	},
	{#State 15
		ACTIONS => {
			";" => 94
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 96
		},
		GOTOS => {
			'meta' => 97,
			'metadata' => 95
		}
	},
	{#State 17
		ACTIONS => {
			"\${" => 50,
			'LITERAL' => 100,
			'IDENT' => 28,
			"\$" => 7
		},
		DEFAULT => -117,
		GOTOS => {
			'param' => 102,
			'params' => 98,
			'item' => 99,
			'hash' => 101
		}
	},
	{#State 18
		DEFAULT => -11
	},
	{#State 19
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			";" => -16,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -26
	},
	{#State 20
		DEFAULT => -101
	},
	{#State 21
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 113,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 22
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 114,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 23
		ACTIONS => {
			"\${" => 50,
			'LITERAL' => 117,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 70,
			'setlist' => 116,
			'item' => 25,
			'ident' => 115,
			'node' => 59
		}
	},
	{#State 24
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 118,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 25
		ACTIONS => {
			"(" => 119
		},
		DEFAULT => -126
	},
	{#State 26
		ACTIONS => {
			'COMMA' => 120,
			"\${" => 50,
			'LITERAL' => 117,
			'IDENT' => 28,
			"\$" => 7
		},
		DEFAULT => -19,
		GOTOS => {
			'assign' => 121,
			'item' => 25,
			'ident' => 115,
			'node' => 59
		}
	},
	{#State 27
		DEFAULT => -5
	},
	{#State 28
		DEFAULT => -128
	},
	{#State 29
		ACTIONS => {
			";" => 122
		}
	},
	{#State 30
		DEFAULT => -1
	},
	{#State 31
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 123,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 32
		ACTIONS => {
			"\${" => 50,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'item' => 25,
			'ident' => 124,
			'node' => 59
		}
	},
	{#State 33
		ACTIONS => {
			'IDENT' => 125
		}
	},
	{#State 34
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 126,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 35
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 127,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 36
		DEFAULT => -8
	},
	{#State 37
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 132,
			"\${" => 50,
			'FILENAME' => 80,
			'LITERAL' => 133,
			'IDENT' => 130,
			"\$" => 128
		},
		GOTOS => {
			'lvalue' => 134,
			'lnameargs' => 131,
			'nameargs' => 135,
			'item' => 129,
			'filename' => 81,
			'filepart' => 86,
			'name' => 83,
			'names' => 88
		}
	},
	{#State 38
		DEFAULT => -36
	},
	{#State 39
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 136,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 40
		DEFAULT => -42
	},
	{#State 41
		DEFAULT => -39
	},
	{#State 42
		ACTIONS => {
			'' => 137
		}
	},
	{#State 43
		ACTIONS => {
			";" => 138
		}
	},
	{#State 44
		ACTIONS => {
			'NUMBER' => 78,
			'FILENAME' => 80,
			'LITERAL' => 144,
			'IDENT' => 142
		},
		DEFAULT => -85,
		GOTOS => {
			'meta' => 97,
			'blockname' => 143,
			'filename' => 141,
			'blockargs' => 139,
			'filepart' => 86,
			'metadata' => 140
		}
	},
	{#State 45
		DEFAULT => -174,
		GOTOS => {
			'quoted' => 145
		}
	},
	{#State 46
		DEFAULT => -22
	},
	{#State 47
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 132,
			"\${" => 50,
			'FILENAME' => 80,
			'LITERAL' => 133,
			'IDENT' => 130,
			"\$" => 128
		},
		GOTOS => {
			'lvalue' => 134,
			'lnameargs' => 146,
			'nameargs' => 135,
			'item' => 129,
			'filename' => 81,
			'filepart' => 86,
			'name' => 83,
			'names' => 88
		}
	},
	{#State 48
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 147,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 49
		DEFAULT => -10
	},
	{#State 50
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 50,
			'REF' => 32,
			'LITERAL' => 75,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 148,
			'item' => 25,
			'ident' => 73,
			'node' => 59
		}
	},
	{#State 51
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -2,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 149,
			'atomdir' => 5,
			'switch' => 46,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 52
		ACTIONS => {
			'ASSIGN' => 150
		},
		DEFAULT => -110
	},
	{#State 53
		ACTIONS => {
			"\${" => 50,
			'LITERAL' => 117,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 70,
			'setlist' => 151,
			'item' => 25,
			'ident' => 115,
			'node' => 59
		}
	},
	{#State 54
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			"]" => 154,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 152,
			'list' => 153,
			'range' => 155,
			'item' => 25,
			'ident' => 73,
			'term' => 156,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 55
		DEFAULT => -9
	},
	{#State 56
		DEFAULT => -23
	},
	{#State 57
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 157,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 58
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 158,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 59
		DEFAULT => -125
	},
	{#State 60
		DEFAULT => -37
	},
	{#State 61
		DEFAULT => -14
	},
	{#State 62
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 159,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 25,
			'ident' => 73,
			'term' => 161,
			'lterm' => 20,
			'loopvar' => 160,
			'node' => 59
		}
	},
	{#State 63
		DEFAULT => -25
	},
	{#State 64
		DEFAULT => -38
	},
	{#State 65
		DEFAULT => -43
	},
	{#State 66
		DEFAULT => -13
	},
	{#State 67
		DEFAULT => -40
	},
	{#State 68
		ACTIONS => {
			'FOR' => 166,
			'UNLESS' => 162,
			'IF' => 167,
			'WHILE' => 164,
			'FILTER' => 165,
			'WRAPPER' => 163
		}
	},
	{#State 69
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 168,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 70
		DEFAULT => -147
	},
	{#State 71
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 169,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 72
		DEFAULT => -144
	},
	{#State 73
		ACTIONS => {
			'DOT' => 89
		},
		DEFAULT => -107
	},
	{#State 74
		ACTIONS => {
			'CAT' => 110,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -140
	},
	{#State 75
		DEFAULT => -110
	},
	{#State 76
		ACTIONS => {
			";" => 170
		}
	},
	{#State 77
		DEFAULT => -130
	},
	{#State 78
		DEFAULT => -172
	},
	{#State 79
		ACTIONS => {
			"\${" => 50,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'item' => 25,
			'ident' => 171,
			'node' => 59
		}
	},
	{#State 80
		DEFAULT => -170
	},
	{#State 81
		ACTIONS => {
			'DOT' => 172
		},
		DEFAULT => -166
	},
	{#State 82
		DEFAULT => -171
	},
	{#State 83
		DEFAULT => -164
	},
	{#State 84
		DEFAULT => -174,
		GOTOS => {
			'quoted' => 173
		}
	},
	{#State 85
		DEFAULT => -167
	},
	{#State 86
		DEFAULT => -169
	},
	{#State 87
		DEFAULT => -34
	},
	{#State 88
		ACTIONS => {
			"(" => 175,
			"+" => 176
		},
		DEFAULT => -154,
		GOTOS => {
			'args' => 174
		}
	},
	{#State 89
		ACTIONS => {
			'NUMBER' => 177,
			"\${" => 50,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'item' => 25,
			'node' => 178
		}
	},
	{#State 90
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 182,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			"(" => 12,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		GOTOS => {
			'directive' => 181,
			'sterm' => 1,
			'mdir' => 179,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'atomdir' => 5,
			'wrapper' => 40,
			'switch' => 46,
			'atomexpr' => 68,
			'loop' => 56,
			'expr' => 180,
			'assign' => 70,
			'perl' => 63,
			'ident' => 91,
			'term' => 72,
			'filter' => 65,
			'lterm' => 20,
			'node' => 59,
			'condition' => 13
		}
	},
	{#State 91
		ACTIONS => {
			'DOT' => 89,
			'ASSIGN' => 183
		},
		DEFAULT => -107
	},
	{#State 92
		ACTIONS => {
			'MOD' => 103,
			")" => 184,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 93
		ACTIONS => {
			")" => 185
		}
	},
	{#State 94
		DEFAULT => -7
	},
	{#State 95
		ACTIONS => {
			'COMMA' => 186,
			'IDENT' => 96
		},
		DEFAULT => -17,
		GOTOS => {
			'meta' => 187
		}
	},
	{#State 96
		ACTIONS => {
			'ASSIGN' => 188
		}
	},
	{#State 97
		DEFAULT => -97
	},
	{#State 98
		ACTIONS => {
			'COMMA' => 189,
			"\${" => 50,
			'LITERAL' => 100,
			'IDENT' => 28,
			"\$" => 7
		},
		DEFAULT => -116,
		GOTOS => {
			'param' => 190,
			'item' => 99
		}
	},
	{#State 99
		ACTIONS => {
			'ASSIGN' => 191
		}
	},
	{#State 100
		ACTIONS => {
			'ASSIGN' => 192
		}
	},
	{#State 101
		ACTIONS => {
			"}" => 193
		}
	},
	{#State 102
		DEFAULT => -120
	},
	{#State 103
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 194,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 104
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 195,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 105
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 196,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 106
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 197,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 107
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 198,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 108
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 199,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 109
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 200,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 110
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 201,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 111
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 202,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 112
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 203,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 113
		ACTIONS => {
			";" => 204
		}
	},
	{#State 114
		DEFAULT => -32
	},
	{#State 115
		ACTIONS => {
			'DOT' => 89,
			'ASSIGN' => 183
		}
	},
	{#State 116
		ACTIONS => {
			'LITERAL' => 117,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 120,
			"\${" => 50
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 121,
			'item' => 25,
			'ident' => 115,
			'node' => 59
		}
	},
	{#State 117
		ACTIONS => {
			'ASSIGN' => 150
		}
	},
	{#State 118
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			";" => 205,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 119
		DEFAULT => -154,
		GOTOS => {
			'args' => 206
		}
	},
	{#State 120
		DEFAULT => -146
	},
	{#State 121
		DEFAULT => -145
	},
	{#State 122
		DEFAULT => -75,
		GOTOS => {
			'@4-2' => 207
		}
	},
	{#State 123
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			";" => 208,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 124
		ACTIONS => {
			'DOT' => 89
		},
		DEFAULT => -108
	},
	{#State 125
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 182,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			"(" => 209,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		GOTOS => {
			'directive' => 181,
			'sterm' => 1,
			'mdir' => 210,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'atomdir' => 5,
			'wrapper' => 40,
			'switch' => 46,
			'atomexpr' => 68,
			'loop' => 56,
			'expr' => 211,
			'assign' => 70,
			'perl' => 63,
			'ident' => 91,
			'term' => 72,
			'filter' => 65,
			'lterm' => 20,
			'node' => 59,
			'condition' => 13
		}
	},
	{#State 126
		DEFAULT => -33
	},
	{#State 127
		ACTIONS => {
			";" => 212
		}
	},
	{#State 128
		ACTIONS => {
			"\${" => 50,
			'IDENT' => 213,
			"\$" => 7
		},
		GOTOS => {
			'item' => 25,
			'ident' => 171,
			'node' => 59
		}
	},
	{#State 129
		DEFAULT => -157
	},
	{#State 130
		ACTIONS => {
			'ASSIGN' => -128
		},
		DEFAULT => -171
	},
	{#State 131
		DEFAULT => -72
	},
	{#State 132
		DEFAULT => -174,
		GOTOS => {
			'quoted' => 214
		}
	},
	{#State 133
		ACTIONS => {
			'ASSIGN' => -159
		},
		DEFAULT => -167
	},
	{#State 134
		ACTIONS => {
			'ASSIGN' => 215
		}
	},
	{#State 135
		DEFAULT => -156
	},
	{#State 136
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			";" => 216,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 137
		DEFAULT => -0
	},
	{#State 138
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 217,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 139
		ACTIONS => {
			";" => 218
		}
	},
	{#State 140
		ACTIONS => {
			'COMMA' => 186,
			'IDENT' => 96
		},
		DEFAULT => -84,
		GOTOS => {
			'meta' => 187
		}
	},
	{#State 141
		ACTIONS => {
			'DOT' => 172
		},
		DEFAULT => -82
	},
	{#State 142
		ACTIONS => {
			'ASSIGN' => 188
		},
		DEFAULT => -171
	},
	{#State 143
		ACTIONS => {
			'IDENT' => 96
		},
		DEFAULT => -85,
		GOTOS => {
			'meta' => 97,
			'blockargs' => 219,
			'metadata' => 140
		}
	},
	{#State 144
		DEFAULT => -83
	},
	{#State 145
		ACTIONS => {
			"\"" => 223,
			"\${" => 50,
			'TEXT' => 221,
			";" => 222,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 224,
			'item' => 25,
			'ident' => 220,
			'node' => 59
		}
	},
	{#State 146
		ACTIONS => {
			";" => 225
		}
	},
	{#State 147
		DEFAULT => -41
	},
	{#State 148
		ACTIONS => {
			"}" => 226
		}
	},
	{#State 149
		DEFAULT => -4
	},
	{#State 150
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 227,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 151
		ACTIONS => {
			'LITERAL' => 117,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 120,
			"\${" => 50
		},
		DEFAULT => -31,
		GOTOS => {
			'assign' => 121,
			'item' => 25,
			'ident' => 115,
			'node' => 59
		}
	},
	{#State 152
		ACTIONS => {
			'TO' => 228
		},
		DEFAULT => -102
	},
	{#State 153
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 230,
			"{" => 17,
			"]" => 229,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 25,
			'ident' => 73,
			'term' => 231,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 154
		DEFAULT => -105
	},
	{#State 155
		ACTIONS => {
			"]" => 232
		}
	},
	{#State 156
		DEFAULT => -114
	},
	{#State 157
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -29
	},
	{#State 158
		DEFAULT => -35
	},
	{#State 159
		ACTIONS => {
			'ASSIGN' => 233
		},
		DEFAULT => -128
	},
	{#State 160
		ACTIONS => {
			";" => 234
		}
	},
	{#State 161
		DEFAULT => -154,
		GOTOS => {
			'args' => 235
		}
	},
	{#State 162
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 236,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 163
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 237,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 164
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 238,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 165
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 132,
			"\${" => 50,
			'FILENAME' => 80,
			'LITERAL' => 133,
			'IDENT' => 130,
			"\$" => 128
		},
		GOTOS => {
			'lvalue' => 134,
			'lnameargs' => 239,
			'nameargs' => 135,
			'item' => 129,
			'filename' => 81,
			'filepart' => 86,
			'name' => 83,
			'names' => 88
		}
	},
	{#State 166
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 159,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 25,
			'ident' => 73,
			'term' => 161,
			'lterm' => 20,
			'loopvar' => 240,
			'node' => 59
		}
	},
	{#State 167
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 241,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 168
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -28
	},
	{#State 169
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			";" => 242,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 170
		ACTIONS => {
			'TEXT' => 243
		}
	},
	{#State 171
		ACTIONS => {
			'DOT' => 89
		},
		DEFAULT => -154,
		GOTOS => {
			'args' => 244
		}
	},
	{#State 172
		ACTIONS => {
			'NUMBER' => 78,
			'FILENAME' => 80,
			'IDENT' => 82
		},
		GOTOS => {
			'filepart' => 245
		}
	},
	{#State 173
		ACTIONS => {
			"\"" => 246,
			"\${" => 50,
			'TEXT' => 221,
			";" => 222,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 224,
			'item' => 25,
			'ident' => 220,
			'node' => 59
		}
	},
	{#State 174
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 28,
			"\$" => 7,
			'REF' => 32,
			"\${" => 50,
			'LITERAL' => 249,
			"[" => 54,
			"{" => 17,
			'COMMA' => 250
		},
		DEFAULT => -161,
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 175
		DEFAULT => -154,
		GOTOS => {
			'args' => 253
		}
	},
	{#State 176
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82
		},
		GOTOS => {
			'filename' => 81,
			'filepart' => 86,
			'name' => 254
		}
	},
	{#State 177
		DEFAULT => -124
	},
	{#State 178
		DEFAULT => -123
	},
	{#State 179
		DEFAULT => -87
	},
	{#State 180
		ACTIONS => {
			'CAT' => 110,
			'IDENT' => -148,
			"\$" => -148,
			'AND' => 106,
			"\${" => -148,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			";" => -148,
			'LITERAL' => -148,
			'COMMA' => -148,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -26
	},
	{#State 181
		DEFAULT => -90
	},
	{#State 182
		ACTIONS => {
			";" => 255
		}
	},
	{#State 183
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 256,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 184
		DEFAULT => -143
	},
	{#State 185
		DEFAULT => -142
	},
	{#State 186
		DEFAULT => -96
	},
	{#State 187
		DEFAULT => -95
	},
	{#State 188
		ACTIONS => {
			'NUMBER' => 257,
			"\"" => 258,
			'LITERAL' => 259
		}
	},
	{#State 189
		DEFAULT => -119
	},
	{#State 190
		DEFAULT => -118
	},
	{#State 191
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 260,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 192
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 261,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 193
		DEFAULT => -106
	},
	{#State 194
		DEFAULT => -135
	},
	{#State 195
		ACTIONS => {
			'MOD' => 103,
			'AND' => 106,
			'BINOP' => 105,
			'DIV' => 109,
			":" => 262,
			'CMPOP' => 107,
			"/" => 112,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			"?" => 104
		}
	},
	{#State 196
		ACTIONS => {
			'MOD' => 103,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -131
	},
	{#State 197
		ACTIONS => {
			'CAT' => 110,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -138
	},
	{#State 198
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -136
	},
	{#State 199
		ACTIONS => {
			'CAT' => 110,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -139
	},
	{#State 200
		ACTIONS => {
			'MOD' => 103
		},
		DEFAULT => -134
	},
	{#State 201
		ACTIONS => {
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -137
	},
	{#State 202
		ACTIONS => {
			'MOD' => 103,
			'DIV' => 109,
			"/" => 112
		},
		DEFAULT => -133
	},
	{#State 203
		ACTIONS => {
			'MOD' => 103,
			'DIV' => 109
		},
		DEFAULT => -132
	},
	{#State 204
		DEFAULT => -73,
		GOTOS => {
			'@3-3' => 263
		}
	},
	{#State 205
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 264,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 206
		ACTIONS => {
			")" => 265,
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 249,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 250,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 207
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 266,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 208
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 267,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 209
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 52,
			"[" => 54,
			'IDENT' => 268,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 92,
			'assign' => 93,
			'margs' => 269,
			'item' => 25,
			'ident' => 91,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 210
		DEFAULT => -89
	},
	{#State 211
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -26
	},
	{#State 212
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 270,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 213
		ACTIONS => {
			'ASSIGN' => -130
		},
		DEFAULT => -128
	},
	{#State 214
		ACTIONS => {
			"\"" => 271,
			"\${" => 50,
			'TEXT' => 221,
			";" => 222,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 224,
			'item' => 25,
			'ident' => 220,
			'node' => 59
		}
	},
	{#State 215
		ACTIONS => {
			'NUMBER' => 78,
			"\"" => 84,
			'FILENAME' => 80,
			'LITERAL' => 85,
			'IDENT' => 82,
			"\$" => 79
		},
		GOTOS => {
			'nameargs' => 272,
			'filename' => 81,
			'filepart' => 86,
			'names' => 88,
			'name' => 83
		}
	},
	{#State 216
		DEFAULT => -59,
		GOTOS => {
			'@2-3' => 273
		}
	},
	{#State 217
		ACTIONS => {
			'CATCH' => 274,
			'FINAL' => 276
		},
		DEFAULT => -71,
		GOTOS => {
			'final' => 275
		}
	},
	{#State 218
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 277,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 219
		ACTIONS => {
			";" => 278
		}
	},
	{#State 220
		ACTIONS => {
			'DOT' => 89
		},
		DEFAULT => -175
	},
	{#State 221
		DEFAULT => -176
	},
	{#State 222
		DEFAULT => -177
	},
	{#State 223
		DEFAULT => -109
	},
	{#State 224
		DEFAULT => -173
	},
	{#State 225
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 279,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 226
		DEFAULT => -129
	},
	{#State 227
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -149
	},
	{#State 228
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 50,
			'REF' => 32,
			'LITERAL' => 75,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 280,
			'item' => 25,
			'ident' => 73,
			'node' => 59
		}
	},
	{#State 229
		DEFAULT => -103
	},
	{#State 230
		DEFAULT => -113
	},
	{#State 231
		DEFAULT => -112
	},
	{#State 232
		DEFAULT => -104
	},
	{#State 233
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 25,
			'ident' => 73,
			'term' => 281,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 234
		DEFAULT => -56,
		GOTOS => {
			'@1-3' => 282
		}
	},
	{#State 235
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 249,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 250,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		DEFAULT => -63,
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 236
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -47
	},
	{#State 237
		DEFAULT => -65
	},
	{#State 238
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -61
	},
	{#State 239
		DEFAULT => -80
	},
	{#State 240
		DEFAULT => -58
	},
	{#State 241
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -45
	},
	{#State 242
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 283,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 243
		ACTIONS => {
			'END' => 284
		}
	},
	{#State 244
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'IDENT' => 28,
			"\$" => 7,
			'REF' => 32,
			"\${" => 50,
			'LITERAL' => 249,
			"[" => 54,
			"{" => 17,
			'COMMA' => 250
		},
		DEFAULT => -160,
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 245
		DEFAULT => -168
	},
	{#State 246
		DEFAULT => -165
	},
	{#State 247
		ACTIONS => {
			'DOT' => 89,
			'ASSIGN' => 285
		},
		DEFAULT => -107
	},
	{#State 248
		ACTIONS => {
			"(" => 119,
			'ASSIGN' => 191
		},
		DEFAULT => -126
	},
	{#State 249
		ACTIONS => {
			'ASSIGN' => 192
		},
		DEFAULT => -110
	},
	{#State 250
		DEFAULT => -153
	},
	{#State 251
		DEFAULT => -151
	},
	{#State 252
		DEFAULT => -150
	},
	{#State 253
		ACTIONS => {
			")" => 286,
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 249,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 250,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 254
		DEFAULT => -163
	},
	{#State 255
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 287,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 256
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -148
	},
	{#State 257
		DEFAULT => -100
	},
	{#State 258
		ACTIONS => {
			'TEXT' => 288
		}
	},
	{#State 259
		DEFAULT => -98
	},
	{#State 260
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -122
	},
	{#State 261
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -121
	},
	{#State 262
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 289,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 263
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 290,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 264
		ACTIONS => {
			'CASE' => 292
		},
		DEFAULT => -55,
		GOTOS => {
			'case' => 291
		}
	},
	{#State 265
		DEFAULT => -127
	},
	{#State 266
		ACTIONS => {
			'END' => 293
		}
	},
	{#State 267
		ACTIONS => {
			'ELSE' => 294,
			'ELSIF' => 296
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 295
		}
	},
	{#State 268
		ACTIONS => {
			'IDENT' => -94,
			")" => -94,
			'COMMA' => -94
		},
		DEFAULT => -128
	},
	{#State 269
		ACTIONS => {
			'COMMA' => 299,
			")" => 298,
			'IDENT' => 297
		}
	},
	{#State 270
		ACTIONS => {
			'END' => 300
		}
	},
	{#State 271
		ACTIONS => {
			'ASSIGN' => -158
		},
		DEFAULT => -165
	},
	{#State 272
		DEFAULT => -155
	},
	{#State 273
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 301,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 274
		ACTIONS => {
			'NUMBER' => 78,
			'FILENAME' => 80,
			";" => 302,
			'DEFAULT' => 304,
			'IDENT' => 82
		},
		GOTOS => {
			'filename' => 303,
			'filepart' => 86
		}
	},
	{#State 275
		ACTIONS => {
			'END' => 305
		}
	},
	{#State 276
		ACTIONS => {
			";" => 306
		}
	},
	{#State 277
		ACTIONS => {
			'END' => 307
		}
	},
	{#State 278
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 30,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'template' => 308,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 279
		ACTIONS => {
			'END' => 309
		}
	},
	{#State 280
		DEFAULT => -115
	},
	{#State 281
		DEFAULT => -154,
		GOTOS => {
			'args' => 310
		}
	},
	{#State 282
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 311,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 283
		ACTIONS => {
			'ELSE' => 294,
			'ELSIF' => 296
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 312
		}
	},
	{#State 284
		DEFAULT => -78
	},
	{#State 285
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 313,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 286
		DEFAULT => -162
	},
	{#State 287
		ACTIONS => {
			'END' => 314
		}
	},
	{#State 288
		ACTIONS => {
			"\"" => 315
		}
	},
	{#State 289
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -141
	},
	{#State 290
		ACTIONS => {
			'END' => 316
		}
	},
	{#State 291
		ACTIONS => {
			'END' => 317
		}
	},
	{#State 292
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 45,
			"\${" => 50,
			'REF' => 32,
			'LITERAL' => 75,
			";" => 318,
			'DEFAULT' => 319,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 25,
			'ident' => 73,
			'term' => 320,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 293
		DEFAULT => -76
	},
	{#State 294
		ACTIONS => {
			";" => 321
		}
	},
	{#State 295
		ACTIONS => {
			'END' => 322
		}
	},
	{#State 296
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'NOT' => 3,
			'LITERAL' => 75,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			"{" => 17,
			'REF' => 32,
			"\${" => 50,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 323,
			'item' => 25,
			'ident' => 73,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 297
		DEFAULT => -92
	},
	{#State 298
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 182,
			"\"" => 45,
			'NOT' => 3,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			"(" => 12,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		GOTOS => {
			'directive' => 181,
			'sterm' => 1,
			'mdir' => 324,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'atomdir' => 5,
			'wrapper' => 40,
			'switch' => 46,
			'atomexpr' => 68,
			'loop' => 56,
			'expr' => 211,
			'assign' => 70,
			'perl' => 63,
			'ident' => 91,
			'term' => 72,
			'filter' => 65,
			'lterm' => 20,
			'node' => 59,
			'condition' => 13
		}
	},
	{#State 299
		DEFAULT => -93
	},
	{#State 300
		DEFAULT => -64
	},
	{#State 301
		ACTIONS => {
			'END' => 325
		}
	},
	{#State 302
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 326,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 303
		ACTIONS => {
			'DOT' => 172,
			";" => 327
		}
	},
	{#State 304
		ACTIONS => {
			";" => 328
		}
	},
	{#State 305
		DEFAULT => -66
	},
	{#State 306
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 329,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 307
		DEFAULT => -86
	},
	{#State 308
		ACTIONS => {
			'END' => 330
		}
	},
	{#State 309
		DEFAULT => -79
	},
	{#State 310
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 45,
			'LITERAL' => 249,
			"[" => 54,
			'IDENT' => 28,
			"\$" => 7,
			'COMMA' => 250,
			"{" => 17,
			'REF' => 32,
			"\${" => 50
		},
		DEFAULT => -62,
		GOTOS => {
			'sterm' => 1,
			'param' => 251,
			'item' => 248,
			'ident' => 247,
			'term' => 252,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 311
		ACTIONS => {
			'END' => 331
		}
	},
	{#State 312
		ACTIONS => {
			'END' => 332
		}
	},
	{#State 313
		ACTIONS => {
			'CAT' => 110,
			'AND' => 106,
			'CMPOP' => 107,
			'MOD' => 103,
			'BINOP' => 105,
			'OR' => 108,
			"+" => 111,
			'DIV' => 109,
			"/" => 112,
			"?" => 104
		},
		DEFAULT => -152
	},
	{#State 314
		DEFAULT => -91
	},
	{#State 315
		DEFAULT => -99
	},
	{#State 316
		DEFAULT => -74
	},
	{#State 317
		DEFAULT => -51
	},
	{#State 318
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 333,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 319
		ACTIONS => {
			";" => 334
		}
	},
	{#State 320
		ACTIONS => {
			";" => 335
		}
	},
	{#State 321
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 336,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 322
		DEFAULT => -46
	},
	{#State 323
		ACTIONS => {
			'MOD' => 103,
			'BINOP' => 105,
			"+" => 111,
			'CAT' => 110,
			'OR' => 108,
			";" => 337,
			'AND' => 106,
			'DIV' => 109,
			'CMPOP' => 107,
			"/" => 112,
			"?" => 104
		}
	},
	{#State 324
		DEFAULT => -88
	},
	{#State 325
		DEFAULT => -60
	},
	{#State 326
		ACTIONS => {
			'CATCH' => 274,
			'FINAL' => 276
		},
		DEFAULT => -71,
		GOTOS => {
			'final' => 338
		}
	},
	{#State 327
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 339,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 328
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 340,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 329
		DEFAULT => -70
	},
	{#State 330
		DEFAULT => -81
	},
	{#State 331
		DEFAULT => -57
	},
	{#State 332
		DEFAULT => -44
	},
	{#State 333
		DEFAULT => -54
	},
	{#State 334
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 341,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 335
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 342,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 336
		DEFAULT => -49
	},
	{#State 337
		ACTIONS => {
			'TRY' => 43,
			'NUMBER' => 2,
			'BLOCK' => 44,
			"\"" => 45,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 47,
			"\$" => 7,
			'DEBUG' => 48,
			'PROCESS' => 8,
			"\${" => 50,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -18,
			'LITERAL' => 52,
			'DEFAULT' => 53,
			"[" => 54,
			"{" => 17,
			'CALL' => 57,
			'THROW' => 58,
			'INSERT' => 22,
			'VIEW' => 21,
			'SET' => 23,
			'STOP' => 60,
			'SWITCH' => 24,
			'IDENT' => 28,
			'PERL' => 29,
			'FOR' => 62,
			'UNLESS' => 31,
			'REF' => 32,
			'MACRO' => 33,
			'CLEAR' => 64,
			'INCLUDE' => 34,
			'WRAPPER' => 35,
			'USE' => 37,
			'NEXT' => 67,
			'RETURN' => 38,
			'WHILE' => 39,
			'LAST' => 41,
			'GET' => 69,
			'IF' => 71
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'view' => 61,
			'try' => 4,
			'setlist' => 26,
			'item' => 25,
			'chunk' => 27,
			'atomdir' => 5,
			'switch' => 46,
			'block' => 343,
			'anonblock' => 49,
			'perl' => 63,
			'ident' => 9,
			'filter' => 65,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 36,
			'macro' => 14,
			'use' => 66,
			'statement' => 15,
			'chunks' => 51,
			'wrapper' => 40,
			'atomexpr' => 68,
			'defblock' => 55,
			'loop' => 56,
			'capture' => 18,
			'expr' => 19,
			'assign' => 70,
			'term' => 72,
			'lterm' => 20,
			'node' => 59
		}
	},
	{#State 338
		DEFAULT => -69
	},
	{#State 339
		ACTIONS => {
			'CATCH' => 274,
			'FINAL' => 276
		},
		DEFAULT => -71,
		GOTOS => {
			'final' => 344
		}
	},
	{#State 340
		ACTIONS => {
			'CATCH' => 274,
			'FINAL' => 276
		},
		DEFAULT => -71,
		GOTOS => {
			'final' => 345
		}
	},
	{#State 341
		DEFAULT => -53
	},
	{#State 342
		ACTIONS => {
			'CASE' => 292
		},
		DEFAULT => -55,
		GOTOS => {
			'case' => 346
		}
	},
	{#State 343
		ACTIONS => {
			'ELSE' => 294,
			'ELSIF' => 296
		},
		DEFAULT => -50,
		GOTOS => {
			'else' => 347
		}
	},
	{#State 344
		DEFAULT => -67
	},
	{#State 345
		DEFAULT => -68
	},
	{#State 346
		DEFAULT => -52
	},
	{#State 347
		DEFAULT => -48
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 64 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 67 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 68 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 71 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 73 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 76 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1, undef
	],
	[#Rule 16
		 'statement', 1,
sub
#line 89 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 17
		 'statement', 2,
sub
#line 90 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 18
		 'statement', 0, undef
	],
	[#Rule 19
		 'directive', 1,
sub
#line 94 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'atomexpr', 1,
sub
#line 108 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 27
		 'atomexpr', 1, undef
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 112 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 113 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 114 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 115 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 116 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 117 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 118 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 119 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 120 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 121 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 122 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 123 "Parser.yp"
{ $_[0]->{ INFOR } || $_[0]->{ INWHILE }
                                        ? 'last LOOP;'
                                        : 'last;'                         }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 126 "Parser.yp"
{ $_[0]->{ INFOR }
					? $factory->next()
				        : ($_[0]->{ INWHILE }
                                           ? 'next LOOP;'
                                           : 'next;')                     }
	],
	[#Rule 41
		 'atomdir', 2,
sub
#line 131 "Parser.yp"
{ my $info = $_[0]->{ FILEINFO }->[-1];
				      if ($_[2]->[0]->[0] =~ /^'(on|off)'$/) {
				          $info->{ DEBUG } = ($1 eq 'on');
#					  print STDERR "turned DEBUG ", $_[0]->{ DEBUG } ? 'on' : 'off', "\n";
					  $factory->debug($_[2]);
				      }
				      else {
					  $info->{ DEBUG } ? $factory->debug($_[2]) : '';
				      }
				    }
	],
	[#Rule 42
		 'atomdir', 1, undef
	],
	[#Rule 43
		 'atomdir', 1, undef
	],
	[#Rule 44
		 'condition', 6,
sub
#line 146 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 45
		 'condition', 3,
sub
#line 147 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 46
		 'condition', 6,
sub
#line 149 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 47
		 'condition', 3,
sub
#line 150 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 48
		 'else', 5,
sub
#line 154 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 49
		 'else', 3,
sub
#line 156 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 50
		 'else', 0,
sub
#line 157 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 51
		 'switch', 6,
sub
#line 161 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 52
		 'case', 5,
sub
#line 165 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 53
		 'case', 4,
sub
#line 167 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 54
		 'case', 3,
sub
#line 168 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 55
		 'case', 0,
sub
#line 169 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 56
		 '@1-3', 0,
sub
#line 172 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 57
		 'loop', 6,
sub
#line 173 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 58
		 'loop', 3,
sub
#line 177 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 59
		 '@2-3', 0,
sub
#line 178 "Parser.yp"
{ $_[0]->{ INWHILE }++                }
	],
	[#Rule 60
		 'loop', 6,
sub
#line 179 "Parser.yp"
{ $_[0]->{ INWHILE }--;
                                      $factory->while(@_[2, 5])           }
	],
	[#Rule 61
		 'loop', 3,
sub
#line 181 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 62
		 'loopvar', 4,
sub
#line 184 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 63
		 'loopvar', 2,
sub
#line 185 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 64
		 'wrapper', 5,
sub
#line 189 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 65
		 'wrapper', 3,
sub
#line 191 "Parser.yp"
{ $factory->wrapper(@_[3, 1])         }
	],
	[#Rule 66
		 'try', 5,
sub
#line 195 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 67
		 'final', 5,
sub
#line 199 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 68
		 'final', 5,
sub
#line 202 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[5];                              }
	],
	[#Rule 69
		 'final', 4,
sub
#line 205 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 70
		 'final', 3,
sub
#line 207 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 71
		 'final', 0,
sub
#line 208 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 72
		 'use', 2,
sub
#line 211 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 73
		 '@3-3', 0,
sub
#line 214 "Parser.yp"
{ $_[0]->push_defblock();		  }
	],
	[#Rule 74
		 'view', 6,
sub
#line 215 "Parser.yp"
{ $factory->view(@_[2,5], 
						     $_[0]->pop_defblock) }
	],
	[#Rule 75
		 '@4-2', 0,
sub
#line 219 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 76
		 'perl', 5,
sub
#line 220 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 77
		 '@5-1', 0,
sub
#line 226 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 78
		 'rawperl', 5,
sub
#line 228 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 79
		 'filter', 5,
sub
#line 235 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 80
		 'filter', 3,
sub
#line 237 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 81
		 'defblock', 6,
sub
#line 245 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[3] }]\n"
					  if $_[3];
				      $_[0]->define_block(@_[2, 5]); 
				      undef                               }
	],
	[#Rule 82
		 'blockname', 1, undef
	],
	[#Rule 83
		 'blockname', 1,
sub
#line 253 "Parser.yp"
{ $_[1] =~ s/^'(.*)'$/$1/; $_[1]      }
	],
	[#Rule 84
		 'blockargs', 1, undef
	],
	[#Rule 85
		 'blockargs', 0, undef
	],
	[#Rule 86
		 'anonblock', 5,
sub
#line 261 "Parser.yp"
{ local $" = ', ';
				      print STDERR "experimental block args: [@{ $_[2] }]\n"
					  if $_[2];
				      $factory->anon_block($_[4])         }
	],
	[#Rule 87
		 'capture', 3,
sub
#line 267 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 88
		 'macro', 6,
sub
#line 271 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 89
		 'macro', 3,
sub
#line 272 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 90
		 'mdir', 1, undef
	],
	[#Rule 91
		 'mdir', 4,
sub
#line 276 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 92
		 'margs', 2,
sub
#line 279 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 93
		 'margs', 2,
sub
#line 280 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 94
		 'margs', 1,
sub
#line 281 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 95
		 'metadata', 2,
sub
#line 284 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 96
		 'metadata', 2, undef
	],
	[#Rule 97
		 'metadata', 1, undef
	],
	[#Rule 98
		 'meta', 3,
sub
#line 289 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$//; 
						       s/\\'/'/g  }; 
					 [ @_[1,3] ] }
	],
	[#Rule 99
		 'meta', 5,
sub
#line 292 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 100
		 'meta', 3,
sub
#line 293 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 101
		 'term', 1, undef
	],
	[#Rule 102
		 'term', 1, undef
	],
	[#Rule 103
		 'lterm', 3,
sub
#line 305 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 104
		 'lterm', 3,
sub
#line 306 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 105
		 'lterm', 2,
sub
#line 307 "Parser.yp"
{ "[ ]"                               }
	],
	[#Rule 106
		 'lterm', 3,
sub
#line 308 "Parser.yp"
{ "{ $_[2]  }"                        }
	],
	[#Rule 107
		 'sterm', 1,
sub
#line 311 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 108
		 'sterm', 2,
sub
#line 312 "Parser.yp"
{ $factory->identref($_[2])           }
	],
	[#Rule 109
		 'sterm', 3,
sub
#line 313 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 110
		 'sterm', 1, undef
	],
	[#Rule 111
		 'sterm', 1, undef
	],
	[#Rule 112
		 'list', 2,
sub
#line 318 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 113
		 'list', 2, undef
	],
	[#Rule 114
		 'list', 1, undef
	],
	[#Rule 115
		 'range', 3,
sub
#line 323 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 116
		 'hash', 1, undef
	],
	[#Rule 117
		 'hash', 0,
sub
#line 328 "Parser.yp"
{ "" }
	],
	[#Rule 118
		 'params', 2,
sub
#line 331 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 119
		 'params', 2, undef
	],
	[#Rule 120
		 'params', 1, undef
	],
	[#Rule 121
		 'param', 3,
sub
#line 336 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 122
		 'param', 3,
sub
#line 337 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 123
		 'ident', 3,
sub
#line 340 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 124
		 'ident', 3,
sub
#line 341 "Parser.yp"
{ push(@{$_[1]}, 
					   map {($_, 0)} split(/\./, $_[3]));
				      $_[1];			          }
	],
	[#Rule 125
		 'ident', 1, undef
	],
	[#Rule 126
		 'node', 1,
sub
#line 347 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 127
		 'node', 4,
sub
#line 348 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 128
		 'item', 1,
sub
#line 351 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 129
		 'item', 3,
sub
#line 352 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 130
		 'item', 2,
sub
#line 353 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 131
		 'expr', 3,
sub
#line 358 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 132
		 'expr', 3,
sub
#line 359 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 133
		 'expr', 3,
sub
#line 360 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 134
		 'expr', 3,
sub
#line 361 "Parser.yp"
{ "int($_[1] / $_[3])"                }
	],
	[#Rule 135
		 'expr', 3,
sub
#line 362 "Parser.yp"
{ "$_[1] % $_[3]"                     }
	],
	[#Rule 136
		 'expr', 3,
sub
#line 363 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 137
		 'expr', 3,
sub
#line 364 "Parser.yp"
{ "$_[1]  . $_[3]"                    }
	],
	[#Rule 138
		 'expr', 3,
sub
#line 365 "Parser.yp"
{ "$_[1] && $_[3]"                    }
	],
	[#Rule 139
		 'expr', 3,
sub
#line 366 "Parser.yp"
{ "$_[1] || $_[3]"                    }
	],
	[#Rule 140
		 'expr', 2,
sub
#line 367 "Parser.yp"
{ "! $_[2]"                           }
	],
	[#Rule 141
		 'expr', 5,
sub
#line 368 "Parser.yp"
{ "$_[1] ? $_[3] : $_[5]"             }
	],
	[#Rule 142
		 'expr', 3,
sub
#line 369 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 143
		 'expr', 3,
sub
#line 370 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 144
		 'expr', 1, undef
	],
	[#Rule 145
		 'setlist', 2,
sub
#line 374 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 146
		 'setlist', 2, undef
	],
	[#Rule 147
		 'setlist', 1, undef
	],
	[#Rule 148
		 'assign', 3,
sub
#line 380 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 149
		 'assign', 3,
sub
#line 381 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 150
		 'args', 2,
sub
#line 388 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 151
		 'args', 2,
sub
#line 389 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 152
		 'args', 4,
sub
#line 390 "Parser.yp"
{ push(@{$_[1]->[0]}, "'', " . 
				      $factory->assign(@_[2,4])); $_[1]  }
	],
	[#Rule 153
		 'args', 2,
sub
#line 392 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 154
		 'args', 0,
sub
#line 393 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 155
		 'lnameargs', 3,
sub
#line 403 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 156
		 'lnameargs', 1, undef
	],
	[#Rule 157
		 'lvalue', 1, undef
	],
	[#Rule 158
		 'lvalue', 3,
sub
#line 408 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 159
		 'lvalue', 1, undef
	],
	[#Rule 160
		 'nameargs', 3,
sub
#line 412 "Parser.yp"
{ [ [$factory->ident($_[2])], $_[3] ]   }
	],
	[#Rule 161
		 'nameargs', 2,
sub
#line 413 "Parser.yp"
{ [ @_[1,2] ] }
	],
	[#Rule 162
		 'nameargs', 4,
sub
#line 414 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 163
		 'names', 3,
sub
#line 417 "Parser.yp"
{ push(@{$_[1]}, $_[3]); $_[1] }
	],
	[#Rule 164
		 'names', 1,
sub
#line 418 "Parser.yp"
{ [ $_[1] ]                    }
	],
	[#Rule 165
		 'name', 3,
sub
#line 421 "Parser.yp"
{ $factory->quoted($_[2])  }
	],
	[#Rule 166
		 'name', 1,
sub
#line 422 "Parser.yp"
{ "'$_[1]'" }
	],
	[#Rule 167
		 'name', 1, undef
	],
	[#Rule 168
		 'filename', 3,
sub
#line 434 "Parser.yp"
{ "$_[1].$_[3]" }
	],
	[#Rule 169
		 'filename', 1, undef
	],
	[#Rule 170
		 'filepart', 1, undef
	],
	[#Rule 171
		 'filepart', 1, undef
	],
	[#Rule 172
		 'filepart', 1, undef
	],
	[#Rule 173
		 'quoted', 2,
sub
#line 448 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 174
		 'quoted', 0,
sub
#line 450 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 175
		 'quotable', 1,
sub
#line 453 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 176
		 'quotable', 1,
sub
#line 454 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 177
		 'quotable', 1,
sub
#line 455 "Parser.yp"
{ undef                               }
	]
];



1;












