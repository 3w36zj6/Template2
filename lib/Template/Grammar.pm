#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INSERT INCLUDE PROCESS WRAPPER BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT
	IF UNLESS ELSE ELSIF FOR FORNEXT WHILE SWITCH CASE META
	TRY THROW CATCH FINAL BREAK RETURN STOP CLEAR
    );

%CMPOP = qw( != ne  == eq  < <  > >  >= >=  <= <= );


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT'		# regardless of CASE sensitivity flag
};

# localise the temporary variables needed to complete lexer table
{ 
    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( + - * % );             # '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			"\"" => 44,
			'BLOCK' => 43,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			"[" => 52,
			'DEFAULT' => 51,
			"{" => 17,
			'THROW' => 56,
			'CALL' => 55,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 29,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'loop' => 54,
			'defblock' => 53,
			'capture' => 18,
			'template' => 41,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 1
		DEFAULT => -92
	},
	{#State 2
		DEFAULT => -99
	},
	{#State 3
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 70,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 4
		DEFAULT => -24
	},
	{#State 5
		ACTIONS => {
			";" => -19
		},
		DEFAULT => -27
	},
	{#State 6
		DEFAULT => -71,
		GOTOS => {
			'@3-1' => 72
		}
	},
	{#State 7
		ACTIONS => {
			'IDENT' => 73
		}
	},
	{#State 8
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 82,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 9
		ACTIONS => {
			'DOT' => 83,
			'ASSIGN' => 84
		},
		DEFAULT => -96
	},
	{#State 10
		DEFAULT => -14
	},
	{#State 11
		DEFAULT => -6
	},
	{#State 12
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 50,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 86,
			'assign' => 87,
			'item' => 24,
			'ident' => 85,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 13
		DEFAULT => -20
	},
	{#State 14
		DEFAULT => -12
	},
	{#State 15
		ACTIONS => {
			";" => 88
		}
	},
	{#State 16
		ACTIONS => {
			'IDENT' => 90
		},
		GOTOS => {
			'meta' => 91,
			'metadata' => 89
		}
	},
	{#State 17
		ACTIONS => {
			'LITERAL' => 94,
			'IDENT' => 93
		},
		DEFAULT => -105,
		GOTOS => {
			'param' => 96,
			'params' => 92,
			'hash' => 95
		}
	},
	{#State 18
		DEFAULT => -11
	},
	{#State 19
		ACTIONS => {
			'BINOP' => 98,
			'OR' => 101,
			";" => -15,
			'AND' => 99,
			'CMPOP' => 100,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -26
	},
	{#State 20
		DEFAULT => -91
	},
	{#State 21
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 103,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 22
		ACTIONS => {
			"\${" => 48,
			'LITERAL' => 106,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 66,
			'setlist' => 105,
			'item' => 24,
			'ident' => 104,
			'node' => 57
		}
	},
	{#State 23
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 107,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 24
		ACTIONS => {
			"(" => 108
		},
		DEFAULT => -114
	},
	{#State 25
		ACTIONS => {
			'COMMA' => 109,
			"\${" => 48,
			'LITERAL' => 106,
			'IDENT' => 27,
			"\$" => 7
		},
		DEFAULT => -18,
		GOTOS => {
			'assign' => 110,
			'item' => 24,
			'ident' => 104,
			'node' => 57
		}
	},
	{#State 26
		DEFAULT => -5
	},
	{#State 27
		DEFAULT => -116
	},
	{#State 28
		ACTIONS => {
			";" => 111
		}
	},
	{#State 29
		DEFAULT => -1
	},
	{#State 30
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 112,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 31
		ACTIONS => {
			'IDENT' => 113
		}
	},
	{#State 32
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 114,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 33
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 115,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 34
		DEFAULT => -8
	},
	{#State 35
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 120,
			"\${" => 48,
			'FILENAME' => 76,
			'LITERAL' => 121,
			'IDENT' => 118,
			"\$" => 116
		},
		GOTOS => {
			'lvalue' => 122,
			'lnameargs' => 119,
			'nameargs' => 123,
			'item' => 117,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 36
		DEFAULT => -36
	},
	{#State 37
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 124,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 38
		DEFAULT => -23
	},
	{#State 39
		DEFAULT => -39
	},
	{#State 40
		DEFAULT => -40
	},
	{#State 41
		ACTIONS => {
			'' => 125
		}
	},
	{#State 42
		ACTIONS => {
			";" => 126
		}
	},
	{#State 43
		ACTIONS => {
			'NUMBER' => 74,
			'FILENAME' => 76,
			";" => 127,
			'IDENT' => 78
		},
		GOTOS => {
			'filename' => 128,
			'filepart' => 81
		}
	},
	{#State 44
		DEFAULT => -154,
		GOTOS => {
			'quoted' => 129
		}
	},
	{#State 45
		DEFAULT => -21
	},
	{#State 46
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 120,
			"\${" => 48,
			'FILENAME' => 76,
			'LITERAL' => 121,
			'IDENT' => 118,
			"\$" => 116
		},
		GOTOS => {
			'lvalue' => 122,
			'lnameargs' => 130,
			'nameargs' => 123,
			'item' => 117,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 47
		DEFAULT => -10
	},
	{#State 48
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 131,
			'item' => 24,
			'ident' => 69,
			'node' => 57
		}
	},
	{#State 49
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -2,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 132,
			'atomdir' => 5,
			'switch' => 45,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 50
		ACTIONS => {
			'ASSIGN' => 133
		},
		DEFAULT => -98
	},
	{#State 51
		ACTIONS => {
			"\${" => 48,
			'LITERAL' => 106,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'assign' => 66,
			'setlist' => 134,
			'item' => 24,
			'ident' => 104,
			'node' => 57
		}
	},
	{#State 52
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 135,
			'list' => 136,
			'range' => 137,
			'item' => 24,
			'ident' => 69,
			'term' => 138,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 53
		DEFAULT => -9
	},
	{#State 54
		DEFAULT => -22
	},
	{#State 55
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 139,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 56
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 140,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 57
		DEFAULT => -113
	},
	{#State 58
		DEFAULT => -37
	},
	{#State 59
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 141,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 143,
			'lterm' => 20,
			'loopvar' => 142,
			'node' => 57
		}
	},
	{#State 60
		DEFAULT => -25
	},
	{#State 61
		DEFAULT => -38
	},
	{#State 62
		DEFAULT => -41
	},
	{#State 63
		DEFAULT => -13
	},
	{#State 64
		ACTIONS => {
			'FOR' => 147,
			'UNLESS' => 144,
			'IF' => 148,
			'WHILE' => 145,
			'FILTER' => 146
		}
	},
	{#State 65
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 149,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 66
		DEFAULT => -131
	},
	{#State 67
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 150,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 68
		DEFAULT => -128
	},
	{#State 69
		ACTIONS => {
			'DOT' => 83
		},
		DEFAULT => -96
	},
	{#State 70
		ACTIONS => {
			'CMPOP' => 100,
			'BINOP' => 98,
			"/" => 102
		},
		DEFAULT => -124
	},
	{#State 71
		DEFAULT => -98
	},
	{#State 72
		ACTIONS => {
			";" => 151
		}
	},
	{#State 73
		DEFAULT => -118
	},
	{#State 74
		DEFAULT => -152
	},
	{#State 75
		ACTIONS => {
			"\${" => 48,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 152,
			'node' => 57
		}
	},
	{#State 76
		DEFAULT => -150
	},
	{#State 77
		ACTIONS => {
			'DOT' => 155,
			"(" => 154
		},
		DEFAULT => -137,
		GOTOS => {
			'args' => 153
		}
	},
	{#State 78
		DEFAULT => -151
	},
	{#State 79
		DEFAULT => -154,
		GOTOS => {
			'quoted' => 156
		}
	},
	{#State 80
		DEFAULT => -137,
		GOTOS => {
			'args' => 157
		}
	},
	{#State 81
		DEFAULT => -149
	},
	{#State 82
		DEFAULT => -34
	},
	{#State 83
		ACTIONS => {
			'NUMBER' => 158,
			"\${" => 48,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'node' => 159
		}
	},
	{#State 84
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 163,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 12,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'FORNEXT' => 40,
			'GET' => 65,
			'IF' => 67
		},
		GOTOS => {
			'directive' => 162,
			'sterm' => 1,
			'mdir' => 160,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 38,
			'switch' => 45,
			'atomexpr' => 64,
			'loop' => 54,
			'expr' => 161,
			'assign' => 66,
			'perl' => 60,
			'ident' => 85,
			'term' => 68,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 85
		ACTIONS => {
			'DOT' => 83,
			'ASSIGN' => 164
		},
		DEFAULT => -96
	},
	{#State 86
		ACTIONS => {
			'AND' => 99,
			")" => 165,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97
		}
	},
	{#State 87
		ACTIONS => {
			")" => 166
		}
	},
	{#State 88
		DEFAULT => -7
	},
	{#State 89
		ACTIONS => {
			'COMMA' => 167,
			'IDENT' => 90
		},
		DEFAULT => -16,
		GOTOS => {
			'meta' => 168
		}
	},
	{#State 90
		ACTIONS => {
			'ASSIGN' => 169
		}
	},
	{#State 91
		DEFAULT => -87
	},
	{#State 92
		ACTIONS => {
			'COMMA' => 170,
			'LITERAL' => 94,
			'IDENT' => 93
		},
		DEFAULT => -104,
		GOTOS => {
			'param' => 171
		}
	},
	{#State 93
		ACTIONS => {
			'ASSIGN' => 172
		}
	},
	{#State 94
		ACTIONS => {
			'ASSIGN' => 173
		}
	},
	{#State 95
		ACTIONS => {
			"}" => 174
		}
	},
	{#State 96
		DEFAULT => -108
	},
	{#State 97
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 175,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 98
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 176,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 99
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 177,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 100
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 178,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 101
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 179,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 102
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 180,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 103
		DEFAULT => -32
	},
	{#State 104
		ACTIONS => {
			'DOT' => 83,
			'ASSIGN' => 164
		}
	},
	{#State 105
		ACTIONS => {
			'LITERAL' => 106,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 109,
			"\${" => 48
		},
		DEFAULT => -30,
		GOTOS => {
			'assign' => 110,
			'item' => 24,
			'ident' => 104,
			'node' => 57
		}
	},
	{#State 106
		ACTIONS => {
			'ASSIGN' => 133
		}
	},
	{#State 107
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97,
			";" => 181
		}
	},
	{#State 108
		DEFAULT => -137,
		GOTOS => {
			'args' => 182
		}
	},
	{#State 109
		DEFAULT => -130
	},
	{#State 110
		DEFAULT => -129
	},
	{#State 111
		DEFAULT => -69,
		GOTOS => {
			'@2-2' => 183
		}
	},
	{#State 112
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97,
			";" => 184
		}
	},
	{#State 113
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 163,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 185,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'FORNEXT' => 40,
			'GET' => 65,
			'IF' => 67
		},
		GOTOS => {
			'directive' => 162,
			'sterm' => 1,
			'mdir' => 186,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 38,
			'switch' => 45,
			'atomexpr' => 64,
			'loop' => 54,
			'expr' => 187,
			'assign' => 66,
			'perl' => 60,
			'ident' => 85,
			'term' => 68,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 114
		DEFAULT => -33
	},
	{#State 115
		ACTIONS => {
			";" => 188
		}
	},
	{#State 116
		ACTIONS => {
			"\${" => 48,
			'IDENT' => 189,
			"\$" => 7
		},
		GOTOS => {
			'item' => 24,
			'ident' => 152,
			'node' => 57
		}
	},
	{#State 117
		DEFAULT => -140
	},
	{#State 118
		ACTIONS => {
			'ASSIGN' => -116
		},
		DEFAULT => -151
	},
	{#State 119
		DEFAULT => -68
	},
	{#State 120
		DEFAULT => -154,
		GOTOS => {
			'quoted' => 190
		}
	},
	{#State 121
		ACTIONS => {
			'ASSIGN' => -142
		},
		DEFAULT => -137,
		GOTOS => {
			'args' => 157
		}
	},
	{#State 122
		ACTIONS => {
			'ASSIGN' => 191
		}
	},
	{#State 123
		DEFAULT => -139
	},
	{#State 124
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97,
			";" => 192
		}
	},
	{#State 125
		DEFAULT => -0
	},
	{#State 126
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 193,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 127
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 194,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 128
		ACTIONS => {
			'DOT' => 155,
			";" => 195
		}
	},
	{#State 129
		ACTIONS => {
			"\"" => 199,
			"\${" => 48,
			'TEXT' => 197,
			";" => 198,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 200,
			'item' => 24,
			'ident' => 196,
			'node' => 57
		}
	},
	{#State 130
		ACTIONS => {
			";" => 201
		}
	},
	{#State 131
		ACTIONS => {
			"}" => 202
		}
	},
	{#State 132
		DEFAULT => -4
	},
	{#State 133
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 203,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 134
		ACTIONS => {
			'LITERAL' => 106,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 109,
			"\${" => 48
		},
		DEFAULT => -31,
		GOTOS => {
			'assign' => 110,
			'item' => 24,
			'ident' => 104,
			'node' => 57
		}
	},
	{#State 135
		ACTIONS => {
			'TO' => 204
		},
		DEFAULT => -92
	},
	{#State 136
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			'COMMA' => 206,
			"{" => 17,
			"]" => 205,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 207,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 137
		ACTIONS => {
			"]" => 208
		}
	},
	{#State 138
		DEFAULT => -102
	},
	{#State 139
		ACTIONS => {
			'BINOP' => 98,
			'OR' => 101,
			'AND' => 99,
			'CMPOP' => 100,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -29
	},
	{#State 140
		DEFAULT => -35
	},
	{#State 141
		ACTIONS => {
			'ASSIGN' => 209
		},
		DEFAULT => -116
	},
	{#State 142
		ACTIONS => {
			";" => 210
		}
	},
	{#State 143
		DEFAULT => -137,
		GOTOS => {
			'args' => 211
		}
	},
	{#State 144
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 212,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 145
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 213,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 146
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 120,
			"\${" => 48,
			'FILENAME' => 76,
			'LITERAL' => 121,
			'IDENT' => 118,
			"\$" => 116
		},
		GOTOS => {
			'lvalue' => 122,
			'lnameargs' => 214,
			'nameargs' => 123,
			'item' => 117,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 147
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 141,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 143,
			'lterm' => 20,
			'loopvar' => 215,
			'node' => 57
		}
	},
	{#State 148
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 216,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 149
		ACTIONS => {
			'BINOP' => 98,
			'OR' => 101,
			'AND' => 99,
			'CMPOP' => 100,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -28
	},
	{#State 150
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97,
			";" => 217
		}
	},
	{#State 151
		ACTIONS => {
			'TEXT' => 218
		}
	},
	{#State 152
		ACTIONS => {
			'DOT' => 83
		},
		DEFAULT => -137,
		GOTOS => {
			'args' => 219
		}
	},
	{#State 153
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -147,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 154
		DEFAULT => -137,
		GOTOS => {
			'args' => 225
		}
	},
	{#State 155
		ACTIONS => {
			'NUMBER' => 74,
			'FILENAME' => 76,
			'IDENT' => 78
		},
		GOTOS => {
			'filepart' => 226
		}
	},
	{#State 156
		ACTIONS => {
			"\"" => 227,
			"\${" => 48,
			'TEXT' => 197,
			";" => 198,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 200,
			'item' => 24,
			'ident' => 196,
			'node' => 57
		}
	},
	{#State 157
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -145,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 158
		DEFAULT => -112
	},
	{#State 159
		DEFAULT => -111
	},
	{#State 160
		DEFAULT => -77
	},
	{#State 161
		ACTIONS => {
			'FILTER' => -26,
			'FOR' => -26,
			'AND' => 99,
			'UNLESS' => -26,
			'CMPOP' => 100,
			'BINOP' => 98,
			'OR' => 101,
			'WHILE' => -26,
			'IF' => -26,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -132
	},
	{#State 162
		DEFAULT => -80
	},
	{#State 163
		ACTIONS => {
			";" => 228
		}
	},
	{#State 164
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 229,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 165
		DEFAULT => -127
	},
	{#State 166
		DEFAULT => -126
	},
	{#State 167
		DEFAULT => -86
	},
	{#State 168
		DEFAULT => -85
	},
	{#State 169
		ACTIONS => {
			'NUMBER' => 230,
			"\"" => 231,
			'LITERAL' => 232
		}
	},
	{#State 170
		DEFAULT => -107
	},
	{#State 171
		DEFAULT => -106
	},
	{#State 172
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 233,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 173
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 234,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 174
		DEFAULT => -95
	},
	{#State 175
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			":" => 235,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97
		}
	},
	{#State 176
		ACTIONS => {
			"/" => 102
		},
		DEFAULT => -119
	},
	{#State 177
		ACTIONS => {
			'CMPOP' => 100,
			'BINOP' => 98,
			"/" => 102
		},
		DEFAULT => -122
	},
	{#State 178
		ACTIONS => {
			'BINOP' => 98,
			"/" => 102
		},
		DEFAULT => -121
	},
	{#State 179
		ACTIONS => {
			'CMPOP' => 100,
			'BINOP' => 98,
			"/" => 102
		},
		DEFAULT => -123
	},
	{#State 180
		DEFAULT => -120
	},
	{#State 181
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 236,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 182
		ACTIONS => {
			")" => 237,
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 183
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 238,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 184
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 239,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 185
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 50,
			"[" => 52,
			'IDENT' => 240,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 86,
			'assign' => 87,
			'margs' => 241,
			'item' => 24,
			'ident' => 85,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 186
		DEFAULT => -79
	},
	{#State 187
		ACTIONS => {
			'BINOP' => 98,
			'OR' => 101,
			'AND' => 99,
			'CMPOP' => 100,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -26
	},
	{#State 188
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 242,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 189
		ACTIONS => {
			'ASSIGN' => -118
		},
		DEFAULT => -116
	},
	{#State 190
		ACTIONS => {
			"\"" => 243,
			"\${" => 48,
			'TEXT' => 197,
			";" => 198,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'quotable' => 200,
			'item' => 24,
			'ident' => 196,
			'node' => 57
		}
	},
	{#State 191
		ACTIONS => {
			'NUMBER' => 74,
			"\"" => 79,
			'FILENAME' => 76,
			'LITERAL' => 80,
			'IDENT' => 78,
			"\$" => 75
		},
		GOTOS => {
			'nameargs' => 244,
			'filename' => 77,
			'filepart' => 81
		}
	},
	{#State 192
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 245,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 193
		ACTIONS => {
			'CATCH' => 246,
			'FINAL' => 248
		},
		DEFAULT => -67,
		GOTOS => {
			'final' => 247
		}
	},
	{#State 194
		ACTIONS => {
			'END' => 249
		}
	},
	{#State 195
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 29,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'template' => 250,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 196
		ACTIONS => {
			'DOT' => 83
		},
		DEFAULT => -155
	},
	{#State 197
		DEFAULT => -156
	},
	{#State 198
		DEFAULT => -157
	},
	{#State 199
		DEFAULT => -97
	},
	{#State 200
		DEFAULT => -153
	},
	{#State 201
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 251,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 202
		DEFAULT => -117
	},
	{#State 203
		ACTIONS => {
			'AND' => 99,
			'CMPOP' => 100,
			'BINOP' => 98,
			'OR' => 101,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -133
	},
	{#State 204
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 252,
			'item' => 24,
			'ident' => 69,
			'node' => 57
		}
	},
	{#State 205
		DEFAULT => -93
	},
	{#State 206
		DEFAULT => -101
	},
	{#State 207
		DEFAULT => -100
	},
	{#State 208
		DEFAULT => -94
	},
	{#State 209
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 253,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 210
		DEFAULT => -54,
		GOTOS => {
			'@1-3' => 254
		}
	},
	{#State 211
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -60,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 212
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97
		},
		DEFAULT => -45
	},
	{#State 213
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97
		},
		DEFAULT => -58
	},
	{#State 214
		DEFAULT => -74
	},
	{#State 215
		DEFAULT => -56
	},
	{#State 216
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97
		},
		DEFAULT => -43
	},
	{#State 217
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 255,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 218
		ACTIONS => {
			'END' => 256
		}
	},
	{#State 219
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -143,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 220
		ACTIONS => {
			'ASSIGN' => 172
		},
		DEFAULT => -116
	},
	{#State 221
		ACTIONS => {
			'ASSIGN' => 173
		},
		DEFAULT => -98
	},
	{#State 222
		DEFAULT => -136
	},
	{#State 223
		DEFAULT => -135
	},
	{#State 224
		DEFAULT => -134
	},
	{#State 225
		ACTIONS => {
			")" => 257,
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 226
		DEFAULT => -148
	},
	{#State 227
		DEFAULT => -137,
		GOTOS => {
			'args' => 258
		}
	},
	{#State 228
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 259,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 229
		ACTIONS => {
			'AND' => 99,
			'CMPOP' => 100,
			'BINOP' => 98,
			'OR' => 101,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -132
	},
	{#State 230
		DEFAULT => -90
	},
	{#State 231
		ACTIONS => {
			'TEXT' => 260
		}
	},
	{#State 232
		DEFAULT => -88
	},
	{#State 233
		DEFAULT => -110
	},
	{#State 234
		DEFAULT => -109
	},
	{#State 235
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 261,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 236
		ACTIONS => {
			'CASE' => 263
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 262
		}
	},
	{#State 237
		DEFAULT => -115
	},
	{#State 238
		ACTIONS => {
			'END' => 264
		}
	},
	{#State 239
		ACTIONS => {
			'ELSE' => 265,
			'ELSIF' => 267
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 266
		}
	},
	{#State 240
		ACTIONS => {
			")" => -84,
			'IDENT' => -84,
			'COMMA' => -84
		},
		DEFAULT => -116
	},
	{#State 241
		ACTIONS => {
			'COMMA' => 270,
			")" => 269,
			'IDENT' => 268
		}
	},
	{#State 242
		ACTIONS => {
			'END' => 271
		}
	},
	{#State 243
		ACTIONS => {
			'ASSIGN' => -141
		},
		DEFAULT => -137,
		GOTOS => {
			'args' => 258
		}
	},
	{#State 244
		DEFAULT => -138
	},
	{#State 245
		ACTIONS => {
			'END' => 272
		}
	},
	{#State 246
		ACTIONS => {
			'NUMBER' => 74,
			'FILENAME' => 76,
			";" => 273,
			'DEFAULT' => 275,
			'IDENT' => 78
		},
		GOTOS => {
			'filename' => 274,
			'filepart' => 81
		}
	},
	{#State 247
		ACTIONS => {
			'END' => 276
		}
	},
	{#State 248
		ACTIONS => {
			";" => 277
		}
	},
	{#State 249
		DEFAULT => -76
	},
	{#State 250
		ACTIONS => {
			'END' => 278
		}
	},
	{#State 251
		ACTIONS => {
			'END' => 279
		}
	},
	{#State 252
		DEFAULT => -103
	},
	{#State 253
		DEFAULT => -137,
		GOTOS => {
			'args' => 280
		}
	},
	{#State 254
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 281,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 255
		ACTIONS => {
			'ELSE' => 265,
			'ELSIF' => 267
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 282
		}
	},
	{#State 256
		DEFAULT => -72
	},
	{#State 257
		DEFAULT => -146
	},
	{#State 258
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -144,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 259
		ACTIONS => {
			'END' => 283
		}
	},
	{#State 260
		ACTIONS => {
			"\"" => 284
		}
	},
	{#State 261
		ACTIONS => {
			'AND' => 99,
			'CMPOP' => 100,
			'BINOP' => 98,
			'OR' => 101,
			"/" => 102,
			"?" => 97
		},
		DEFAULT => -125
	},
	{#State 262
		ACTIONS => {
			'END' => 285
		}
	},
	{#State 263
		ACTIONS => {
			"{" => 17,
			'NUMBER' => 2,
			"\"" => 44,
			"\${" => 48,
			'LITERAL' => 71,
			";" => 286,
			'DEFAULT' => 287,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7
		},
		GOTOS => {
			'sterm' => 1,
			'item' => 24,
			'ident' => 69,
			'term' => 288,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 264
		DEFAULT => -70
	},
	{#State 265
		ACTIONS => {
			";" => 289
		}
	},
	{#State 266
		ACTIONS => {
			'END' => 290
		}
	},
	{#State 267
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'NOT' => 3,
			'LITERAL' => 71,
			"[" => 52,
			'IDENT' => 27,
			"\$" => 7,
			"{" => 17,
			"\${" => 48,
			"(" => 12
		},
		GOTOS => {
			'sterm' => 1,
			'expr' => 291,
			'item' => 24,
			'ident' => 69,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 268
		DEFAULT => -82
	},
	{#State 269
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 163,
			"\"" => 44,
			'NOT' => 3,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			"(" => 12,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'FORNEXT' => 40,
			'GET' => 65,
			'IF' => 67
		},
		GOTOS => {
			'directive' => 162,
			'sterm' => 1,
			'mdir' => 292,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'atomdir' => 5,
			'wrapper' => 38,
			'switch' => 45,
			'atomexpr' => 64,
			'loop' => 54,
			'expr' => 187,
			'assign' => 66,
			'perl' => 60,
			'ident' => 85,
			'term' => 68,
			'filter' => 62,
			'lterm' => 20,
			'node' => 57,
			'condition' => 13
		}
	},
	{#State 270
		DEFAULT => -83
	},
	{#State 271
		DEFAULT => -61
	},
	{#State 272
		DEFAULT => -57
	},
	{#State 273
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 293,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 274
		ACTIONS => {
			'DOT' => 155,
			";" => 294
		}
	},
	{#State 275
		ACTIONS => {
			";" => 295
		}
	},
	{#State 276
		DEFAULT => -62
	},
	{#State 277
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 296,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 278
		DEFAULT => -75
	},
	{#State 279
		DEFAULT => -73
	},
	{#State 280
		ACTIONS => {
			'NUMBER' => 2,
			"\"" => 44,
			'LITERAL' => 221,
			"[" => 52,
			'IDENT' => 220,
			"\$" => 7,
			'COMMA' => 222,
			"{" => 17,
			"\${" => 48
		},
		DEFAULT => -59,
		GOTOS => {
			'sterm' => 1,
			'param' => 223,
			'item' => 24,
			'ident' => 69,
			'term' => 224,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 281
		ACTIONS => {
			'END' => 297
		}
	},
	{#State 282
		ACTIONS => {
			'END' => 298
		}
	},
	{#State 283
		DEFAULT => -81
	},
	{#State 284
		DEFAULT => -89
	},
	{#State 285
		DEFAULT => -49
	},
	{#State 286
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 299,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 287
		ACTIONS => {
			";" => 300
		}
	},
	{#State 288
		ACTIONS => {
			";" => 301
		}
	},
	{#State 289
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 302,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 290
		DEFAULT => -44
	},
	{#State 291
		ACTIONS => {
			'AND' => 99,
			'BINOP' => 98,
			'CMPOP' => 100,
			"/" => 102,
			'OR' => 101,
			"?" => 97,
			";" => 303
		}
	},
	{#State 292
		DEFAULT => -78
	},
	{#State 293
		ACTIONS => {
			'CATCH' => 246,
			'FINAL' => 248
		},
		DEFAULT => -67,
		GOTOS => {
			'final' => 304
		}
	},
	{#State 294
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 305,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 295
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 306,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 296
		DEFAULT => -66
	},
	{#State 297
		DEFAULT => -55
	},
	{#State 298
		DEFAULT => -42
	},
	{#State 299
		DEFAULT => -52
	},
	{#State 300
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 307,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 301
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 308,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 302
		DEFAULT => -47
	},
	{#State 303
		ACTIONS => {
			'TRY' => 42,
			'NUMBER' => 2,
			'BLOCK' => 43,
			"\"" => 44,
			'NOT' => 3,
			'RAWPERL' => 6,
			'FILTER' => 46,
			"\$" => 7,
			'PROCESS' => 8,
			"\${" => 48,
			'TEXT' => 11,
			"(" => 12,
			'META' => 16,
			";" => -17,
			'LITERAL' => 50,
			'DEFAULT' => 51,
			"[" => 52,
			"{" => 17,
			'CALL' => 55,
			'THROW' => 56,
			'INSERT' => 21,
			'SET' => 22,
			'STOP' => 58,
			'SWITCH' => 23,
			'IDENT' => 27,
			'PERL' => 28,
			'FOR' => 59,
			'UNLESS' => 30,
			'MACRO' => 31,
			'CLEAR' => 61,
			'INCLUDE' => 32,
			'WRAPPER' => 33,
			'USE' => 35,
			'RETURN' => 36,
			'WHILE' => 37,
			'BREAK' => 39,
			'GET' => 65,
			'FORNEXT' => 40,
			'IF' => 67
		},
		DEFAULT => -3,
		GOTOS => {
			'sterm' => 1,
			'try' => 4,
			'setlist' => 25,
			'item' => 24,
			'chunk' => 26,
			'atomdir' => 5,
			'switch' => 45,
			'block' => 309,
			'anonblock' => 47,
			'perl' => 60,
			'ident' => 9,
			'filter' => 62,
			'rawperl' => 10,
			'condition' => 13,
			'directive' => 34,
			'macro' => 14,
			'use' => 63,
			'statement' => 15,
			'chunks' => 49,
			'wrapper' => 38,
			'atomexpr' => 64,
			'defblock' => 53,
			'loop' => 54,
			'capture' => 18,
			'expr' => 19,
			'assign' => 66,
			'term' => 68,
			'lterm' => 20,
			'node' => 57
		}
	},
	{#State 304
		DEFAULT => -65
	},
	{#State 305
		ACTIONS => {
			'CATCH' => 246,
			'FINAL' => 248
		},
		DEFAULT => -67,
		GOTOS => {
			'final' => 310
		}
	},
	{#State 306
		ACTIONS => {
			'CATCH' => 246,
			'FINAL' => 248
		},
		DEFAULT => -67,
		GOTOS => {
			'final' => 311
		}
	},
	{#State 307
		DEFAULT => -51
	},
	{#State 308
		ACTIONS => {
			'CASE' => 263
		},
		DEFAULT => -53,
		GOTOS => {
			'case' => 312
		}
	},
	{#State 309
		ACTIONS => {
			'ELSE' => 265,
			'ELSIF' => 267
		},
		DEFAULT => -48,
		GOTOS => {
			'else' => 313
		}
	},
	{#State 310
		DEFAULT => -63
	},
	{#State 311
		DEFAULT => -64
	},
	{#State 312
		DEFAULT => -50
	},
	{#State 313
		DEFAULT => -46
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 56 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 59 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 60 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 63 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 65 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 68 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1,
sub
#line 80 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 16
		 'statement', 2,
sub
#line 81 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 17
		 'statement', 0, undef
	],
	[#Rule 18
		 'directive', 1,
sub
#line 85 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 19
		 'directive', 1, undef
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'directive', 1, undef
	],
	[#Rule 26
		 'atomexpr', 1,
sub
#line 100 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 27
		 'atomexpr', 1, undef
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 104 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 105 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 106 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 107 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 108 "Parser.yp"
{ $factory->insert($_[2])             }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 109 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 34
		 'atomdir', 2,
sub
#line 110 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 35
		 'atomdir', 2,
sub
#line 112 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 113 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 114 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 38
		 'atomdir', 1,
sub
#line 115 "Parser.yp"
{ "\$output = '';";                   }
	],
	[#Rule 39
		 'atomdir', 1,
sub
#line 116 "Parser.yp"
{ 'last;'                             }
	],
	[#Rule 40
		 'atomdir', 1,
sub
#line 117 "Parser.yp"
{ $_[0]->{ INFOR }
					? $factory->next()
				        : 'next;'                         }
	],
	[#Rule 41
		 'atomdir', 1, undef
	],
	[#Rule 42
		 'condition', 6,
sub
#line 124 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 43
		 'condition', 3,
sub
#line 125 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 44
		 'condition', 6,
sub
#line 127 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 45
		 'condition', 3,
sub
#line 128 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 46
		 'else', 5,
sub
#line 132 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 47
		 'else', 3,
sub
#line 134 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 48
		 'else', 0,
sub
#line 135 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 49
		 'switch', 6,
sub
#line 139 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 50
		 'case', 5,
sub
#line 143 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 51
		 'case', 4,
sub
#line 145 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 52
		 'case', 3,
sub
#line 146 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 53
		 'case', 0,
sub
#line 147 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 54
		 '@1-3', 0,
sub
#line 150 "Parser.yp"
{ $_[0]->{ INFOR }++                  }
	],
	[#Rule 55
		 'loop', 6,
sub
#line 151 "Parser.yp"
{ $_[0]->{ INFOR }--;
				      $factory->foreach(@{$_[2]}, $_[5])  }
	],
	[#Rule 56
		 'loop', 3,
sub
#line 155 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])  }
	],
	[#Rule 57
		 'loop', 5,
sub
#line 157 "Parser.yp"
{ $factory->while(@_[2, 4])           }
	],
	[#Rule 58
		 'loop', 3,
sub
#line 158 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 59
		 'loopvar', 4,
sub
#line 161 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 60
		 'loopvar', 2,
sub
#line 162 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 61
		 'wrapper', 5,
sub
#line 166 "Parser.yp"
{ $factory->wrapper(@_[2, 4])         }
	],
	[#Rule 62
		 'try', 5,
sub
#line 170 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 63
		 'final', 5,
sub
#line 174 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 64
		 'final', 5,
sub
#line 177 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[4];                              }
	],
	[#Rule 65
		 'final', 4,
sub
#line 180 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 66
		 'final', 3,
sub
#line 182 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 67
		 'final', 0,
sub
#line 183 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 68
		 'use', 2,
sub
#line 186 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 69
		 '@2-2', 0,
sub
#line 189 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 70
		 'perl', 5,
sub
#line 190 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->perl($_[4])             
				      : $factory->no_perl();              }
	],
	[#Rule 71
		 '@3-1', 0,
sub
#line 196 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 72
		 'rawperl', 5,
sub
#line 198 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $_[0]->{ EVAL_PERL } 
				      ? $factory->rawperl($_[4], $rawstart)
				      : $factory->no_perl();              }
	],
	[#Rule 73
		 'filter', 5,
sub
#line 205 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 74
		 'filter', 3,
sub
#line 207 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 75
		 'defblock', 5,
sub
#line 211 "Parser.yp"
{ $_[0]->define_block(@_[2, 4]); 
				      undef                               }
	],
	[#Rule 76
		 'anonblock', 4,
sub
#line 215 "Parser.yp"
{ $factory->anon_block($_[3])         }
	],
	[#Rule 77
		 'capture', 3,
sub
#line 218 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 78
		 'macro', 6,
sub
#line 222 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 79
		 'macro', 3,
sub
#line 223 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 80
		 'mdir', 1, undef
	],
	[#Rule 81
		 'mdir', 4,
sub
#line 227 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 82
		 'margs', 2,
sub
#line 230 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 83
		 'margs', 2,
sub
#line 231 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 84
		 'margs', 1,
sub
#line 232 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 85
		 'metadata', 2,
sub
#line 235 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 86
		 'metadata', 2, undef
	],
	[#Rule 87
		 'metadata', 1, undef
	],
	[#Rule 88
		 'meta', 3,
sub
#line 240 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$// }; 
					 [ @_[1,3] ] }
	],
	[#Rule 89
		 'meta', 5,
sub
#line 242 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 90
		 'meta', 3,
sub
#line 243 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 91
		 'term', 1, undef
	],
	[#Rule 92
		 'term', 1, undef
	],
	[#Rule 93
		 'lterm', 3,
sub
#line 255 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 94
		 'lterm', 3,
sub
#line 256 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 95
		 'lterm', 3,
sub
#line 257 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 96
		 'sterm', 1,
sub
#line 260 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 97
		 'sterm', 3,
sub
#line 261 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 98
		 'sterm', 1, undef
	],
	[#Rule 99
		 'sterm', 1, undef
	],
	[#Rule 100
		 'list', 2,
sub
#line 266 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 101
		 'list', 2, undef
	],
	[#Rule 102
		 'list', 1, undef
	],
	[#Rule 103
		 'range', 3,
sub
#line 271 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 104
		 'hash', 1, undef
	],
	[#Rule 105
		 'hash', 0, undef
	],
	[#Rule 106
		 'params', 2,
sub
#line 279 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 107
		 'params', 2, undef
	],
	[#Rule 108
		 'params', 1, undef
	],
	[#Rule 109
		 'param', 3,
sub
#line 284 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 110
		 'param', 3,
sub
#line 285 "Parser.yp"
{ "'$_[1]' => $_[3]"                  }
	],
	[#Rule 111
		 'ident', 3,
sub
#line 288 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 112
		 'ident', 3,
sub
#line 289 "Parser.yp"
{ push(@{$_[1]}, $_[3], 0); $_[1]     }
	],
	[#Rule 113
		 'ident', 1, undef
	],
	[#Rule 114
		 'node', 1,
sub
#line 293 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 115
		 'node', 4,
sub
#line 294 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 116
		 'item', 1,
sub
#line 297 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 117
		 'item', 3,
sub
#line 298 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 118
		 'item', 2,
sub
#line 299 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 119
		 'expr', 3,
sub
#line 304 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 120
		 'expr', 3,
sub
#line 305 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 121
		 'expr', 3,
sub
#line 306 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 122
		 'expr', 3,
sub
#line 307 "Parser.yp"
{ "($_[1]) && ($_[3])"                }
	],
	[#Rule 123
		 'expr', 3,
sub
#line 308 "Parser.yp"
{ "($_[1]) || ($_[3])"                }
	],
	[#Rule 124
		 'expr', 2,
sub
#line 309 "Parser.yp"
{ "!($_[2])"                          }
	],
	[#Rule 125
		 'expr', 5,
sub
#line 310 "Parser.yp"
{ "(($_[1]) ? ($_[3]) : ($_[5]))"     }
	],
	[#Rule 126
		 'expr', 3,
sub
#line 311 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 127
		 'expr', 3,
sub
#line 312 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 128
		 'expr', 1, undef
	],
	[#Rule 129
		 'setlist', 2,
sub
#line 316 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 130
		 'setlist', 2, undef
	],
	[#Rule 131
		 'setlist', 1, undef
	],
	[#Rule 132
		 'assign', 3,
sub
#line 322 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 133
		 'assign', 3,
sub
#line 323 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 134
		 'args', 2,
sub
#line 330 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 135
		 'args', 2,
sub
#line 331 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 136
		 'args', 2,
sub
#line 332 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 137
		 'args', 0,
sub
#line 333 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 138
		 'lnameargs', 3,
sub
#line 343 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 139
		 'lnameargs', 1, undef
	],
	[#Rule 140
		 'lvalue', 1, undef
	],
	[#Rule 141
		 'lvalue', 3,
sub
#line 348 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 142
		 'lvalue', 1, undef
	],
	[#Rule 143
		 'nameargs', 3,
sub
#line 352 "Parser.yp"
{ [ $factory->ident($_[2]), $_[3] ]   }
	],
	[#Rule 144
		 'nameargs', 4,
sub
#line 353 "Parser.yp"
{ [ $factory->quoted($_[2]), $_[4] ]  }
	],
	[#Rule 145
		 'nameargs', 2,
sub
#line 354 "Parser.yp"
{ [   $_[1],   $_[2] ]                }
	],
	[#Rule 146
		 'nameargs', 4,
sub
#line 355 "Parser.yp"
{ [ "'$_[1]'", $_[3] ]                }
	],
	[#Rule 147
		 'nameargs', 2,
sub
#line 356 "Parser.yp"
{ [ "'$_[1]'", $_[2] ]                }
	],
	[#Rule 148
		 'filename', 3,
sub
#line 359 "Parser.yp"
{ "$_[1].$_[3]"                       }
	],
	[#Rule 149
		 'filename', 1, undef
	],
	[#Rule 150
		 'filepart', 1, undef
	],
	[#Rule 151
		 'filepart', 1, undef
	],
	[#Rule 152
		 'filepart', 1, undef
	],
	[#Rule 153
		 'quoted', 2,
sub
#line 373 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 154
		 'quoted', 0,
sub
#line 375 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 155
		 'quotable', 1,
sub
#line 378 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 156
		 'quotable', 1,
sub
#line 379 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 157
		 'quotable', 1,
sub
#line 380 "Parser.yp"
{ undef                               }
	]
];



1;












