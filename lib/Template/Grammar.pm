#============================================================= -*-Perl-*-
#
# Template::Grammar
#
# DESCRIPTION
#   Grammar file for the Template Toolkit language containing token
#   definitions and parser state/rules tables generated by Parse::Yapp.
#
# AUTHOR
#   Andy Wardley   <abw@kfs.org>
#
# COPYRIGHT
#   Copyright (C) 1996-2000 Andy Wardley.  All Rights Reserved.
#   Copyright (C) 1998-2000 Canon Research Centre Europe Ltd.
#
#   This module is free software; you can redistribute it and/or
#   modify it under the same terms as Perl itself.
#
#------------------------------------------------------------------------
#
# NOTE: this module is constructed from the parser/Grammar.pm.skel
# file by running the parser/yc script.  You only need to do this if 
# you have modified the grammar in the parser/Parser.yp file and need
# to-recompile it.  See the README in the 'parser' directory for more
# information (sub-directory of the Template distribution).
#
#------------------------------------------------------------------------
#
# $Id$
#
#========================================================================

package Template::Grammar;

require 5.004;

use strict;
use vars qw( $VERSION );

$VERSION  = sprintf("%d.%02d", q$Revision$ =~ /(\d+)\.(\d+)/);

my (@RESERVED, %CMPOP, $LEXTABLE, $RULES, $STATES);
my ($factory, $rawstart);


#========================================================================
# Reserved words, comparison and binary operators
#========================================================================

@RESERVED = qw( 
	GET CALL SET DEFAULT INCLUDE PROCESS BLOCK END
	USE PLUGIN FILTER MACRO PERL RAWPERL TO STEP AND OR NOT
	IF UNLESS ELSE ELSIF FOR WHILE SWITCH CASE META
	TRY THROW CATCH FINAL BREAK RETURN STOP CLEAR
    );

%CMPOP = qw( != ne  == eq  < <  > >  >= >=  <= <= );


#========================================================================
# Lexer Token Table
#========================================================================

# lookup table used by lexer is initialised with special-cases
$LEXTABLE = {
    'FOREACH' => 'FOR',
    '&&'      => 'AND',
    '||'      => 'OR',
    '!'       => 'NOT',
    '|'	      => 'FILTER',
    '.'       => 'DOT',
    '..'      => 'TO',
#    ':'       => 'MACRO',
    '='       => 'ASSIGN',
    '=>'      => 'ASSIGN',
#    '->'      => 'ARROW',
    ','       => 'COMMA',
    '\\'      => 'REF',
    'and'     => 'AND',		# explicitly specified so that qw( and or
    'or'      => 'OR',		# not ) can always be used in lower case, 
    'not'     => 'NOT'		# regardless of CASE sensitivity flag
};

# localise the temporary variables needed to complete lexer table
{ 
    my @tokens = qw< ( ) [ ] { } ${ $ / ; : ? >;
    my @cmpop  = keys %CMPOP;
    my @binop  = qw( + - * % );             # '/' above, in @tokens

    # fill lexer table, slice by slice, with reserved words and operators
    @$LEXTABLE{ @RESERVED, @cmpop, @binop, @tokens } 
	= ( @RESERVED, ('CMPOP') x @cmpop, ('BINOP') x @binop, @tokens );
}


#========================================================================
# CLASS METHODS
#========================================================================

sub new {
    my $class = shift;
    bless {
	LEXTABLE => $LEXTABLE,
	STATES   => $STATES,
	RULES    => $RULES,
    }, $class;
}

# update method to set package-scoped $factory lexical 
sub install_factory {
    my ($self, $new_factory) = @_;
    $factory = $new_factory;
}


#========================================================================
# States
#========================================================================

$STATES = [
	{#State 0
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'FOR' => 44,
			'CLEAR' => 43,
			'META' => 42,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'IDENT' => 61,
			'THROW' => 60,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 22,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'loop' => 51,
			'defblock' => 50,
			'template' => 64,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 1
		DEFAULT => -35
	},
	{#State 2
		DEFAULT => -6
	},
	{#State 3
		DEFAULT => -20
	},
	{#State 4
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			'COMMA' => 68,
			"\${" => 56,
			'LITERAL' => 66
		},
		DEFAULT => -18,
		GOTOS => {
			'ident' => 65,
			'assign' => 67,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 5
		DEFAULT => -94
	},
	{#State 6
		ACTIONS => {
			'FILENAME' => 72,
			";" => 70,
			'NUMBER' => 69,
			'IDENT' => 74
		},
		GOTOS => {
			'filename' => 73,
			'filepart' => 71
		}
	},
	{#State 7
		ACTIONS => {
			"\"" => 82,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 80,
			'IDENT' => 83,
			"\${" => 56,
			'LITERAL' => 77
		},
		GOTOS => {
			'filename' => 81,
			'lvalue' => 75,
			'lnameargs' => 76,
			'nameargs' => 78,
			'filepart' => 71,
			'item' => 79
		}
	},
	{#State 8
		ACTIONS => {
			'WHILE' => 87,
			'UNLESS' => 84,
			'FILTER' => 85,
			'FOR' => 88,
			'IF' => 86
		}
	},
	{#State 9
		ACTIONS => {
			'ASSIGN' => 89,
			'DOT' => 90
		},
		DEFAULT => -91
	},
	{#State 10
		DEFAULT => -10
	},
	{#State 11
		DEFAULT => -5
	},
	{#State 12
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 92
		}
	},
	{#State 13
		DEFAULT => -14
	},
	{#State 14
		ACTIONS => {
			"\"" => 97,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 96,
			'IDENT' => 74,
			'LITERAL' => 94
		},
		GOTOS => {
			'filename' => 81,
			'nameargs' => 95,
			'filepart' => 71
		}
	},
	{#State 15
		DEFAULT => -23
	},
	{#State 16
		ACTIONS => {
			'OR' => 98,
			'AND' => 103,
			'BINOP' => 101,
			";" => -15,
			"/" => 99,
			"?" => 100,
			'CMPOP' => 102
		},
		DEFAULT => -25
	},
	{#State 17
		DEFAULT => -36
	},
	{#State 18
		DEFAULT => -86
	},
	{#State 19
		DEFAULT => -108
	},
	{#State 20
		ACTIONS => {
			"\"" => 82,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 80,
			'IDENT' => 83,
			"\${" => 56,
			'LITERAL' => 77
		},
		GOTOS => {
			'filename' => 81,
			'lvalue' => 75,
			'lnameargs' => 104,
			'nameargs' => 78,
			'filepart' => 71,
			'item' => 79
		}
	},
	{#State 21
		DEFAULT => -87
	},
	{#State 22
		DEFAULT => -1
	},
	{#State 23
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -2,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'sterm' => 21,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 105,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 24
		ACTIONS => {
			'ASSIGN' => 106
		},
		DEFAULT => -93
	},
	{#State 25
		ACTIONS => {
			"(" => 107
		},
		DEFAULT => -109
	},
	{#State 26
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 108
		}
	},
	{#State 27
		ACTIONS => {
			";" => -19
		},
		DEFAULT => -26
	},
	{#State 28
		ACTIONS => {
			'IDENT' => 109
		}
	},
	{#State 29
		DEFAULT => -21
	},
	{#State 30
		ACTIONS => {
			";" => 110
		}
	},
	{#State 31
		DEFAULT => -24
	},
	{#State 32
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56
		},
		GOTOS => {
			'lterm' => 18,
			'ident' => 111,
			'assign' => 113,
			'node' => 19,
			'term' => 33,
			'sterm' => 21,
			'expr' => 112,
			'item' => 25
		}
	},
	{#State 33
		DEFAULT => -123
	},
	{#State 34
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 114
		}
	},
	{#State 35
		DEFAULT => -66,
		GOTOS => {
			'@2-1' => 115
		}
	},
	{#State 36
		ACTIONS => {
			";" => 116
		}
	},
	{#State 37
		DEFAULT => -8
	},
	{#State 38
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 117
		}
	},
	{#State 39
		ACTIONS => {
			"\"" => 97,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 96,
			'IDENT' => 74,
			'LITERAL' => 94
		},
		GOTOS => {
			'filename' => 81,
			'nameargs' => 118,
			'filepart' => 71
		}
	},
	{#State 40
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'LITERAL' => 66
		},
		GOTOS => {
			'setlist' => 119,
			'ident' => 65,
			'assign' => 52,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 41
		DEFAULT => -37
	},
	{#State 42
		ACTIONS => {
			'IDENT' => 122
		},
		GOTOS => {
			'metadata' => 120,
			'meta' => 121
		}
	},
	{#State 43
		DEFAULT => -34
	},
	{#State 44
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 125,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 124,
			'sterm' => 21,
			'loopvar' => 123,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 45
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 127,
			'sterm' => 126,
			'list' => 129,
			'lterm' => 18,
			'ident' => 91,
			'range' => 128,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 46
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'LITERAL' => 66
		},
		GOTOS => {
			'setlist' => 130,
			'ident' => 65,
			'assign' => 52,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 47
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 131
		}
	},
	{#State 48
		ACTIONS => {
			'IDENT' => 132
		}
	},
	{#State 49
		DEFAULT => -11
	},
	{#State 50
		DEFAULT => -9
	},
	{#State 51
		DEFAULT => -22
	},
	{#State 52
		DEFAULT => -126
	},
	{#State 53
		DEFAULT => -38
	},
	{#State 54
		ACTIONS => {
			'IDENT' => 137,
			'LITERAL' => 135
		},
		DEFAULT => -100,
		GOTOS => {
			'param' => 133,
			'hash' => 136,
			'params' => 134
		}
	},
	{#State 55
		DEFAULT => -13
	},
	{#State 56
		ACTIONS => {
			"\"" => 57,
			'NUMBER' => 5,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'LITERAL' => 93
		},
		GOTOS => {
			'sterm' => 138,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 57
		DEFAULT => -149,
		GOTOS => {
			'quoted' => 139
		}
	},
	{#State 58
		DEFAULT => -12
	},
	{#State 59
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 140
		}
	},
	{#State 60
		ACTIONS => {
			"\"" => 97,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 96,
			'IDENT' => 74,
			'LITERAL' => 94
		},
		GOTOS => {
			'filename' => 81,
			'nameargs' => 141,
			'filepart' => 71
		}
	},
	{#State 61
		DEFAULT => -111
	},
	{#State 62
		ACTIONS => {
			";" => 142
		}
	},
	{#State 63
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 143
		}
	},
	{#State 64
		ACTIONS => {
			'' => 144
		}
	},
	{#State 65
		ACTIONS => {
			'ASSIGN' => 145,
			'DOT' => 90
		}
	},
	{#State 66
		ACTIONS => {
			'ASSIGN' => 106
		}
	},
	{#State 67
		DEFAULT => -124
	},
	{#State 68
		DEFAULT => -125
	},
	{#State 69
		DEFAULT => -147
	},
	{#State 70
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 146,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 71
		DEFAULT => -144
	},
	{#State 72
		DEFAULT => -145
	},
	{#State 73
		ACTIONS => {
			";" => 147,
			'DOT' => 148
		}
	},
	{#State 74
		DEFAULT => -146
	},
	{#State 75
		ACTIONS => {
			'ASSIGN' => 149
		}
	},
	{#State 76
		DEFAULT => -63
	},
	{#State 77
		ACTIONS => {
			'ASSIGN' => -137
		},
		DEFAULT => -132,
		GOTOS => {
			'args' => 150
		}
	},
	{#State 78
		DEFAULT => -134
	},
	{#State 79
		DEFAULT => -135
	},
	{#State 80
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 152,
			"\${" => 56
		},
		GOTOS => {
			'ident' => 151,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 81
		ACTIONS => {
			'DOT' => 148,
			"(" => 153
		},
		DEFAULT => -132,
		GOTOS => {
			'args' => 154
		}
	},
	{#State 82
		DEFAULT => -149,
		GOTOS => {
			'quoted' => 155
		}
	},
	{#State 83
		ACTIONS => {
			'ASSIGN' => -111
		},
		DEFAULT => -146
	},
	{#State 84
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 156
		}
	},
	{#State 85
		ACTIONS => {
			"\"" => 82,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 80,
			'IDENT' => 83,
			"\${" => 56,
			'LITERAL' => 77
		},
		GOTOS => {
			'filename' => 81,
			'lvalue' => 75,
			'lnameargs' => 157,
			'nameargs' => 78,
			'filepart' => 71,
			'item' => 79
		}
	},
	{#State 86
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 158
		}
	},
	{#State 87
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 159
		}
	},
	{#State 88
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 125,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 124,
			'sterm' => 21,
			'loopvar' => 160,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 89
		ACTIONS => {
			'GET' => 38,
			'RETURN' => 17,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'BREAK' => 1,
			'STOP' => 41,
			'FILTER' => 20,
			'CLEAR' => 43,
			'FOR' => 44,
			"{" => 54,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 161,
			'SET' => 46,
			"\${" => 56,
			'LITERAL' => 24,
			'IF' => 26,
			"\"" => 57,
			'NOT' => 47,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'UNLESS' => 12,
			'CALL' => 63,
			'TRY' => 36,
			'PROCESS' => 14
		},
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'sterm' => 21,
			'mdir' => 163,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'switch' => 29,
			'perl' => 31,
			'ident' => 111,
			'term' => 33,
			'loop' => 51,
			'expr' => 162,
			'try' => 15,
			'directive' => 164
		}
	},
	{#State 90
		ACTIONS => {
			'NUMBER' => 165,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56
		},
		GOTOS => {
			'node' => 166,
			'item' => 25
		}
	},
	{#State 91
		ACTIONS => {
			'DOT' => 90
		},
		DEFAULT => -91
	},
	{#State 92
		ACTIONS => {
			'BINOP' => 101,
			";" => 167,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 93
		DEFAULT => -93
	},
	{#State 94
		DEFAULT => -132,
		GOTOS => {
			'args' => 150
		}
	},
	{#State 95
		DEFAULT => -32
	},
	{#State 96
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56
		},
		GOTOS => {
			'ident' => 151,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 97
		DEFAULT => -149,
		GOTOS => {
			'quoted' => 168
		}
	},
	{#State 98
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 169
		}
	},
	{#State 99
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 170
		}
	},
	{#State 100
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 171
		}
	},
	{#State 101
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 172
		}
	},
	{#State 102
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 173
		}
	},
	{#State 103
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 174
		}
	},
	{#State 104
		ACTIONS => {
			";" => 175
		}
	},
	{#State 105
		DEFAULT => -4
	},
	{#State 106
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 176
		}
	},
	{#State 107
		DEFAULT => -132,
		GOTOS => {
			'args' => 177
		}
	},
	{#State 108
		ACTIONS => {
			'BINOP' => 101,
			";" => 178,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 109
		DEFAULT => -113
	},
	{#State 110
		DEFAULT => -64,
		GOTOS => {
			'@1-2' => 179
		}
	},
	{#State 111
		ACTIONS => {
			'ASSIGN' => 145,
			'DOT' => 90
		},
		DEFAULT => -91
	},
	{#State 112
		ACTIONS => {
			'BINOP' => 101,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			")" => 180,
			'CMPOP' => 102
		}
	},
	{#State 113
		ACTIONS => {
			")" => 181
		}
	},
	{#State 114
		ACTIONS => {
			'BINOP' => 101,
			";" => 182,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 115
		ACTIONS => {
			";" => 183
		}
	},
	{#State 116
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 184,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 117
		ACTIONS => {
			'OR' => 98,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			"?" => 100,
			'CMPOP' => 102
		},
		DEFAULT => -27
	},
	{#State 118
		DEFAULT => -31
	},
	{#State 119
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			'LITERAL' => 66,
			"\${" => 56,
			'COMMA' => 68
		},
		DEFAULT => -30,
		GOTOS => {
			'ident' => 65,
			'assign' => 67,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 120
		ACTIONS => {
			'IDENT' => 122,
			'COMMA' => 186
		},
		DEFAULT => -16,
		GOTOS => {
			'meta' => 185
		}
	},
	{#State 121
		DEFAULT => -82
	},
	{#State 122
		ACTIONS => {
			'ASSIGN' => 187
		}
	},
	{#State 123
		ACTIONS => {
			";" => 188
		}
	},
	{#State 124
		DEFAULT => -132,
		GOTOS => {
			'args' => 189
		}
	},
	{#State 125
		ACTIONS => {
			'ASSIGN' => 190
		},
		DEFAULT => -111
	},
	{#State 126
		ACTIONS => {
			'TO' => 191
		},
		DEFAULT => -87
	},
	{#State 127
		DEFAULT => -97
	},
	{#State 128
		ACTIONS => {
			"]" => 192
		}
	},
	{#State 129
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			"]" => 193,
			'LITERAL' => 93,
			"\${" => 56,
			'COMMA' => 195
		},
		GOTOS => {
			'term' => 194,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 130
		ACTIONS => {
			"\$" => 28,
			'IDENT' => 61,
			'LITERAL' => 66,
			"\${" => 56,
			'COMMA' => 68
		},
		DEFAULT => -29,
		GOTOS => {
			'ident' => 65,
			'assign' => 67,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 131
		ACTIONS => {
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -119
	},
	{#State 132
		ACTIONS => {
			'GET' => 38,
			'RETURN' => 17,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'BREAK' => 1,
			'STOP' => 41,
			'FILTER' => 20,
			'CLEAR' => 43,
			'FOR' => 44,
			"{" => 54,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 161,
			'SET' => 46,
			"\${" => 56,
			'LITERAL' => 24,
			'IF' => 26,
			"\"" => 57,
			'NOT' => 47,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 198,
			'WHILE' => 34,
			'UNLESS' => 12,
			'CALL' => 63,
			'TRY' => 36,
			'PROCESS' => 14
		},
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'sterm' => 21,
			'mdir' => 197,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'switch' => 29,
			'perl' => 31,
			'ident' => 111,
			'term' => 33,
			'loop' => 51,
			'try' => 15,
			'expr' => 196,
			'directive' => 164
		}
	},
	{#State 133
		DEFAULT => -103
	},
	{#State 134
		ACTIONS => {
			'IDENT' => 137,
			'COMMA' => 200,
			'LITERAL' => 135
		},
		DEFAULT => -99,
		GOTOS => {
			'param' => 199
		}
	},
	{#State 135
		ACTIONS => {
			'ASSIGN' => 201
		}
	},
	{#State 136
		ACTIONS => {
			"}" => 202
		}
	},
	{#State 137
		ACTIONS => {
			'ASSIGN' => 203
		}
	},
	{#State 138
		ACTIONS => {
			"}" => 204
		}
	},
	{#State 139
		ACTIONS => {
			"\"" => 209,
			";" => 207,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'TEXT' => 205
		},
		GOTOS => {
			'ident' => 206,
			'quotable' => 208,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 140
		ACTIONS => {
			'BINOP' => 101,
			";" => 210,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 141
		DEFAULT => -33
	},
	{#State 142
		DEFAULT => -7
	},
	{#State 143
		ACTIONS => {
			'OR' => 98,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			"?" => 100,
			'CMPOP' => 102
		},
		DEFAULT => -28
	},
	{#State 144
		DEFAULT => -0
	},
	{#State 145
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 211
		}
	},
	{#State 146
		ACTIONS => {
			'END' => 212
		}
	},
	{#State 147
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 22,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'template' => 213,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 148
		ACTIONS => {
			'FILENAME' => 72,
			'NUMBER' => 69,
			'IDENT' => 74
		},
		GOTOS => {
			'filepart' => 214
		}
	},
	{#State 149
		ACTIONS => {
			"\"" => 97,
			'FILENAME' => 72,
			'NUMBER' => 69,
			"\$" => 96,
			'IDENT' => 74,
			'LITERAL' => 94
		},
		GOTOS => {
			'filename' => 81,
			'nameargs' => 215,
			'filepart' => 71
		}
	},
	{#State 150
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -140,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 151
		ACTIONS => {
			'DOT' => 90
		},
		DEFAULT => -132,
		GOTOS => {
			'args' => 221
		}
	},
	{#State 152
		ACTIONS => {
			'ASSIGN' => -113
		},
		DEFAULT => -111
	},
	{#State 153
		DEFAULT => -132,
		GOTOS => {
			'args' => 222
		}
	},
	{#State 154
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -142,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 155
		ACTIONS => {
			"\"" => 223,
			";" => 207,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'TEXT' => 205
		},
		GOTOS => {
			'ident' => 206,
			'quotable' => 208,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 156
		ACTIONS => {
			'BINOP' => 101,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -42
	},
	{#State 157
		DEFAULT => -69
	},
	{#State 158
		ACTIONS => {
			'BINOP' => 101,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -40
	},
	{#State 159
		ACTIONS => {
			'BINOP' => 101,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -54
	},
	{#State 160
		DEFAULT => -52
	},
	{#State 161
		ACTIONS => {
			";" => 224
		}
	},
	{#State 162
		ACTIONS => {
			'OR' => 98,
			'FILTER' => -25,
			'FOR' => -25,
			"?" => 100,
			'IF' => -25,
			'AND' => 103,
			'BINOP' => 101,
			'WHILE' => -25,
			'UNLESS' => -25,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -127
	},
	{#State 163
		DEFAULT => -72
	},
	{#State 164
		DEFAULT => -75
	},
	{#State 165
		DEFAULT => -107
	},
	{#State 166
		DEFAULT => -106
	},
	{#State 167
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 225,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 168
		ACTIONS => {
			"\"" => 226,
			";" => 207,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'TEXT' => 205
		},
		GOTOS => {
			'ident' => 206,
			'quotable' => 208,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 169
		ACTIONS => {
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -118
	},
	{#State 170
		DEFAULT => -115
	},
	{#State 171
		ACTIONS => {
			'BINOP' => 101,
			":" => 227,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 172
		ACTIONS => {
			"/" => 99
		},
		DEFAULT => -114
	},
	{#State 173
		ACTIONS => {
			'BINOP' => 101,
			"/" => 99
		},
		DEFAULT => -116
	},
	{#State 174
		ACTIONS => {
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -117
	},
	{#State 175
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 228,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 176
		ACTIONS => {
			'OR' => 98,
			"?" => 100,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -128
	},
	{#State 177
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			")" => 229,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 178
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 230,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 179
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 231,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 180
		DEFAULT => -122
	},
	{#State 181
		DEFAULT => -121
	},
	{#State 182
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 232,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 183
		ACTIONS => {
			'TEXT' => 233
		}
	},
	{#State 184
		ACTIONS => {
			'FINAL' => 236,
			'CATCH' => 235
		},
		DEFAULT => -62,
		GOTOS => {
			'final' => 234
		}
	},
	{#State 185
		DEFAULT => -80
	},
	{#State 186
		DEFAULT => -81
	},
	{#State 187
		ACTIONS => {
			"\"" => 239,
			'NUMBER' => 237,
			'LITERAL' => 238
		}
	},
	{#State 188
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 240,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 189
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -56,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 190
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 241,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 191
		ACTIONS => {
			"\"" => 57,
			'NUMBER' => 5,
			"\$" => 28,
			'IDENT' => 61,
			"\${" => 56,
			'LITERAL' => 93
		},
		GOTOS => {
			'sterm' => 242,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 192
		DEFAULT => -89
	},
	{#State 193
		DEFAULT => -88
	},
	{#State 194
		DEFAULT => -95
	},
	{#State 195
		DEFAULT => -96
	},
	{#State 196
		ACTIONS => {
			'OR' => 98,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			"?" => 100,
			'CMPOP' => 102
		},
		DEFAULT => -25
	},
	{#State 197
		DEFAULT => -74
	},
	{#State 198
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 244,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56
		},
		GOTOS => {
			'lterm' => 18,
			'ident' => 111,
			'assign' => 113,
			'node' => 19,
			'term' => 33,
			'margs' => 243,
			'sterm' => 21,
			'expr' => 112,
			'item' => 25
		}
	},
	{#State 199
		DEFAULT => -101
	},
	{#State 200
		DEFAULT => -102
	},
	{#State 201
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 245,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 202
		DEFAULT => -90
	},
	{#State 203
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 246,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 204
		DEFAULT => -112
	},
	{#State 205
		DEFAULT => -151
	},
	{#State 206
		ACTIONS => {
			'DOT' => 90
		},
		DEFAULT => -150
	},
	{#State 207
		DEFAULT => -152
	},
	{#State 208
		DEFAULT => -148
	},
	{#State 209
		DEFAULT => -92
	},
	{#State 210
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 247,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 211
		ACTIONS => {
			'OR' => 98,
			"?" => 100,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -127
	},
	{#State 212
		DEFAULT => -71
	},
	{#State 213
		ACTIONS => {
			'END' => 248
		}
	},
	{#State 214
		DEFAULT => -143
	},
	{#State 215
		DEFAULT => -133
	},
	{#State 216
		DEFAULT => -130
	},
	{#State 217
		ACTIONS => {
			'ASSIGN' => 201
		},
		DEFAULT => -93
	},
	{#State 218
		DEFAULT => -129
	},
	{#State 219
		DEFAULT => -131
	},
	{#State 220
		ACTIONS => {
			'ASSIGN' => 203
		},
		DEFAULT => -111
	},
	{#State 221
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -138,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 222
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			")" => 249,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 223
		ACTIONS => {
			'ASSIGN' => -136
		},
		DEFAULT => -132,
		GOTOS => {
			'args' => 250
		}
	},
	{#State 224
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 251,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 225
		ACTIONS => {
			'ELSE' => 253,
			'ELSIF' => 252
		},
		DEFAULT => -45,
		GOTOS => {
			'else' => 254
		}
	},
	{#State 226
		DEFAULT => -132,
		GOTOS => {
			'args' => 250
		}
	},
	{#State 227
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 255
		}
	},
	{#State 228
		ACTIONS => {
			'END' => 256
		}
	},
	{#State 229
		DEFAULT => -110
	},
	{#State 230
		ACTIONS => {
			'ELSE' => 253,
			'ELSIF' => 252
		},
		DEFAULT => -45,
		GOTOS => {
			'else' => 257
		}
	},
	{#State 231
		ACTIONS => {
			'END' => 258
		}
	},
	{#State 232
		ACTIONS => {
			'END' => 259
		}
	},
	{#State 233
		ACTIONS => {
			'END' => 260
		}
	},
	{#State 234
		ACTIONS => {
			'END' => 261
		}
	},
	{#State 235
		ACTIONS => {
			'FILENAME' => 72,
			";" => 262,
			'NUMBER' => 69,
			'IDENT' => 74,
			'DEFAULT' => 263
		},
		GOTOS => {
			'filename' => 264,
			'filepart' => 71
		}
	},
	{#State 236
		ACTIONS => {
			";" => 265
		}
	},
	{#State 237
		DEFAULT => -85
	},
	{#State 238
		DEFAULT => -83
	},
	{#State 239
		ACTIONS => {
			'TEXT' => 266
		}
	},
	{#State 240
		ACTIONS => {
			'END' => 267
		}
	},
	{#State 241
		DEFAULT => -132,
		GOTOS => {
			'args' => 268
		}
	},
	{#State 242
		DEFAULT => -98
	},
	{#State 243
		ACTIONS => {
			'IDENT' => 271,
			'COMMA' => 270,
			")" => 269
		}
	},
	{#State 244
		ACTIONS => {
			'IDENT' => -79,
			")" => -79,
			'COMMA' => -79
		},
		DEFAULT => -111
	},
	{#State 245
		DEFAULT => -104
	},
	{#State 246
		DEFAULT => -105
	},
	{#State 247
		ACTIONS => {
			'CASE' => 272
		},
		DEFAULT => -50,
		GOTOS => {
			'case' => 273
		}
	},
	{#State 248
		DEFAULT => -70
	},
	{#State 249
		DEFAULT => -141
	},
	{#State 250
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -139,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 251
		ACTIONS => {
			'END' => 274
		}
	},
	{#State 252
		ACTIONS => {
			"\"" => 57,
			'NOT' => 47,
			"\$" => 28,
			'IDENT' => 61,
			"(" => 32,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 33,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25,
			'expr' => 275
		}
	},
	{#State 253
		ACTIONS => {
			";" => 276
		}
	},
	{#State 254
		ACTIONS => {
			'END' => 277
		}
	},
	{#State 255
		ACTIONS => {
			'OR' => 98,
			"?" => 100,
			'AND' => 103,
			'BINOP' => 101,
			"/" => 99,
			'CMPOP' => 102
		},
		DEFAULT => -120
	},
	{#State 256
		DEFAULT => -68
	},
	{#State 257
		ACTIONS => {
			'END' => 278
		}
	},
	{#State 258
		DEFAULT => -65
	},
	{#State 259
		DEFAULT => -53
	},
	{#State 260
		DEFAULT => -67
	},
	{#State 261
		DEFAULT => -57
	},
	{#State 262
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 279,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 263
		ACTIONS => {
			";" => 280
		}
	},
	{#State 264
		ACTIONS => {
			";" => 281,
			'DOT' => 148
		}
	},
	{#State 265
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 282,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 266
		ACTIONS => {
			"\"" => 283
		}
	},
	{#State 267
		DEFAULT => -51
	},
	{#State 268
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 220,
			'NUMBER' => 5,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 217,
			"\${" => 56,
			'COMMA' => 219
		},
		DEFAULT => -55,
		GOTOS => {
			'term' => 218,
			'param' => 216,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 269
		ACTIONS => {
			'GET' => 38,
			'RETURN' => 17,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'BREAK' => 1,
			'STOP' => 41,
			'FILTER' => 20,
			'CLEAR' => 43,
			'FOR' => 44,
			"{" => 54,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 161,
			'SET' => 46,
			"\${" => 56,
			'LITERAL' => 24,
			'IF' => 26,
			"\"" => 57,
			'NOT' => 47,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'UNLESS' => 12,
			'CALL' => 63,
			'TRY' => 36,
			'PROCESS' => 14
		},
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'sterm' => 21,
			'mdir' => 284,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'switch' => 29,
			'perl' => 31,
			'ident' => 111,
			'term' => 33,
			'loop' => 51,
			'try' => 15,
			'expr' => 196,
			'directive' => 164
		}
	},
	{#State 270
		DEFAULT => -78
	},
	{#State 271
		DEFAULT => -77
	},
	{#State 272
		ACTIONS => {
			"\"" => 57,
			"\$" => 28,
			'IDENT' => 61,
			'DEFAULT' => 287,
			'NUMBER' => 5,
			";" => 285,
			"[" => 45,
			"{" => 54,
			'LITERAL' => 93,
			"\${" => 56
		},
		GOTOS => {
			'term' => 286,
			'sterm' => 21,
			'lterm' => 18,
			'ident' => 91,
			'node' => 19,
			'item' => 25
		}
	},
	{#State 273
		ACTIONS => {
			'END' => 288
		}
	},
	{#State 274
		DEFAULT => -76
	},
	{#State 275
		ACTIONS => {
			'BINOP' => 101,
			";" => 289,
			'OR' => 98,
			'AND' => 103,
			"?" => 100,
			"/" => 99,
			'CMPOP' => 102
		}
	},
	{#State 276
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 290,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 277
		DEFAULT => -41
	},
	{#State 278
		DEFAULT => -39
	},
	{#State 279
		ACTIONS => {
			'FINAL' => 236,
			'CATCH' => 235
		},
		DEFAULT => -62,
		GOTOS => {
			'final' => 291
		}
	},
	{#State 280
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 292,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 281
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 293,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 282
		DEFAULT => -61
	},
	{#State 283
		DEFAULT => -84
	},
	{#State 284
		DEFAULT => -73
	},
	{#State 285
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 294,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 286
		ACTIONS => {
			";" => 295
		}
	},
	{#State 287
		ACTIONS => {
			";" => 296
		}
	},
	{#State 288
		DEFAULT => -46
	},
	{#State 289
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 297,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 290
		DEFAULT => -44
	},
	{#State 291
		DEFAULT => -60
	},
	{#State 292
		ACTIONS => {
			'FINAL' => 236,
			'CATCH' => 235
		},
		DEFAULT => -62,
		GOTOS => {
			'final' => 298
		}
	},
	{#State 293
		ACTIONS => {
			'FINAL' => 236,
			'CATCH' => 235
		},
		DEFAULT => -62,
		GOTOS => {
			'final' => 299
		}
	},
	{#State 294
		DEFAULT => -49
	},
	{#State 295
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 300,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 296
		ACTIONS => {
			'GET' => 38,
			'INCLUDE' => 39,
			'DEFAULT' => 40,
			'TEXT' => 2,
			'BREAK' => 1,
			'STOP' => 41,
			'META' => 42,
			'CLEAR' => 43,
			'FOR' => 44,
			"[" => 45,
			'NUMBER' => 5,
			'BLOCK' => 6,
			'SET' => 46,
			'USE' => 7,
			'NOT' => 47,
			'MACRO' => 48,
			'UNLESS' => 12,
			'PROCESS' => 14,
			'RETURN' => 17,
			'FILTER' => 20,
			";" => -17,
			"{" => 54,
			'LITERAL' => 24,
			"\${" => 56,
			'IF' => 26,
			"\"" => 57,
			'SWITCH' => 59,
			"\$" => 28,
			'PERL' => 30,
			'THROW' => 60,
			'IDENT' => 61,
			"(" => 32,
			'WHILE' => 34,
			'CALL' => 63,
			'RAWPERL' => 35,
			'TRY' => 36
		},
		DEFAULT => -3,
		GOTOS => {
			'lterm' => 18,
			'assign' => 52,
			'filter' => 53,
			'node' => 19,
			'condition' => 3,
			'setlist' => 4,
			'block' => 301,
			'sterm' => 21,
			'chunks' => 23,
			'use' => 55,
			'item' => 25,
			'atomexpr' => 8,
			'atomdir' => 27,
			'macro' => 58,
			'switch' => 29,
			'perl' => 31,
			'capture' => 49,
			'ident' => 9,
			'statement' => 62,
			'anonblock' => 10,
			'term' => 33,
			'chunk' => 11,
			'defblock' => 50,
			'loop' => 51,
			'rawperl' => 13,
			'directive' => 37,
			'expr' => 16,
			'try' => 15
		}
	},
	{#State 297
		ACTIONS => {
			'ELSE' => 253,
			'ELSIF' => 252
		},
		DEFAULT => -45,
		GOTOS => {
			'else' => 302
		}
	},
	{#State 298
		DEFAULT => -59
	},
	{#State 299
		DEFAULT => -58
	},
	{#State 300
		ACTIONS => {
			'CASE' => 272
		},
		DEFAULT => -50,
		GOTOS => {
			'case' => 303
		}
	},
	{#State 301
		DEFAULT => -48
	},
	{#State 302
		DEFAULT => -43
	},
	{#State 303
		DEFAULT => -47
	}
]; 


#========================================================================
# Rules
#========================================================================

$RULES = [
	[#Rule 0
		 '$start', 2, undef
	],
	[#Rule 1
		 'template', 1,
sub
#line 56 "Parser.yp"
{ $factory->template($_[1])           }
	],
	[#Rule 2
		 'block', 1,
sub
#line 59 "Parser.yp"
{ $factory->block($_[1])              }
	],
	[#Rule 3
		 'block', 0,
sub
#line 60 "Parser.yp"
{ $factory->block()                   }
	],
	[#Rule 4
		 'chunks', 2,
sub
#line 63 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
					if defined $_[2]; $_[1]           }
	],
	[#Rule 5
		 'chunks', 1,
sub
#line 65 "Parser.yp"
{ defined $_[1] ? [ $_[1] ] : [ ]     }
	],
	[#Rule 6
		 'chunk', 1,
sub
#line 68 "Parser.yp"
{ $factory->textblock($_[1])          }
	],
	[#Rule 7
		 'chunk', 2, undef
	],
	[#Rule 8
		 'statement', 1, undef
	],
	[#Rule 9
		 'statement', 1, undef
	],
	[#Rule 10
		 'statement', 1, undef
	],
	[#Rule 11
		 'statement', 1, undef
	],
	[#Rule 12
		 'statement', 1, undef
	],
	[#Rule 13
		 'statement', 1, undef
	],
	[#Rule 14
		 'statement', 1, undef
	],
	[#Rule 15
		 'statement', 1,
sub
#line 80 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 16
		 'statement', 2,
sub
#line 81 "Parser.yp"
{ $_[0]->add_metadata($_[2]);         }
	],
	[#Rule 17
		 'statement', 0, undef
	],
	[#Rule 18
		 'directive', 1,
sub
#line 85 "Parser.yp"
{ $factory->set($_[1])                }
	],
	[#Rule 19
		 'directive', 1, undef
	],
	[#Rule 20
		 'directive', 1, undef
	],
	[#Rule 21
		 'directive', 1, undef
	],
	[#Rule 22
		 'directive', 1, undef
	],
	[#Rule 23
		 'directive', 1, undef
	],
	[#Rule 24
		 'directive', 1, undef
	],
	[#Rule 25
		 'atomexpr', 1,
sub
#line 99 "Parser.yp"
{ $factory->get($_[1])                }
	],
	[#Rule 26
		 'atomexpr', 1, undef
	],
	[#Rule 27
		 'atomdir', 2,
sub
#line 103 "Parser.yp"
{ $factory->get($_[2])                }
	],
	[#Rule 28
		 'atomdir', 2,
sub
#line 104 "Parser.yp"
{ $factory->call($_[2])               }
	],
	[#Rule 29
		 'atomdir', 2,
sub
#line 105 "Parser.yp"
{ $factory->set($_[2])                }
	],
	[#Rule 30
		 'atomdir', 2,
sub
#line 106 "Parser.yp"
{ $factory->default($_[2])            }
	],
	[#Rule 31
		 'atomdir', 2,
sub
#line 107 "Parser.yp"
{ $factory->include($_[2])            }
	],
	[#Rule 32
		 'atomdir', 2,
sub
#line 108 "Parser.yp"
{ $factory->process($_[2])            }
	],
	[#Rule 33
		 'atomdir', 2,
sub
#line 110 "Parser.yp"
{ $factory->throw($_[2])              }
	],
	[#Rule 34
		 'atomdir', 1,
sub
#line 111 "Parser.yp"
{ $factory->clear()                   }
	],
	[#Rule 35
		 'atomdir', 1,
sub
#line 112 "Parser.yp"
{ $factory->break()                   }
	],
	[#Rule 36
		 'atomdir', 1,
sub
#line 113 "Parser.yp"
{ $factory->return()                  }
	],
	[#Rule 37
		 'atomdir', 1,
sub
#line 114 "Parser.yp"
{ $factory->stop()                    }
	],
	[#Rule 38
		 'atomdir', 1, undef
	],
	[#Rule 39
		 'condition', 6,
sub
#line 119 "Parser.yp"
{ $factory->if(@_[2, 4, 5])           }
	],
	[#Rule 40
		 'condition', 3,
sub
#line 120 "Parser.yp"
{ $factory->if(@_[3, 1])              }
	],
	[#Rule 41
		 'condition', 6,
sub
#line 122 "Parser.yp"
{ $factory->if("!($_[2])", @_[4, 5])  }
	],
	[#Rule 42
		 'condition', 3,
sub
#line 123 "Parser.yp"
{ $factory->if("!($_[3])", $_[1])     }
	],
	[#Rule 43
		 'else', 5,
sub
#line 127 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]);
				      $_[5];                              }
	],
	[#Rule 44
		 'else', 3,
sub
#line 129 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 45
		 'else', 0,
sub
#line 130 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 46
		 'switch', 6,
sub
#line 134 "Parser.yp"
{ $factory->switch(@_[2, 5])          }
	],
	[#Rule 47
		 'case', 5,
sub
#line 138 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2, 4] ]); 
				      $_[5];                              }
	],
	[#Rule 48
		 'case', 4,
sub
#line 140 "Parser.yp"
{ [ $_[4] ]                           }
	],
	[#Rule 49
		 'case', 3,
sub
#line 141 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 50
		 'case', 0,
sub
#line 142 "Parser.yp"
{ [ undef ]                           }
	],
	[#Rule 51
		 'loop', 5,
sub
#line 146 "Parser.yp"
{ $factory->foreach(@{$_[2]}, $_[4])      }
	],
	[#Rule 52
		 'loop', 3,
sub
#line 147 "Parser.yp"
{ $factory->foreach(@{$_[3]}, $_[1])      }
	],
	[#Rule 53
		 'loop', 5,
sub
#line 149 "Parser.yp"
{ $factory->while(@_[2, 4])           }
	],
	[#Rule 54
		 'loop', 3,
sub
#line 150 "Parser.yp"
{ $factory->while(@_[3, 1])           }
	],
	[#Rule 55
		 'loopvar', 4,
sub
#line 153 "Parser.yp"
{ [ @_[1, 3, 4] ]                     }
	],
	[#Rule 56
		 'loopvar', 2,
sub
#line 154 "Parser.yp"
{ [ 0, @_[1, 2] ]                     }
	],
	[#Rule 57
		 'try', 5,
sub
#line 158 "Parser.yp"
{ $factory->try(@_[3, 4])             }
	],
	[#Rule 58
		 'final', 5,
sub
#line 162 "Parser.yp"
{ unshift(@{$_[5]}, [ @_[2,4] ]);
				      $_[5];                              }
	],
	[#Rule 59
		 'final', 5,
sub
#line 165 "Parser.yp"
{ unshift(@{$_[5]}, [ undef, $_[4] ]);
				      $_[4];                              }
	],
	[#Rule 60
		 'final', 4,
sub
#line 168 "Parser.yp"
{ unshift(@{$_[4]}, [ undef, $_[3] ]);
				      $_[4];                              }
	],
	[#Rule 61
		 'final', 3,
sub
#line 170 "Parser.yp"
{ [ $_[3] ]                           }
	],
	[#Rule 62
		 'final', 0,
sub
#line 171 "Parser.yp"
{ [ 0 ] }
	],
	[#Rule 63
		 'use', 2,
sub
#line 174 "Parser.yp"
{ $factory->use($_[2])                }
	],
	[#Rule 64
		 '@1-2', 0,
sub
#line 177 "Parser.yp"
{ ${$_[0]->{ INPERL }}++;             }
	],
	[#Rule 65
		 'perl', 5,
sub
#line 178 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $factory->perl($_[4])               }
	],
	[#Rule 66
		 '@2-1', 0,
sub
#line 182 "Parser.yp"
{ ${$_[0]->{ INPERL }}++; 
				      $rawstart = ${$_[0]->{'LINE'}};     }
	],
	[#Rule 67
		 'rawperl', 5,
sub
#line 184 "Parser.yp"
{ ${$_[0]->{ INPERL }}--;
				      $factory->rawperl($_[4], $rawstart) }
	],
	[#Rule 68
		 'filter', 5,
sub
#line 189 "Parser.yp"
{ $factory->filter(@_[2,4])           }
	],
	[#Rule 69
		 'filter', 3,
sub
#line 191 "Parser.yp"
{ $factory->filter(@_[3,1])           }
	],
	[#Rule 70
		 'defblock', 5,
sub
#line 195 "Parser.yp"
{ $_[0]->define_block(@_[2, 4]); 
				      undef                               }
	],
	[#Rule 71
		 'anonblock', 4,
sub
#line 199 "Parser.yp"
{ $factory->anon_block($_[3])         }
	],
	[#Rule 72
		 'capture', 3,
sub
#line 202 "Parser.yp"
{ $factory->capture(@_[1, 3])         }
	],
	[#Rule 73
		 'macro', 6,
sub
#line 206 "Parser.yp"
{ $factory->macro(@_[2, 6, 4])        }
	],
	[#Rule 74
		 'macro', 3,
sub
#line 207 "Parser.yp"
{ $factory->macro(@_[2, 3])           }
	],
	[#Rule 75
		 'mdir', 1, undef
	],
	[#Rule 76
		 'mdir', 4,
sub
#line 211 "Parser.yp"
{ $_[3]                               }
	],
	[#Rule 77
		 'margs', 2,
sub
#line 214 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 78
		 'margs', 2,
sub
#line 215 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 79
		 'margs', 1,
sub
#line 216 "Parser.yp"
{ [ $_[1] ]                           }
	],
	[#Rule 80
		 'metadata', 2,
sub
#line 219 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 81
		 'metadata', 2, undef
	],
	[#Rule 82
		 'metadata', 1, undef
	],
	[#Rule 83
		 'meta', 3,
sub
#line 224 "Parser.yp"
{ for ($_[3]) { s/^'//; s/'$// }; 
					 [ @_[1,3] ] }
	],
	[#Rule 84
		 'meta', 5,
sub
#line 226 "Parser.yp"
{ [ @_[1,4] ] }
	],
	[#Rule 85
		 'meta', 3,
sub
#line 227 "Parser.yp"
{ [ @_[1,3] ] }
	],
	[#Rule 86
		 'term', 1, undef
	],
	[#Rule 87
		 'term', 1, undef
	],
	[#Rule 88
		 'lterm', 3,
sub
#line 239 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 89
		 'lterm', 3,
sub
#line 240 "Parser.yp"
{ "[ $_[2] ]"                         }
	],
	[#Rule 90
		 'lterm', 3,
sub
#line 241 "Parser.yp"
{ "{ $_[2] }"                         }
	],
	[#Rule 91
		 'sterm', 1,
sub
#line 244 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 92
		 'sterm', 3,
sub
#line 245 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 93
		 'sterm', 1, undef
	],
	[#Rule 94
		 'sterm', 1, undef
	],
	[#Rule 95
		 'list', 2,
sub
#line 250 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 96
		 'list', 2, undef
	],
	[#Rule 97
		 'list', 1, undef
	],
	[#Rule 98
		 'range', 3,
sub
#line 255 "Parser.yp"
{ $_[1] . '..' . $_[3]                }
	],
	[#Rule 99
		 'hash', 1, undef
	],
	[#Rule 100
		 'hash', 0, undef
	],
	[#Rule 101
		 'params', 2,
sub
#line 263 "Parser.yp"
{ "$_[1], $_[2]"                      }
	],
	[#Rule 102
		 'params', 2, undef
	],
	[#Rule 103
		 'params', 1, undef
	],
	[#Rule 104
		 'param', 3,
sub
#line 268 "Parser.yp"
{ "$_[1] => $_[3]"                    }
	],
	[#Rule 105
		 'param', 3,
sub
#line 269 "Parser.yp"
{ "'$_[1]' => $_[3]"                  }
	],
	[#Rule 106
		 'ident', 3,
sub
#line 272 "Parser.yp"
{ push(@{$_[1]}, @{$_[3]}); $_[1]     }
	],
	[#Rule 107
		 'ident', 3,
sub
#line 273 "Parser.yp"
{ push(@{$_[1]}, $_[3], 0); $_[1]     }
	],
	[#Rule 108
		 'ident', 1, undef
	],
	[#Rule 109
		 'node', 1,
sub
#line 277 "Parser.yp"
{ [ $_[1], 0 ]                        }
	],
	[#Rule 110
		 'node', 4,
sub
#line 278 "Parser.yp"
{ [ $_[1], $factory->args($_[3]) ]    }
	],
	[#Rule 111
		 'item', 1,
sub
#line 281 "Parser.yp"
{ "'$_[1]'"                           }
	],
	[#Rule 112
		 'item', 3,
sub
#line 282 "Parser.yp"
{ $_[2]                               }
	],
	[#Rule 113
		 'item', 2,
sub
#line 283 "Parser.yp"
{ $_[0]->{ V1DOLLAR }
				       ? "'$_[2]'" 
				       : $factory->ident(["'$_[2]'", 0])  }
	],
	[#Rule 114
		 'expr', 3,
sub
#line 288 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 115
		 'expr', 3,
sub
#line 289 "Parser.yp"
{ "$_[1] $_[2] $_[3]"                 }
	],
	[#Rule 116
		 'expr', 3,
sub
#line 290 "Parser.yp"
{ "$_[1] $CMPOP{ $_[2] } $_[3]"       }
	],
	[#Rule 117
		 'expr', 3,
sub
#line 291 "Parser.yp"
{ "($_[1]) && ($_[3])"                }
	],
	[#Rule 118
		 'expr', 3,
sub
#line 292 "Parser.yp"
{ "($_[1]) || ($_[3])"                }
	],
	[#Rule 119
		 'expr', 2,
sub
#line 293 "Parser.yp"
{ "!($_[2])"                          }
	],
	[#Rule 120
		 'expr', 5,
sub
#line 294 "Parser.yp"
{ "(($_[1]) ? ($_[3]) : ($_[5]))"     }
	],
	[#Rule 121
		 'expr', 3,
sub
#line 295 "Parser.yp"
{ $factory->assign(@{$_[2]})          }
	],
	[#Rule 122
		 'expr', 3,
sub
#line 296 "Parser.yp"
{ "($_[2])"                           }
	],
	[#Rule 123
		 'expr', 1, undef
	],
	[#Rule 124
		 'setlist', 2,
sub
#line 300 "Parser.yp"
{ push(@{$_[1]}, @{$_[2]}); $_[1]     }
	],
	[#Rule 125
		 'setlist', 2, undef
	],
	[#Rule 126
		 'setlist', 1, undef
	],
	[#Rule 127
		 'assign', 3,
sub
#line 306 "Parser.yp"
{ [ $_[1], $_[3] ]                    }
	],
	[#Rule 128
		 'assign', 3,
sub
#line 307 "Parser.yp"
{ [ @_[1,3] ]                         }
	],
	[#Rule 129
		 'args', 2,
sub
#line 314 "Parser.yp"
{ push(@{$_[1]}, $_[2]); $_[1]        }
	],
	[#Rule 130
		 'args', 2,
sub
#line 315 "Parser.yp"
{ push(@{$_[1]->[0]}, $_[2]); $_[1]   }
	],
	[#Rule 131
		 'args', 2,
sub
#line 316 "Parser.yp"
{ $_[1]                               }
	],
	[#Rule 132
		 'args', 0,
sub
#line 317 "Parser.yp"
{ [ [ ] ]                             }
	],
	[#Rule 133
		 'lnameargs', 3,
sub
#line 327 "Parser.yp"
{ push(@{$_[3]}, $_[1]); $_[3]        }
	],
	[#Rule 134
		 'lnameargs', 1, undef
	],
	[#Rule 135
		 'lvalue', 1, undef
	],
	[#Rule 136
		 'lvalue', 3,
sub
#line 332 "Parser.yp"
{ $factory->quoted($_[2])             }
	],
	[#Rule 137
		 'lvalue', 1, undef
	],
	[#Rule 138
		 'nameargs', 3,
sub
#line 336 "Parser.yp"
{ [ $factory->ident($_[2]), $_[3] ]   }
	],
	[#Rule 139
		 'nameargs', 4,
sub
#line 337 "Parser.yp"
{ [ $factory->quoted($_[2]), $_[4] ]  }
	],
	[#Rule 140
		 'nameargs', 2,
sub
#line 338 "Parser.yp"
{ [   $_[1],   $_[2] ]                }
	],
	[#Rule 141
		 'nameargs', 4,
sub
#line 339 "Parser.yp"
{ [ "'$_[1]'", $_[3] ]                }
	],
	[#Rule 142
		 'nameargs', 2,
sub
#line 340 "Parser.yp"
{ [ "'$_[1]'", $_[2] ]                }
	],
	[#Rule 143
		 'filename', 3,
sub
#line 343 "Parser.yp"
{ "$_[1].$_[3]"                       }
	],
	[#Rule 144
		 'filename', 1, undef
	],
	[#Rule 145
		 'filepart', 1, undef
	],
	[#Rule 146
		 'filepart', 1, undef
	],
	[#Rule 147
		 'filepart', 1, undef
	],
	[#Rule 148
		 'quoted', 2,
sub
#line 357 "Parser.yp"
{ push(@{$_[1]}, $_[2]) 
				          if defined $_[2]; $_[1]         }
	],
	[#Rule 149
		 'quoted', 0,
sub
#line 359 "Parser.yp"
{ [ ]                                 }
	],
	[#Rule 150
		 'quotable', 1,
sub
#line 362 "Parser.yp"
{ $factory->ident($_[1])              }
	],
	[#Rule 151
		 'quotable', 1,
sub
#line 363 "Parser.yp"
{ $factory->text($_[1])               }
	],
	[#Rule 152
		 'quotable', 1,
sub
#line 364 "Parser.yp"
{ undef                               }
	]
];



1;












