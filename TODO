===========================================
It's a real mess in here.  Don't even look.
===========================================
                                   
TODO
----

* move v1 Template::* to Template::v1::*.  Add 'version1' load flag
  as an EXPORT_FAIL to Tempate.pm to load v1.

* Add :preload use option to Template.pm to preload all modules.  Or should
  it be :noload and have preload by default?

* Note that \refs are not supported.  I don't know if they ever should
  be, but I think that some of the problems for which refs were conceived
  are still valid.

* Alternate parser back end which bypasses the stash, based on Doug's code.

* A 'FOR', like 'FOREACH' but without using an iterator.  You wouldn't get 
  the 'loop' reference to test 'first', 'last', etc., against, but it would
  be faster for those cases when you didn't need that.

* Memory leaks (there's something creating circular references and it's 
  probably glaringly obvious but I haven't bothered to look yet) (time 
  passes... I've bothered to look now - it looks like the Template::Provider
  but I haven't bothered to fix it yet)

* Change ttree to have knowledge of new config options.

* Improve tpage to do the same (i.e. have --define,  at least)

* A COMPILE_DIR option to compliment COMPILE_EXT, specifying an alternate
  directory in which to store compiled template documents. 

* Change filter factory interface to accept $context as first parameter.
  Dynamic dynamic filters can't grab context reference and some of them 
  need it.

* Add 'perl' filter, but can't do that until I fix the above.

* Filters and plugins cache may bloat.  Perhaps reset() should accept
  flags to clear BLOCKS, PLUGINS, FILTERS, etc.

* Do something (i.e. mail Lincoln) about the CGI special case in
  Template::Stash to work around the problem of CGI objects disclaiming
  membership of the UNVIERSAL class after the first method call.

* Note that no recursion checking is performed for BLOCKs, only 
  Template::Document instances.  Should be documented.

* There's still no easy way to [% INSERT file %] because there's no way
  to tell the provider not to compile a file.  We could keep file text 
  hanging around (nah) or pass options for provider retrievals such as
  DONT_USE_CACHE, DONT_CACHE, DONT_COMPILE.  Or should there be public 
  interfaces for load(), compile(), etc.?  Not sure.

* should output redirection be handled by the service rather than 
  Template.pm?

* change all hardcoded object isa tests to use $Template::Config:XXXXX
  e.g. if (UNIVERSAL::isa($foo, $Template::Config::CONTEXT)) 

* check [% INCLUDE $template %] works where $template is a Template::Document

* merge Directive into Parse.yp via template process?



-- TODONE --

* Template::Context include()/process() should work with raw CODE refs.

* any OUTPUT_PATH in Template.pm should be prepended to OUTPUT when OUTPUT
  is a file name.

* cleaned up Template::Iterator.  Now derived from Template::Base.
  Removed ACTION and ORDER now that they are supported as list pseudo
  methods in the Stash LIST_OPS.

* Fixed bug in Provider preventing updates files from being automatically
  reloaded.  Thanks to Perrin Harkins who provided the patch.

* Fixed bug in Template::Plugin::Datafile which was preventing a comment
  from being placed on the first line of the file.

* Fixed bug in parse grammer preventing commas in a META list

* Added cache persistance by writing real Perl to file (rather than
  the previous Data::Dumper dump of the opcode tree).  Had to
  re-organise a bunch of code around the parser/provider/document.  Activated 
  by COMPILE_EXT configuration item.

* Added a work-around in Template::Stash to the problem of CGI disclaiming
  membership of the UNIVERSAL class after the first method call.

* block persistance - sometimes need to define BLOCKs that persist 
  through service invocations (AUTO_RESET => 0).

* fix \@ quoting (and others) in Directive (Perrin reported / Chuck patched)

* Added Date plugin and test, as provided by Thierry-Michel Barral and abw.

* Integrate changes to Template::Test from version 1.07 and beyond.  Now 
  supports -- process - option in expect, mainly for use of t/date.t et al.

* Integrated new upper and lower filters from 1.08, and '|' alias for FILTER
  from 1.07.

* Added new directive.t test to test chomping and comments.

* should be able to pre-define BLOCKS as text which is auto-pre-compiled 
  - may rely on above to get access to Provider's PARSER object.

* copied XML plugins and tests

* fixed TRIM option to work with all BLOCKs and templates.  Moved TRIMing
  operation into context process() and include() methods.  Also changed
  service to call $context->process($template) rather than call the sub/
  doc itself, thus ensuring that the output can get TRIMmed.

* Fix Plugin.pm - it's still basically v1 code and much can be discarded

* Added --define option to ttree.

* copy over new plugins and filters from v1.07

* Move Template::Utils::output somewhere better (Template.pm?) and get rid
  of Template::Utils

* fixed bug in Context filter() provider method which wasn't caching 
  filters with args.

* [% CASE DEFAULT %] is now an alias for [% CASE %] (the default case),
  in consistency with [% CATCH DEFAULT %] / [% CATCH %]


