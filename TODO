* Fix Plugin.pm

* Change ttree to have knowledge of new config options

* Improve tpage to do the same

* A COMPILE_DIR option to compliment COMPILE_EXT, specifying an alternate
  directory in which to store compiled template documents.

* Change filter factory interface to accept $context as first parameter?

* Do something (i.e. mail Lincoln) about the CGI special case in
  Template::Stash to work around the problem of CGI objects disclaiming
  membership of the UNVIERSAL class after the first method call.

* Change docs/examples to uniformly name the template variable hash as
  '$replace'.

* Modules are mostly autoloaded.  Need PRELOAD option to preload all relevant
  modules?  (e.g. for mod_perl)

* a FOR, like FOREACH but without using an iterator?

* block persistance - sometimes need to define BLOCKs that persist 
  through service invocations (AUTO_RESET => 0).

* BLOCK caching is still a little messy - it works, but with belt and braces.
  Need to finalise behaviour wrt importing BLOCK defs via INCLUDE/PROCESS.

* note that no recursion checking is performed for BLOCKs, only 
  Template::Document instances

* options for provider retrievals such as DONT_USE_CACHE, DONT_CACHE, 
  DONT_COMPILE (e.g. for [% INSERT file %] directive), or should there
  be public interfaces for load(), compile(), etc.?

* should be able to pre-define BLOCKS as text which is auto-pre-compiled 
  - may rely on above to get access to Provider's PARSER object.

* move Template::Utils::output somewhere better (Template.pm?) and get rid
  of Template::Utils

* should output redirection be handled by the service rather than 
  Template.pm?

* change all hardcoded object isa tests to use $Template::Config:XXXXX
  e.g. if (UNIVERSAL::isa($foo, $Template::Config::CONTEXT)) 

* filters and plugins cache may bloat...

* dynamic filters can't grab context reference - this screws up 'redirect'
  filter which needs fixing/replacing anyway

* add 'perl' filter - needs context access to determine if allowed or not.

* check [% INCLUDE $template %] works where $template is a Template::Document

* copy over new plugins and filters from v1.07, changes to Template::Test,
  and any other changes...

* fix \@ quoting (and others) in Directive and email dude who sent patch.

* merge Directive into Parse.yp via template?

-- DONE --

* Template::Context include()/process() should work with raw CODE refs.

* Complete Template::Service error handling.

* any OUTPUT_PATH in Template.pm should be prepended to OUTPUT when OUTPUT
  is a file name.

* add new TAG_STYLE entries and allows [% TAGS style %] directive

* Template::Document's handling of STOP needs looking at

* ERROR may be a single value instead of a hash (default)

* fixed if/elsif generation

* optimised FOREACH to only use an iterator if already so ( but note that
  this got changed again later)

* cleaned up Template::Iterator.  Now derived from Template::Base.
  Removed ACTION and ORDER now that they are supported as list pseudo
  methods in the Stash LIST_OPS.

* Fixed bug in Provider preventing updates files from being automatically
  reloaded.  Thanks to Perrin Harkins who provided the patch.

* Fixed bug in Template::Plugin::Datafile which was preventing a comment
  from being placed on the first line of the file.

* Fixed bug in parse grammer preventing commas in a META list

* Added cache persistance.  Had to re-organise a bunch of code around the 
  parser/provider/document.  Activated by COMPILE_EXT configuration item.

* Added a work-around in Template::Stash to the problem of CGI disclaiming
  membership of the UNIVERSAL class after the first method call.

