base.t          Test the Template::Base.pm module.
binop.t         Test binary operators
block.t         Test BLOCK definition
capture.t       Capture directive output and assign to a variable
cgi.t           Test the CGI script
compile1.t      Compile templates to Perl code and save to file
compile2.t      Reload above compiled templates without re-parsing
compile3.t      Test that touching source template causes re-compilation 
config.t        Test the Template::Config factory module
context.t       Test the Template::Context module
datafile.t      Test the Datafile plugin (Template::Plugin::Datafile)
document.t      Test the Template::Document module
evalperl.t      Test the evaluation of PERL and RAWPERL blocks
except.t        Test the Template::Exception module
filter.t        Test the FILTER directive and various filters
foreach.t       Test the FOREACH directive
format.t        Test the Format plugin (Template::Plugin::Format)
include.t       Test the INCLUDE directive
iterator.t
TODO:

plugins.t to test PLUGIN_BASE, etc.

NOTE: this is an older list.  Bit of a mess, don't trust anything here.

merged literal.t into vars.t
split vars.t into vars.t and varsv1.t (VERSION 1 compatibility) - OK
added base.t to test Template::Base - OK
chomp.t, postchomp.t and prechomp.t - OK
binop.t - OK
call.t - OK
code.t - OK (includes some TRAPpage)
filter.t - OK

literal :     'foo' = bar
directive + multi + comment + block -> directives
get + set + default + call + vars + global + interp

break into while/foreach/if, etc.

cache -> general cache/provider tests

catch into trap

format => plugins
-------------------------------

       abspaths
del    accessor
ok     binop
m1     block
m?     break
m      cache
--     call          merged into vars.t and varsv1.t
fix    case          CASE sensitivity of directive keywords
m      catch         rename to TRAP
fix    cgi           CGI plugin
ok     chomp         merge in postchomp/prechomp?
-?     code          part merged into vars.t/varsv1.t, throwing to go in?
m1     comment
fix    constants
fixm   context       new tests
del?   datafile      Datafile plugin
--     default       merged into vars.t and varsv1.t
fix    define
m      directive
fix    dom
del?   error
fix    exception
ok     filter
ok     foreach       
--     foriter       merged into with foreach
fix/m  format
--     get           merged into vars.t and varsv1.t
--     global        merged into vars.t and varsv1.t
ok     hash
ok     if            if.t + unless.t
m?     import
fix    include
--     interp        merged into vars.t and varsv1.t
m      iterator      merge with foreach or general iterator test?
fix    list          broken because of BLOCK privatisation
m      listndx       merge with list
m      literal       merge into vars
?      macro         MACRO not yet implemented
m      multi         merge into directives
m      named         merge with vars/code/get?
fix    object        big mess
fix    output        OUTPUT_PATH not yet implemented
fix/d  parser
fix    perl
fix/m  postchomp
fix/m  prechomp
m?     predefs       merge into stash?
       preproc
m?     private       merge into stash/object/hash?
       process
       recurse
?      ref           refs not implemented (yet/at all?)
m      return        merge with break/stop/etc?
fix    rss
--     set           merged into vars.t and varsv1.t
m      stash
       stop
       table
m      tag           merge with tags
m      tags          merge with tag
m      text          merge into directives
fix/m  throw         merge with try/catch?
--     unless        merged into if.t
fix    url
       userdef
ok     vars          merge of many tests
ok     varsv1        ditto for VERSION => 1 compatability
fix    while         mainly ok, but broken due to (a = b) not working

TODO
----
* extract throwing subs from code.t and use in try/throw/catch/trap/etc.

--- directives ---
[% sole %]
[% many %] [% more %]
[% start %] text
text [% middle %] text
text [% end %]

